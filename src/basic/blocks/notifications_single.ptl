SetVar(key_address,Address(#key_id#))
SetVar(this_page, @1notifications_list).(this_table, @1notifications)
Include(@1pager_header)

SetTitle("$@1personal_notifics$")
SetVar(role_admin, EcosysParam(Ecosystem:1, Name: role_admin))
If(And(#role_id#==#role_admin#,#ecosystem_id#==1)){
    DBFind(@1ecosystems).Count(ecos_count)
    If(#ecos_count#>1){
        AddToolButton(Title: $@1broadcast$, Page: @1notifications_broadcast, Icon: icon-plus).Popup(Header: $@1notifications_broadcast$, Width: "50")
    }
}
AddToolButton(Title: $@1send$, Page: @1notifications_single_send, Icon: icon-plus).Popup(Header: $@1send$, Width: "50")

If(GetVar(search)){
    SetVar(where, {"ecosystem": #ecosystem_id#, "recipient->address": #key_address#, {"$and": [{"notification->type":1}, {"$or": [{"sender->address":{"$like": "#search#"}}, {"sender->role_name":{"$like": "#search#"}}]}]}})
}.Else{
    SetVar(where, {"ecosystem": #ecosystem_id#, "notification->type": 1, "recipient->address": #key_address#})
}

Div(list-group-item ml-lg mr-lg pt-lg){
    SetVar(search_name, LangRes(@1sender)).(page_par, #type#)
    Include(@1search)
}

DBFind(#this_table#, src).Where(#where#).Order([{closed:"1"}, {id:"-1"}]).Limit(#pager_limit#).Offset(#pager_offset#).Columns("id,recipient->address,sender->type,sender->address,sender->role_id,sender->role_name,notification->icon,notification->popup,page_name,page_params,date_created,date_closed,closed").Custom(custom_id){
    If(#closed# == 0){
        SetVar(Name: style_text, Value: "text-normal")
        SetVar(Name: style_link, Value: "text-primary")
    }.Else{
        SetVar(Name: style_text, Value: "text-muted")
        SetVar(Name: style_link, Value: "text-muted")
    }
    Span(Class: #style_text#, Body: #id#)
}.Custom(custom_recipient){
    DBFind(@1members).Where({address:#sender.address#, ecosystem:#ecosystem_id#}).Columns("member_name,image_id").Vars(r)
    If(#r_member_name#!=""){
        SetVar(recipient_name,#r_member_name#)
    }.Else{
        SetVar(recipient_name,#recipient.address#)
    }
    LinkPage(Class: #style_link# h5 text-bold, Page: @1profile_view, PageParams: "Address=#recipient.address#"){
        If(#r_image_id#>0){
            Image(Src: Binary().ById(#r_image_id#), Class: img-circle mr).Style(width: 30px; border: 1px solid #5A5D63;)
            Span(#recipient_name#)
        }.Else{
            Div(){
                Em(Class: fa icon-user fa-2x mr)
                Span(#recipient_name#)
            }.Style(display:flex; align-items:center;)
        }
    }
}.Custom(custom_arrow){
    Em(Class: fa fa-long-arrow-right fa-1x #style_text#)
}.Custom(custom_sender){
    If(#sender.type#==1){
        DBFind(@1members).Where({address:#sender.address#, ecosystem:#ecosystem_id#}).Columns("member_name,image_id").Vars(s)
        If(#s_member_name#!=""){
            SetVar(sender_name,#s_member_name#)
        }.Else{
            SetVar(sender_name,#sender.address#)
        }
        LinkPage(Class: #style_link# h5 text-bold, Page: @1profile_view, PageParams: "Address=#sender.address#"){
            Span(Body: #sender_name#)
        }
    }
    If(#sender.type#==2){
        LinkPage(Class: #style_link# h5 text-bold, Page: @1roles_view, PageParams: "v_role_id=#sender.role_id#"){
            Span(Body: #sender.role_name#)
        }
    }
}.Custom(custom_icon){
    Em(Class: fa #notification.icon# fa-2x #style_text#)
}.Custom(custom_page){
    If(#notification.popup#==1){
        Button(Class: btn-link h5 text-bold m0, Page: #page_name#, PageParams: "notific_id=#id#"){
            Span(Class: #style_link#, Body: #page_name#)
        }.Popup(Header: $@1notifications_view$, Width: "40")
    }.Else{
        Button(Class: btn-link h5 text-bold m0, Page: #page_name#, PageParams: "notific_id=#id#"){
            Span(Class: #style_link#, Body: #page_name#)
        }
    }
}.Custom(custom_date){
    Div(Class: #style_text# h6 m0, Body: DateTime(DateTime: #date_created#, Format: "DD.MM.YYYY HH:MI"))
    Div(Class: #style_text# h6 m0, Body: DateTime(DateTime: #date_closed#, Format: "DD.MM.YYYY HH:MI"))
}.Custom(custom_status){
    If(#closed# == 0){
        Span(Class: #style_text#, Body: LangRes(@1active))
    }.Else{
        Span(Class: #style_text#, Body: LangRes(@1closed))
    }
}.Custom(actions){
    Div(pull-right){
        If(#closed# == 0){
            Button(Body: Em(Class: fa fa-trash), Class: btn btn-default, Contract: @1NotificationsClose, Params: "notific_id=#id#", Page: @1notifications_list).Alert(Text: "$@1want_close_notification$", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)
        }
    }
}.Count(count)

Div(fullscreen){
    Div(table-responsive ml-lg mr-lg){
        Div(list-group-item){
            If(#count# > 0){
                Table(src, "$@1icon$=custom_icon,$@1page$=custom_page,$@1sender$=custom_sender,=custom_arrow,$@1recipient$=custom_recipient,$@1sent$ / $@1closed$=custom_date,$@1status$=custom_status,=actions")
            }.Else{
                Div(Class: text-center h4 text-muted, Body: "$@1personal_notifics$ $@1not_founded$")
            }
        }.Style(
            margin-top:-15px;
            tbody > tr:nth-of-type(odd) {
                background-color: #f8f9fc;
            }
        )
    }
}
Div(mt-sm ml-lg mr-sm mb-sm){
    Include(@1pager)
}