If(#vID# == ""){
    DBFind("@1buffer_data").Columns("value->voting_id").Where({"key": "voting", "account": "#account_id#", "ecosystem": "#ecosystem_id#"}).Vars(buffer)
    If(#buffer_value_voting_id#>0){
        SetVar(vID, #buffer_value_voting_id#)
    }
}
If(#vID# > 0){
    If(#candidates#==""){
        SetVar(candidates,0)
    }
    If(#back_page#){}.Else{
        SetVar(back_page,@1voting_view)
    }
    DBFind("@1votings", src_voting).WhereId(#vID#).Columns("id,voting->name,optional->role_id,optional->role_vacancies,optional->contract_accept,optional->contract_reject,optional->contract_accept_params,optional->contract_reject_params").Vars(instance)
    DBFind("@1votings_subject", src_subject).Where({"voting_id": "#vID#"}).Columns("id,subject->account,subject->member_name").Custom(_address){
        SetVar(candidates,"#candidates#,#subject.account#")
        #subject.account#
    }.Custom(_member){
        LinkPage(Class: text-primary h5 text-bold, Page: @1profile_view, PageParams: "v_account=#subject.account#"){
            Span(Body: #subject.member_name#)
        }
    }

    DBFind("@1roles", src_roles).Where({"ecosystem": "#ecosystem_id#", "role_type": 2, "deleted": 0}).Columns("id,role_name").Count(elective_roles_count)
    If(#elective_roles_count# > 0){
        Form(){
            Input(Name: VotingId, Type: hidden, Value: #vID#)
            Div(form-group){
                Div(row){
                    Div(col-md-3 mt-sm text-right){
                        Label(){
                            Span(Body: LangRes(@1candidates)).(Class: text-danger, Body:*)
                        }
                    }
                    Div(col-md-9 mc-sm text-left){
                        Div(input-group){
                            If(#MemberAccount#){
                                Input(Name: m_name, Disabled: 1, Placeholder: "xxxx-xxxx-xxxx-xxxx-xxxx", Value: #MemberAccount#)
                            }.Else{
                                Input(Name: m_name, Disabled: 1, Placeholder: "xxxx-xxxx-xxxx-xxxx-xxxx")
                            }
                            Div(input-group-btn){
                                Button(Class: btn bg-gray-lighter fa fa-caret-down buttons, Page: @1select_wallet, PageParams: "back_page=@1voting_decision_election,back_header=$@1voting_subject$,EcosystemId=#ecosystem_id#,Id=#vID#").Popup(Header: $@1member$, Width: "50")
                                If(#MemberAccount#){
                                    Button(Class: btn bg-gray-lighter fa fa-plus buttons, Page: @1voting_decision_election, PageParams: "vID=#vID#,back_page=#back_page#", Contract: @1VotingSubjectCandidates, Params: "MemberAccount=#MemberAccount#").Popup(50, $@1subject_voting$)
                                }
                            }.Style(
                                .buttons{border: 1px solid #dde6e9;}
                            )
                        }
                    }
                }
                If(Or(#members_count#>0,#candidates#!=0)){
                    Div(row){
                        Div(col-sm-9 col-sm-offset-3){
                            Table(src_subject, "$@1candidates$=_member,=_address").Style(margin-bottom: 5px;)
                        }
                    }
                }
            }
            Div(form-group){
                Div(row){
                    Div(col-md-3 mt-sm text-right){
                        Label(){
                            Span(Body: LangRes(@1role)).(Class: text-danger, Body:*)
                        }
                    }
                    Div(col-md-9 mb-sm text-left){
                        Select(Name: RoleId, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #instance_optional_role_id#)
                    }
                }

                Div(row){
                    Div(col-md-3 mt-sm text-right){
                        Label(){
                            Span(Body: LangRes(@1vacancies)).(Class: text-danger, Body:*)
                        }
                    }
                    Div(col-md-9 mc-sm text-left){
                        Input(Name: Vacancies, Class: form-control, Type: Number, Value: #instance_optional_role_vacancies#)
                    }
                }
            }
            Div(form-group){
                Div(row){
                    Div(col-md-3 mt-sm text-right){
                        Label(){
                            Span(Body: LangRes(@1contract_accept))
                        }
                    }
                    Div(col-md-9 mb-sm text-left){
                        Input(Name: OptContractAcceptName, Value: #instance_optional_contract_accept#, Placeholder: "$@1contract_accept_des$").Validate(minLength:3, maxLength:255)
                        InputErr(Name: OptContractAcceptName, minLength: $@1validate_name$, maxLength: $@1validate_name$)
                    }
                }
                Div(row){
                    Div(col-md-3 mt-sm text-right){
                        Label(){
                            Span(Body: LangRes(@1params))
                        }
                    }
                    Div(col-md-9 mb-sm text-left){
                        Input(Name: OptContractAcceptParams, Value: #instance_optional_contract_accept_params#, Placeholder: "$@1contract_params_des$")
                    }
                }
                Div(row){
                    Div(col-md-3 mt-sm text-right){
                        Label(){
                            Span(Body: LangRes(@1contract_reject))
                        }
                    }
                    Div(col-md-9 mb-sm text-left){
                        Input(Name: OptContractRejectName, Value: #instance_optional_contract_reject#, Placeholder: "$@1contract_reject_des$").Validate(minLength:3, maxLength:255)
                        InputErr(Name: OptContractRejectName, minLength: $@1validate_name$, maxLength: $@1validate_name$)
                    }
                }
                Div(row){
                    Div(col-md-3 mt-sm text-right){
                        Label(){
                            Span(Body: LangRes(@1params))
                        }
                    }
                    Div(col-md-9 mc-sm text-left){
                        Input(Name: OptContractRejectParams, Value: #instance_optional_contract_reject_params#, Placeholder: "$@1contract_params_des$")
                    }
                }
            }
            If(#toPageInvite#==1){
                Button(Body: LangRes(@1save), Class: btn btn-primary pull-right, Page: @1voting_invite, PageParams: "vID=#vID#", Contract: @1VotingSubjectSettings).Popup(60, $@1participants_add$)
            }.Else{
                Button(Body: LangRes(@1save), Class: btn btn-primary pull-right, Page: #back_page#, PageParams: "vID=#vID#", Contract: @1VotingSubjectSettings)
            }
            Button(Body: LangRes(@1back), Class: btn btn-default pull-right, Page: #back_page#, PageParams: "vID=#vID#")
        }
    }.Else{
        Div(row){
            Div(col-md-12 text-center h4){
                P(LangRes(@1elective_roles_not_found))
                Button(Class: btn btn-link, Page: @1roles_create, PageParams: "vID=#vID#,back_page=#back_page#"){
                    Span(Class: h4, Body: LangRes(@1create_role))
                }.Popup(50, $@1edit_role$)
            }
        }
    }
}.Else{
    Div(md-12 alert alert-danger text-center){
        Span(Body: LangRes(@1attention))
    }
}