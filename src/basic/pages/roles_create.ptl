DBFind(@1applications).Columns("name,id").Where({"ecosystem": 1, "name": "Basic"}).Vars(application)
DBFind(@1roles, src_roles).Columns("id,role_name").Where({"ecosystem": #ecosystem_id#, "deleted": 0}).Order(id)
If(#back_page#==""){
   SetVar(back_page, "@1roles_list")
}

If(#rid#==""){
    SetVar(title, $@1new_role$)
    DBFind(@1buffer_data).Where({"ecosystem": #ecosystem_id#, "key":"roles_access", "member_id": #key_id#}).Columns("id,key,member_id,ecosystem,value->roles_access,value->role_type,value->role_name").Vars(buffer)
    AppParam(Source: app_roles_types, Ecosystem: 1, App: #application_id#, Name: roles_types_selection)
    If(And(#buffer_value_roles_access#!="NULL",#buffer_value_roles_access#!="",#buffer_value_roles_access#!="[]")){
        DBFind(@1roles, src_roles_access).Where({"ecosystem": #ecosystem_id#, "id": {"$in": #buffer_value_roles_access#}}).Columns("id,role_name").Count(ra_count).Order("role_name")
    }
}.Else{
    SetVar(title, $@1edit_role$)
    DBFind(@1roles).Where({"ecosystem": #ecosystem_id#, "id": #rid#}).Columns("roles_access,role_type,role_name").Vars(r)
    SetVar(role_type, AppParam(Ecosystem: 1, App: #application_id#, Name: roles_types, Index: #r_role_type#))
    If(And(#r_roles_access#!="NULL",#r_roles_access#!="",#r_roles_access#!="[]")){
        DBFind(@1roles, src_roles_access).Where({"ecosystem": #ecosystem_id#, "id": {"$in": #r_roles_access#}}).Columns("id,role_name").Count(ra_count).Order("role_name")
    }
}

Form(){
    Div(row){
        Div(col-md-3 mt-sm text-right){
            Label(){
                LangRes(@1name)
                Span(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            If(#rid#==""){
                Input(Name: role_name, Value: #buffer_value_role_name#).Validate(minLength:3, maxLength:30)
                InputErr(Name: role_name, minLength: $@1validate_role_name$, maxLength: $@1validate_role_name$)
            }.Else{
                Input(Name: role_name, Value: #r_role_name#, Disabled: 1)
            }
        }
    }
    Div(row mt-sm){
        Div(col-md-3 mt-sm text-right){
            Label(){
                LangRes(@1type)
                Span(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            If(#rid#==""){
                Select(Name: role_type, Source: app_roles_types, NameColumn: name, ValueColumn: id, Value: #buffer_value_role_type#)
            }.Else{
                Input(Name: role_type, Value: #role_type#, Disabled: 1)  
            }
        }
    }
    Div(row mt-sm){
        Div(col-md-3 mt-sm text-right){
            Label(){
                LangRes(@1roles_access)
                Span(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            Div(input-group mb-sm){
                Select(Name: roles_managers, Source: src_roles, NameColumn: role_name, ValueColumn: id)
                Div(input-group-btn){
                    Button(Class: btn bg-gray-lighter fa fa-plus mtl buttons, Page: @1roles_create, PageParams: "rid=#rid#", Contract: @1RolesAccessManager, Params: "Rid=#rid#,ManagerRid=Val(roles_managers),Action=add").Popup(50, #title#)
                }
            }
            If(#ra_count#>0){
                ForList(src_roles_access){
                    SetVar(btn_class, "bg-gray-lighter")
                    If(#id#==#role_id#){
                        SetVar(btn_class, "bg-primary")
                    }
                    Button(Class: btn-xs #btn_class# mr-sm mb-sm, Page: @1roles_create, PageParams: "rid=#rid#", Contract: @1RolesAccessManager, Params: "Rid=#rid#,ManagerRid=#id#,Action=remove", Body: Span(Class: fa fa-remove) #role_name#).Popup(50, #title#)
                }
            }
        }
    }
    If(#rid#==""){
        Button(Body: LangRes(@1create), Class: btn bg-primary pull-right mt, Page: #back_page#, PageParams: "vID=#vID#", Contract: @1RolesCreate)
    }
    Button(Body: LangRes(@1back), Class: btn bg-gray-lighter pull-right mt, Page: #back_page#, PageParams: "vID=#vID#")
}.Style(
    .buttons{border: 1px solid #dde6e9;}
)