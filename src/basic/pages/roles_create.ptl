DBFind(@1applications).Columns("name,id").Where({ecosystem:1, "name": "Basic"}).Vars(application)

DBFind(@1roles).Columns("role_name,id").Where({ecosystem:#ecosystem_id#, deleted:0, id:#role_id#}).Order(id).Vars(admin_role)
SetVar(admin_role_name, #admin_role_role_name#)
SetVar(buffer_value_role_name,)
If(GetVar(rid)){
    DBFind(@1roles).Where({ecosystem:#ecosystem_id#, id:#rid#}).Columns("roles_access,id,role_type,role_name").Vars(role)
    SetVar(title, $@1edit_role$)
    SetVar(role_type, AppParam(Ecosystem:1, App:#application_id#, Name: roles_types_selection, Index: #role_role_type#))

    If(And(#role_roles_access#!="NULL",#role_roles_access#!="",#role_roles_access#!="[]")){
        DBFind(@1roles,src_roles_access).Where({ecosystem:#ecosystem_id#, id:{"$in":#role_roles_access#}}).Columns("id,role_name").Order(role_name)
    }
}.Else{
    SetVar(rid, 0)
    SetVar(title, $@1new_role$)
    AppParam(Ecosystem:1, App: #application_id#, Name: roles_types_selection, Source: app_roles_types)

    DBFind(@1buffer_data).Columns(value).Where({ecosystem:#ecosystem_id#, "key": "roles_access", "member_id": #key_id#}).Columns("id,key,member_id,ecosystem,value->roles_access,value->role_type,value->role_name").Vars(buffer)
    If(And(#buffer_value_roles_access#!="NULL",#buffer_value_roles_access#!="",#buffer_value_roles_access#!="[]",GetVar(buffer_value_roles_access)!="")){
        DBFind(@1roles, src_roles_access).Columns("id,role_name").Where({ecosystem:#ecosystem_id#, "id": {"$in": #buffer_value_roles_access#}}).Order("role_name")
    }
}
DBFind(@1roles, src_roles).Columns("id,role_name").Where({ecosystem:#ecosystem_id#, "deleted":0}).Order(id)
If(GetVar(back_page)){}.Else{
    SetVar(back_page,"@1roles_list")
}
If(GetVar(vID)){}.Else{
    SetVar(vID,)
}

Form(){
    Div(row){
        Div(col-md-3 mt-sm text-right){
            Label(){
                LangRes(@1name)
                If(#rid# < 1){
                    Span(*,text-danger)
                }
            }
        }
        Div(col-md-9 text-left){
            If(#rid# > 0){
                Div(text-muted mt-sm){
                    #role_role_name#
                }
            }.Else{
                Input(Name: role_name,Value: #buffer_value_role_name#).Validate(minLength:3, maxLength:30)
                InputErr(Name: role_name, minLength: $@1validate_role_name$, maxLength: $@1validate_role_name$)
            }
        }
    }
    Div(row mt-sm){
        Div(col-md-3 mt-sm text-right){
            Label(){
                LangRes(@1type)
                If(#rid# < 1){
                    Span(*,text-danger)
                }
            }
        }
        Div(col-md-9 text-left){
            If(#rid# > 0){
                Div(text-muted mt-sm){
                    #role_type#
                }
            }.Else{
                Select(Name: role_type, Source: app_roles_types, NameColumn: name, ValueColumn: id,Value: #buffer_value_role_type#)
            }
        }
    }
    Div(row mt-sm){
        Div(col-md-3 mt-sm text-right){
            Label(){
                LangRes(@1roles_access)
                If(#rid# < 1){
                    Span(*,text-danger)
                }
            }
        }
        Div(col-md-9 text-left){
            Div(input-group mb-sm){
                Select(Name: roles_managers, Source: src_roles, NameColumn: role_name, ValueColumn: id)
                Div(input-group-btn){
                    Button(Class: btn btn-primary fa fa-plus, Page: @1roles_create, PageParams:"rid=#rid#", Contract: @1RolesAccessManager, Params:"Rid=#rid#,ManagerRid=Val(roles_managers),Action=add").Popup(50, #title#)
                }
            }
            ForList(src_roles_access){
                SetVar(btn_class,"btn-default")
                If(#id#==#role_id#){
                    SetVar(btn_class,"btn-info")
                }
                Button(Class: btn #btn_class# mr-sm mb-sm, Page: @1roles_create, PageParams:"rid=#rid#", Contract: @1RolesAccessManager, Params:"Rid=#rid#,ManagerRid=#id#,Action=remove", Body: Span(Class: fa fa-remove) #role_name#).Popup(50, #title#)
            }
        }
    }
    If(#rid#>0){}.Else{
        Button(Body: LangRes(@1create), Class: btn btn-primary pull-right mt, Page: #back_page#, PageParams: "vID=#vID#", Contract: @1RolesCreate)
    }
    Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: #back_page#, PageParams: "vID=#vID#")
}