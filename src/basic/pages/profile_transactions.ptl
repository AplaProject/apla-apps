SetVar(this_page, @1profile_transactions).(this_table, @1history)
Include(@1pager_header)

SetTitle($@1transactions_history$)

If(#ecosystem_id# == 1){
    SetVar(token_title, "APLA")
}.Else{
    DBFind("@1ecosystems").Where({"id": #ecosystem_id#}).Vars("custom")
    SetVar(token_title, #custom_token_title#)
}

If(GetVar(wallet) == ""){
    SetVar(wallet, 0)
}

If(GetVar(new_filter)){
    If(#show_fees#!="true"){
        SetVar(filter1, {"type": {$neq: 1}})
    }
    If(#wallet# != 0){
        SetVar(filter2, {$or: [{$and: [{"sender_id": #key_id#}, {"recipient_id": #wallet#}]}, {$and: [{"sender_id": #wallet#}, {"recipient_id": #key_id#}]}]})
    }.Else{
        SetVar(filter2, {$or: [{"sender_id":#key_id#}, {"recipient_id":#key_id#}]})
    }
    If(#lower_limit#>0){
        If(#upper_limit#>0){
            SetVar(filter3, {"amount": [{$gte: Calculate(Exp: #lower_limit#*1000000000000000000, Type: money)}, {$lte: Calculate(Exp: #upper_limit#*1000000000000000000, Type: money)}]})
        }.Else{
            SetVar(filter3, {"amount": {$gte: Calculate(Exp: #lower_limit#*1000000000000000000, Type: money)}})
        }
    }.ElseIf(#upper_limit#>0){
        SetVar(filter3, {"amount": {$lte: Calculate(Exp: #upper_limit#*1000000000000000000, Type: money)}})
    }
    SetVar(filters, {$and: [{"ecosystem":#ecosystem_id#}, GetVar(filter1), GetVar(filter2), GetVar(filter3)]})
    SetVar(page_par, #filters#)
}.ElseIf(GetVar(page_par)){
    SetVar(filters, #page_par#)
}.Else{
    SetVar(filters, {$and: [{"ecosystem":#ecosystem_id#}, {"type": {$neq: 1}}, {$or: [{"sender_id":#key_id#}, {"recipient_id":#key_id#}]}]})
}

If(GetVar(search)!=""){
    SetVar(where, {$and: [GetVar(filters), {"comment": {$like: #search#}}]})
}.Else{
    SetVar(where, GetVar(filters)).(search,)
}

Div(mr-lg text-right){
    Button(Page: @1profile_transactions_filter, Class: btn bg-gray-lighter mr-sm, PageParams: "show_fees=#show_fees#,MemberId=#wallet#,lower_limit=#lower_limit#,upper_limit=#upper_limit#", Body: Em(Class: fa fa-filter) $@1filter$).Popup(Header: $@1filter$, Width: "50")
    If(GetVar(page_par)){
        Button(Page: #this_page#, Class: btn bg-gray-lighter mr-sm, Body: Em(Class: fa fa-close))
    }
}.Style(margin-top: -33px; z-index: 1001;)
Div(list-group-item ml-lg mr-lg pt-lg){
    SetVar(search_name, LangRes(@1comment))
    Include(@1search)
}

DBFind(@1applications).Where({ecosystem:1, name:"Basic"}).Columns("name,id").Vars(application)

DBFind(@1history, src_history).Where(#where#).Order({"id": -1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(sender_wallet){
    If(#sender_id# != 0){
        LinkPage(Page: @1profile_view, PageParams: "v_key_id=#sender_id#"){
            Address(#sender_id#)
        }
    }
}.Custom(recipient_wallet){
    LinkPage(Page: @1profile_view, PageParams: "v_key_id=#recipient_id#"){
        Address(#recipient_id#)
    }
}.Custom(amount_apl){
    Span(Money(#amount#) #token_title#)
}.Custom(_type){
    AppParam(Ecosystem:1, App:#application_id#, Name: type_tokens_transfer, Index: #type#)
}.Count(count)

Div(fullscreen){
    Div(table-responsive ml-lg mr-lg){
        Div(list-group-item){
            If(#count# > 0){
                Table(src_history, "$@1block$=block_id,$@1sender$=sender_wallet,$@1recipient$=recipient_wallet,$@1amount$=amount_apl,$@1comment$=comment,$@1type$=_type")
            }.Else{
                Div(Class: text-center h4 text-muted, Body: "$@1transactions_history_empty$")
            }                       
        }.Style(
            margin-top:-15px;
            tbody > tr:nth-of-type(odd) {
                background-color: #f8f9fc;
            }
        )
    }
}
Div(mt-sm ml-lg mr-sm mb-sm){
    Include(@1pager)
}