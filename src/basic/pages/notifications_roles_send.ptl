SetVar(this_page,@1notifications_roles_send).(back_page,@1notifications_list)
DBFind(@1applications).Columns("name,id").Where({"ecosystem": 1, "name": "Basic"}).Vars(application)

If(GetVar(EcosystemId) == ""){
    SetVar(EcosystemId, #ecosystem_id#)
}

Form(){
    Div(row){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1ecosystem)).(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            Input(Name: eco_id, Type:hidden, Value: #EcosystemId#)
            Div(input-group){
                DBFind(@1ecosystems).Columns("id,name").WhereId(#EcosystemId#).Vars(e)
                Input(Name: e_name, Disabled: 1, Value: #e_name#)
                Div(input-group-btn){
                    Button(Class: btn bg-gray-lighter fa fa-caret-down buttons, Page: @1select_ecosystem, PageParams:"back_page=#this_page#,back_header=$@1send$,EcosystemId=#EcosystemId#,Type=ALL_LIST").Popup(Header: $@1ecosystem$, Width: "40")
                }.Style(
                    .buttons {
                        border: 1px solid #dde6e9;
                        padding: 6px 16px;
                    }
                )
            }  
        }
    }
    Div(row mt-sm){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1recipient)).(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            DBFind(@1roles,source_roles).Where({"ecosystem": #EcosystemId#, "deleted": 0}).Columns("id,role_name").Count(roles_count)
            If(#roles_count#>0){
                Select(Name: rid, Source: source_roles, NameColumn: role_name, ValueColumn: id)
            }.Else{
                Div(mt-sm){
                    $@1roles$ $@1not_founded$
                }
            }
        }
    }
    Div(row mt-sm){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1closure_type)).(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            AppParam(Ecosystem: 1, App: #application_id#, Name: notification_closure, Source: src_closure_type)
            Select(Name: closure_type, Source: src_closure_type, NameColumn: name, ValueColumn: id)
        }
    }
    Div(row mt-sm){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1sender)).(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            AppParam(Ecosystem: 1, App: #application_id#, Name: notification_sender, Source: src_sender)
            Select(Name: sender, Source: src_sender, NameColumn: name, ValueColumn: id)
        }
    }
    Div(row mt-lg){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1icon)).(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            AppParam(Ecosystem: 1, App: #application_id#, Name: notification_icon, Source: src_icon)
            Select(Name: icon_name, Source: src_icon, NameColumn: name, ValueColumn: name)
        }
    }
    Div(row mt-sm){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1header)).(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            Input(Name: text_header, Value: "Header text").Validate(minLength:3, maxLength:255)
            InputErr(Name: text_header, minLength: $@1validate_name$, maxLength: $@1validate_role_name$)
        }
    }
    Div(row mt-sm){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1body_text))
            }
        }
        Div(col-md-9 text-left){
            Input(Name: text_body, Type: textarea, Value: "Body text").Style(resize: vertical;)
        }
    }
    Div(row mt-lg){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1page)).(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            Input(Name: page_name, Value: "@1notifications_testpage").Validate(minLength:3, maxLength:255)
            InputErr(Name: page_name, minLength: $@1validate_name$, maxLength: $@1validate_role_name$)
        }.Show("popup=false")
        Div(col-md-9 text-left){
            Input(Name: page_name_popup, Value: "@1notifications_testpage_popup").Validate(minLength:3, maxLength:255)
            InputErr(Name: page_name_popup, minLength: $@1validate_name$, maxLength: $@1validate_role_name$)
        }.Show("popup=true")
    }
    Div(row mt-sm){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1params))
            }
        }
        Div(col-md-9 text-left){
            Input(Name: params_map, Value: `{"param_int":"10","param_str":"my_string"}`)
        }
    }
    Div(row){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1popup))
            }
        }.Style(line-height: 18px;)
        Div(col-md-9 text-left){
            Input(Name: popup, Type: checkbox, Value: false, Class: mt-sm)
        }
    }
    Div(){
        Button(Body: LangRes(@1send), Class: btn btn-primary pull-right mt, Page: #back_page#, PageParams: "type=1", Contract: @1NotificationsSend, Params: "current_role_id=#role_id#,page_name=Val(page_name)")
    }.Show("popup=false")
    Div(){
        Button(Body: LangRes(@1send), Class: btn btn-primary pull-right mt, Page: #back_page#, PageParams: "type=1", Contract: @1NotificationsSend, Params: "current_role_id=#role_id#,page_name=Val(page_name_popup)")
    }.Show("popup=true")
    Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: #back_page#, PageParams: "type=1")
}