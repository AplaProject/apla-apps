SetVar(this_page,@1message_create)

If(GetVar(EcosystemId) == ""){
    SetVar(EcosystemId, #ecosystem_id#)
}

If(GetVar(MemberId) == ""){
    SetVar(MemberId, 0)
}

If(Or(#MemberId#>0,#MemberId#<0)){
    SetVar(AddressMemberId, Address(#MemberId#))
}.Else{
    SetVar(AddressMemberId,)
}

Form(){
    Div(row){
        Div(col-md-3 mt text-right){
            Label(){
                Span(Body: LangRes(@1broadcast))
            }
        }
        Div(col-md-9 text-left){
            Input(Name: "broadcast", Type: "checkbox", Value: "false")
        }
    }
    Div(row){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1recipient)).(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            Input(Name: member_id, Type:hidden, Value: #MemberId#)
            Div(input-group){
                Input(Name: m_name, Disabled: 1, Placeholder: "xxxx-xxxx-xxxx-xxxx-xxxx", Value: #AddressMemberId#)
                Div(input-group-btn){
                    Button(Class: btn bg-gray-lighter fa fa-caret-down buttons, Page: @1select_wallet, PageParams:"back_page=#this_page#,back_header=$@1message_create$,EcosystemId=#EcosystemId#").Popup(Header: $@1member$, Width: "50")
                }.Style(
                    .buttons {
                        border: 1px solid #dde6e9;
                        padding: 6px 16px;
                    }
                )
            }
        }.Show("broadcast=false")
        Div(col-md-9 text-left){
            DBFind(@1roles,source_roles).Where({ecosystem:#ecosystem_id#, deleted:0}).Columns("id,role_name").Count(roles_count)
            If(#roles_count#>0){
                Select(Name: rid, Source: source_roles, NameColumn: role_name, ValueColumn: id)
            }.Else{
                Div(mt-sm){
                    $@1roles$ $@1not_founded$
                }
            }
        }.Show("broadcast=true")
    }
    Div(row mt){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1message_subject)).(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            Input(Name: text_header, Value: "", Placeholder: $@1message_subject_type_here$)
        }
    }
    Div(row mt){
        Div(col-md-3 mt-sm text-right){
            Label(){
                Span(Body: LangRes(@1message_text)).(Class: text-danger, Body:*)
            }
        }
        Div(col-md-9 text-left){
            Input(Type: Hidden, Name: eco_id, Value: "#ecosystem_id#")
            Input(Type: Hidden, Name: sender, Value: "1")
            Input(Type: Hidden, Name: icon_name, Value: "icon-speech")
            Input(Type: Hidden, Name: params_map, Value: `{"type": "message"}`)
            Input(Type: Hidden, Name: page_name, Value: "@1message_view")
            Input(Type: textarea, Name: text_body, Value: "", Placeholder: $@1message_type_here$).Style(resize: vertical; min-height: 6em;)
        }
    }
    Div(row mt){
        Div(col-md-12){
            Div(){
                Button(Body: LangRes(@1send), Class: btn btn-primary pull-right, Page: @1messages_list, Contract: @1NotificationsSend, Params: "rid=0,current_role_id=#role_id#")
            }.Show("broadcast=false")
            Div(){
                Button(Body: LangRes(@1send), Class: btn btn-primary pull-right, Page: @1messages_list, Contract: @1NotificationsSend, Params: "member_id=0,current_role_id=#role_id#,closure_type=2")
            }.Show("broadcast=true")
            Button(Body: LangRes(@1back), Class: btn btn-default pull-right, Page: @1messages_list)
        }
    }
}