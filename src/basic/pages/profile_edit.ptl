DBFind("@1applications").Where({"ecosystem": "#ecosystem_id#", "name": "Basic"}).Columns("name,id").Vars(application)
SetVar(member_image_id, 0)
DBFind("@1members").Where({"ecosystem": "#ecosystem_id#", "account": "#account_id#"}).Columns("account,member_name,image_id,member_info->information").Vars(member)
DBFind("@1buffer_data").Columns("value->id,value->member_name,value->image_id,value->member_info_information").Where({"ecosystem": "#ecosystem_id#", "key": "edit_profile_form", "account": "#account_id#"}).Vars(buffer)
If(#buffered# == 1){
    SetVar(member_member_name, #buffer_value_member_name#)
    SetVar(member_member_info_information, #buffer_value_member_info_information#)
}
If(#uploaded# == 1){
    DBFind("@1buffer_data").Columns("value->binary_id").Where({"ecosystem": "#ecosystem_id#", "key": "avatar", "account": "#account_id#"}).Vars(avatar)
    SetVar(member_image_id, #avatar_value_binary_id#)
}.ElseIf(#buffered# == 1){
    SetVar(member_image_id, #buffer_value_image_id#)
}

Form(){
    Div(row){
        Div(col-md-4 mt-sm text-center){
            SetVar(ParamNames, "id;member_name;image_id;member_info_information")
            Button(Class: btn btn-link, Page: @1upload_page, PageParams: "back_page=@1profile_edit,back_page_popup=50,back_page_popup_header=$@1editing_profile$,application_id=#application_id#,buffer_key=avatar", Contract: @1FormStateSave, Params: "AppId=#application_id#,FormName=edit_profile_form,ParamNames=#ParamNames#,Param1=#account_id#,Param2=Val(Name),Param3=Val(ImageId),Param4=Val(Info)"){
                If(#member_image_id# > 0){
                    Input(Name: ImageId, Type: hidden, Value: #member_image_id#)
                    Image(Src: Binary().ById(#member_image_id#), Class: img-thumbnail).Style(width: 140px; border: 1px solid #5A5D63;)
                    Div(Body: $@1edit_avatar$)
                }.Else{
                    Input(Name: ImageId, Type: hidden, Value: 0)
                    Span(Class: fa icon-user fa-5x).Style(margin-top:20px;)
                    Div(Body: $@1edit_avatar$)
                }
            }.Popup(Header: $@1avatar$, Width: 30)
        }
        Div(col-md-8 mt-sm){
            Div(form-group){
                Label(){
                    Span(Body: LangRes(@1member_name)).(Class: text-danger, Body: *)
                }
                If(#member_account#){
                    Input(Name: Name, Value: #member_member_name#, Disabled: true)
                }.Else{
                    Input(Name: Name, Value: #member_member_name#).Validate(minLength:5, maxLength:20)
                    InputErr(Name: Name, minLength: $@1validate_member_name$, maxLength: $@1validate_member_name$)
                }
            }
            Div(form-group){
                Label(){
                    Span(Body: LangRes(@1information))
                }
                Input(Name: Info, Type: textarea, Value: #member_member_info_information#).Style(resize: vertical;)
            }
        }
    }
    Button(Body: LangRes(@1save), Class: btn btn-primary pull-right, Page: @1profile_view, Contract: @1ProfileEdit).Alert(Text: "$@1want_save_changes$", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)
    Button(Body: LangRes(@1back), Class: btn btn-default pull-right, Page: @1profile_view)
}