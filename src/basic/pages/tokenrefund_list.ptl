SetVar(this_page, @1tokenrefund_list).(this_table, @1tokens_refund)
Include(@1pager_header)

SetTitle("$@1tokens_refunds_list$")
DBFind(@1applications).Where({"ecosystem": 1, "name": "Basic"}).Columns("name,id").Vars(application)
SetVar(tid, AppParam(App: #application_id#, Name: voting_template_tokenrefund, Ecosystem: 1))
If(#tid# > 0){
    DBFind(@1voting_templates).Where({"ecosystem": "#ecosystem_id#", "id": "#tid#"}).Columns("subject->voters").Vars(template)
}
If(And(#template_subject_voters#>0,#template_subject_voters#==#role_id#)){
    Span(Class: text-muted h5 m0 mb ml-lg, Body: Span(Class: ml-sm, Body: $@1tokens_refunds_list_desc$))
    AddToolButton(Title: $@1create_request$, Icon: icon-plus, Page: @1tokenrefund_create).Popup(50, $@1create_request$)
}.Else{
    If(#template_subject_voters#>0){
        Span(Class: text-muted h5 m0 mb ml-lg, Body: Span(Class: ml-sm, Body: $@1tokens_refunds_list_allowed_role$ #template_subject_voters#))
    }.Else{
        Span(Class: text-muted h5 m0 mb ml-lg, Body: Span(Class: ml-sm, Body: $@1template_id_not_found$))
    }
}

If(#search#){
    SetVar(where, {"note": {"$ilike": "#search#"}})
}.Else{
    SetVar(where, {})
}

Div(list-group-item ml-lg mr-lg pt-lg){
    SetVar(search_name, LangRes(@1description))
    Include(@1search)
}

DBFind(#this_table#, src_refunds_list).Where(#where#).Order({"id": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(_status){
    If(#status#>0){
        SetVar(sta, AppParam(Ecosystem:1, App:#application_id#, Name: tokenrefund_status, Index: #status#))
        LangRes(#sta#)
    }
}.Custom(_result){
    If(#result# > 0){
        SetVar(res,AppParam(Ecosystem:1, App:#application_id#, Name: tokenrefund_result, Index: #result#))
        LangRes(#res#)
    }
}.Custom(_blocked){
    DateTime(Format: YYYY-MM-DD HH:MI:SS, DateTime: #blocked_at#)
}.Custom(_closed){
    DateTime(Format: YYYY-MM-DD HH:MI:SS, DateTime: #closed_at#)
}.Custom(_accounts){
    Div(){$@1tokens_refund_victim$: #victim_account#}
    Div(){$@1tokens_refund_attacker$: #attacker_account#}
}.Custom(_amount){
    Money(#amount#)
}.Count(count)

Div(fullscreen){
    Div(table-responsive ml-lg mr-lg){
        Div(list-group-item){
            If(#count# > 0){
                Table(src_refunds_list, "$@1accounts$=_accounts,$@1description$=note,$@1validator$=validator_account,$@1blocked_at$=_blocked,$@1closed$=_closed,$@1result$=_result,$@1amount$=_amount,$@1status$=_status")
            }.Else{
                Div(Class: text-center h4 text-muted, Body: "$@1tokens_refunds$ $@1not_founded$")
            }
        }.Style(
            margin-top:-15px;
            tbody > tr:nth-of-type(odd) {
                background-color: #f8f9fc;
            }
        )
    }
}
Div(mt-sm ml-lg mr-sm mb-sm){
    Include(@1pager)
}