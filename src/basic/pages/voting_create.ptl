DBFind("@1applications").Where({"ecosystem": 1, "name": "Basic"}).Columns("name,id").Vars(application)
SetVar(this_page, "@1voting_create")

Form(){
    If(#type_decision#>0){
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        LangRes(@1vote_count_type)
                    }
                }
                Div(col-md-9 text-left){
                    If(#count_type_voters#==1){
                        Input(Name: InputCountTypeVoters, Disabled: 1, Value: $@1number_votes$)
                        Input(Name: CountTypeVoters, Type: hidden, Value: 1)
                    }.Else{
                        Input(Name: InputCountTypeVoters, Disabled: 1, Value: $@1percent_votes$)
                        Input(Name: CountTypeVoters, Type: hidden, Value: 0)
                    }
                }
            }
            Div(row mt-sm){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        LangRes(@1voting_subject)
                    }
                }
                Div(col-md-9 text-left){
                    SetVar(var_type_voting_decisions, AppParam(Ecosystem:1, App:#application_id#, Name: type_voting_decisions, Index: #type_decision#))
                    Input(Name: Input_TypeVotingDecisions, Disabled: 1, Value: #var_type_voting_decisions#)
                    Input(Name: TypeDecision, Type: hidden, Value: #type_decision#)
                }
            }
            Div(row mt-sm){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        LangRes(@1participants)
                    }
                }
                Div(col-md-9 text-left){
                    SetVar(var_type_participants, AppParam(Ecosystem:1, App:#application_id#, Name: type_voting_participants, Index: #type_participants#))
                    Input(Name: Input_TypeParticipants, Disabled: 1, Value: #var_type_participants#)
                    Input(Name: TypeParticipants, Type: hidden, Value: #type_participants#)
                }
            }
        }
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        LangRes(@1name)
                        Span(*,text-danger)
                    }
                }
                Div(col-md-9 text-left){
                    Input(Name: Name, Value: "New voting")
                }
            }
            Div(row mt-sm){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        LangRes(@1voting_quorum)
                        Span(*,text-danger)
                    }
                }
                Div(col-md-9 text-left){
                    If(#count_type_voters#==1){
                        Input(Name: Quorum, Value: 3, Type: number)
                        Div(m0 h6 text-muted){
                            $@1voting_quorum_number_desc$
                        }
                    }.Else{
                        Input(Name: Quorum, Value: 30, Type: number)
                        Div(m0 h6 text-muted){
                            $@1voting_quorum_desc$
                        }
                    }
                }
            }
            If(Or(#type_participants#==1,#type_participants#==2,#type_participants#==3,#type_participants#==4)){
                Div(row mt-sm){
                    Div(col-md-3 mt-sm text-right){
                        Label(){
                            LangRes(@1voting_rating)
                        }
                    }
                    Div(col-md-9 mt-sm text-left){
                        Input(Name: Rating, Placeholder: $@1voting_rating_desc$, Type: checkbox, Value: false, Class: m0 text-muted)
                    }
                }
            }
        }
        If(Or(#count_type_voters#==1,#type_decision#==1,#type_decision#==2)){
            SetVar(hide_volume, 1)
        }
        If(#hide_volume# != 1){
            Div(list-group-item){
                Div(row){
                    Div(col-md-3 mt-sm text-right){
                        Label(){
                            LangRes(@1voting_volume)
                            Span(*,text-danger)
                        }
                    }
                    Div(col-md-9 text-left){
                        Input(Name: Volume, Value: 51, Type: number)
                        Div(m0 h6 text-muted){
                            $@1voting_volume_desc$
                        }
                    }
                }
            }
        }
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        LangRes(@1date_start)
                        Span(*,text-danger)
                    }
                }
                Div(col-md-9 text-left){
                    Div(row){
                        Div(col-md-6){
                            Input(Name: StartDate, Type: date)
                        }
                        Div(col-md-6){
                            Input(Name: StartTime, Type: time, Value: "00:00")
                        }
                    }
                }
            }
            Div(row mt-sm){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        LangRes(@1date_end)
                        Span(*,text-danger)
                    }
                }
                Div(col-md-9 text-left){
                    Div(row){
                        Div(col-md-6){
                            Input(Name: EndDate, Type: date)
                        }
                        Div(col-md-6){
                            Input(Name: EndTime, Type: time, Value: "00:00")
                        }
                    }
                }
            }
        }
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        LangRes(@1description)
                    }
                }
                Div(col-md-9 text-left){
                    Input(Name: Description, Type: textarea).Style(resize:vertical)
                }
            }
        }
        Input(Name: Type, Type: hidden, Value: 1)
        If(#type_decision# == 1){
            SetVar(next_page,"@1voting_decision_candidates")
        }.ElseIf(#type_decision# == 2){
            SetVar(next_page,"@1voting_decision_election")
        }.ElseIf(#type_decision# == 3){
            SetVar(next_page,"@1voting_decision_document")
        }.ElseIf(#type_decision# == 4){
            SetVar(next_page,"@1voting_decision_contract")
        }
        Button(Body: LangRes(@1create), Class: btn btn-primary pull-right mt, Page: #next_page#, Contract: @1VotingCreate, Params: "CountTypeVoters=#count_type_voters#").Popup(60, $@1voting_subject$)
        Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: #this_page#).Popup(60, $@1new_voting$)
    }.Else{
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        LangRes(@1vote_count_type)
                        Span(*,text-danger)
                    }
                }
                Div(col-md-9 mt-sm text-left){
                    If(#count_type_voters#==1){
                        Button(Body: $@1percent_votes$, Page: #this_page#, PageParams: "count_type_voters=0", Class: btn-xs btn-default mr-lg).Popup(60, $@1new_voting$)
                        Button(Body: $@1number_votes$, Page: #this_page#, PageParams: "count_type_voters=1", Class: btn-xs btn-primary disabled).Popup(60, $@1new_voting$)
                    }.Else{
                        Button(Body: $@1percent_votes$, Page: #this_page#, PageParams: "count_type_voters=0", Class: btn-xs btn-primary disabled mr-lg).Popup(60, $@1new_voting$)
                        Button(Body: $@1number_votes$, Page: #this_page#, PageParams: "count_type_voters=1", Class: btn-xs btn-default).Popup(60, $@1new_voting$) 
                    }
                }
            }
        }
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt text-right){
                    Label(){
                        LangRes(@1voting_subject)
                        Span(*,text-danger)
                    }
                }
                Div(col-md-9 text-left){
                    If(#count_type_voters#==1){
                        Data(numbers_type_decisions, "value,name"){
                            3,$@1document$
                            4,$@1contract_run$
                        }
                        RadioGroup(Name: type_decision, Source: numbers_type_decisions, NameColumn: name, ValueColumn: value)
                    }.Else{
                        AppParam(Ecosystem:1, App:#application_id#, Name: type_voting_decisions, Source: procent_type_decisions)
                        RadioGroup(Name: type_decision, Source: procent_type_decisions, NameColumn: name, ValueColumn: id)
                    }
                }
            }
        }
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        LangRes(@1participants)
                        Span(*,text-danger)
                    }
                }
                Div(col-md-9 text-left){
                    AppParam(Ecosystem:1, App:#application_id#, Name: type_voting_participants, Source: type_voting_participants)
                    Select(Name: type_participants, Source: type_voting_participants, NameColumn: name, ValueColumn: id, Value: 2)
                }
            }
        }
        Button(Body: LangRes(@1next), Class: btn btn-primary pull-right mt, Page: #this_page#, PageParams: "count_type_voters=#count_type_voters#,type_decision=Val(type_decision),type_participants=Val(type_participants)").Popup(60, $@1new_voting$)
        Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: @1voting_list)
    }
}