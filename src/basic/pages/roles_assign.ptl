SetVar(key_address,Address(#key_id#))
DBFind(@1applications).Columns("name,id").Where({"name": "Basic", "ecosystem": 1}).Vars(application)

If(#Id#!=""){
    SetVar(v_role_id, #Id#)
}

If(#v_role_id#>0){
    DBFind(@1roles, src_roles).Where({"ecosystem": #ecosystem_id#, "id": #v_role_id#}).Columns("id,role_name,role_type,roles_access,creator->address").Vars(prefix)
    If(#prefix_creator_address#==#key_address#){
        SetVar(manager_id, 1)
    }.ElseIf(And(#prefix_roles_access#!="NULL",#prefix_roles_access#!="",#prefix_roles_access#!="[]",#role_id#>0,#prefix_deleted#==0,#prefix_role_type#!=2)){
        DBFind(@1roles).Where({"ecosystem": #ecosystem_id#, "id": [{"$in": #prefix_roles_access#}, {"$eq": #role_id#}]}).Columns("id").Vars(manager)
    }

    Form(){
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    LangRes(@1role)
                    Span(Class: text-danger, Body:*)
                }
            }
            Div(col-md-9 text-left){
                Input(Type: hidden, Name: rid, Value: #prefix_id#)
                SetVar(Name: var_prefix_role_name, Value: LangRes(#prefix_role_name#))
                Input(Name: input_prefix_role_name, Value: #var_prefix_role_name#, Disabled: 1)
            }
        }
        Div(row mt-sm){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    LangRes(@1type)
                    Span(Class: text-danger, Body:*)
                }
            }
            Div(col-md-9 text-left){
                SetVar(Name: var_prefix_role_type, Value: AppParam(Ecosystem:1, App:#application_id#, Name: roles_types, Index: #prefix_role_type#))
                Input(Name: input_prefix_role_type, Value: #var_prefix_role_type#, Disabled: 1)
                If(#prefix_role_type#==2){
                    P(Class: m0 text-danger h6, Body: LangRes(@1elective_role_voting_only))
                }
            }
        }
        If(#prefix_role_type#!=2){
            Div(row mt-sm){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        LangRes(@1member)
                        Span(Class: text-danger, Body:*)
                    }
                }
                If(#MemberId#!=""){
                    SetVar(AddressMemberId, Address(#MemberId#))
                }
                Div(col-md-9 text-left){
                    Div(input-group){
                        Input(Name: Address, Disabled: 1, Placeholder: "xxxx-xxxx-xxxx-xxxx-xxxx", Value: #AddressMemberId#)
                        Div(input-group-btn){
                            Button(Class: btn bg-gray-lighter fa fa-caret-down buttons, Page: @1select_wallet, PageParams:"back_page=@1roles_assign,back_header=$@1assign$,Id=#v_role_id#,EcosystemId=#ecosystem_id#").Popup(Header: $@1member$, Width: "50")
                        }.Style(
                            .buttons {
                                border: 1px solid #dde6e9;
                                padding: 6px 16px;
                            }
                        )
                    }
                }
            }
        }
        If(And(#manager_id#>0,#prefix_role_type#!=2)){
            Button(Body: LangRes(@1assign), Class: btn bg-primary pull-right mt, Page: @1roles_view, PageParams: "v_role_id=#v_role_id#", Contract: @1RolesAssign).Alert(Text: "$@1want_assign_member_to_role$", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)
        }
        Button(Body: LangRes(@1back), Class: btn bg-gray-lighter pull-right mt, Page: @1roles_view, PageParams: "v_role_id=#v_role_id#")
    }
}.Else{
    Div(md-12 alert alert-danger text-center){
        Span(Body: LangRes(@1attention))
    }
}