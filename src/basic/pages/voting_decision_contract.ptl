If(#vID# == ""){
    DBFind("@1buffer_data").Columns("value->voting_id").Where({"key": "voting", "account": "#account_id#", "ecosystem": "#ecosystem_id#"}).Vars(buffer)
    If(#buffer_value_voting_id#>0){
        SetVar(vID, #buffer_value_voting_id#)
        SetVar(toPageInvite, 1)
    }
}
If(#vID# > 0){
    If(#back_page#){}.Else{
        SetVar(back_page,@1voting_view)
    }

    DBFind("@1votings", src_voting).WhereId(#vID#).Columns("id,voting->name").Vars(instance)
    DBFind("@1votings_subject", src_subject).Where({"voting_id": "#vID#"}).Columns("id,subject->contract_accept,subject->contract_reject,subject->contract_accept_params,subject->contract_reject_params").Vars(prefix)

    If(#prefix_id#>0){
    }.Else{
        SetVar(prefix_subject_contract_accept,)
        SetVar(prefix_subject_contract_accept_params,)
        SetVar(prefix_subject_contract_reject,)
        SetVar(prefix_subject_contract_reject_params,)
    }

    Form(){
        Input(Name: VotingId, Type: hidden, Value: #vID#)
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    Span(Body: LangRes(@1contract_accept)).(Class: text-danger, Body:*)
                }
            }
            Div(col-md-9 mb-sm text-left){
                Input(Name: ContractAcceptName, Value: #prefix_subject_contract_accept#, Placeholder: "$@1contract_accept_des$").Validate(minLength:3, maxLength:255)
                InputErr(Name: ContractAcceptName, minLength: $@1validate_name$, maxLength: $@1validate_name$)
            }
        }
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    Span(Body: LangRes(@1params))
                }
            }
            Div(col-md-9 mb-sm text-left){
                Input(Name: ContractAcceptParams, Value: #prefix_subject_contract_accept_params#, Placeholder: "$@1contract_params_des$")
            }
        }
        Div(form-group){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: LangRes(@1contract_reject)).(Class: text-danger, Body:*)
                    }
                }
                Div(col-md-9 mb-sm text-left){
                    Input(Name: ContractRejectName, Value: #prefix_subject_contract_reject#, Placeholder: "$@1contract_reject_des$").Validate(minLength:3, maxLength:255)
                    InputErr(Name: ContractRejectName, minLength: $@1validate_name$, maxLength: $@1validate_name$)
                }
            }
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: LangRes(@1params))
                    }
                }
                Div(col-md-9 text-left){
                    Input(Name: ContractRejectParams, Value: #prefix_subject_contract_reject_params#, Placeholder: "$@1contract_params_des$")
                }
            }
        }
        If(#toPageInvite#==1){
            Button(Body: LangRes(@1save), Class: btn btn-primary pull-right, Page: @1voting_invite, PageParams: "vID=#vID#", Contract: @1VotingSubjectContract).Popup(60, $@1participants_add$)
        }.Else{
            Button(Body: LangRes(@1save), Class: btn btn-primary pull-right, Page: #back_page#, PageParams: "vID=#vID#", Contract: @1VotingSubjectContract)
        }
        Button(Body: LangRes(@1back), Class: btn btn-default pull-right, Page: #back_page#, PageParams: "vID=#vID#")
    }
}.Else{
    Div(md-12 alert alert-danger text-center){
        Span(Body: LangRes(@1attention))
    }
}