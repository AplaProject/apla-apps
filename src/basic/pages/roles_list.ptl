SetVar(this_page, @1roles_list).(this_table, @1roles)
Include(@1pager_header)

SetTitle("$@1roles$")
Span(Class: text-muted h5 m0 mb ml-lg, Body: Span(Class: ml-sm, Body: "$@1roles_list_desc$"))
AddToolButton(Page: @1roles_create, Icon: icon-plus, Title: $@1create$).Popup(50, $@1new_role$)

If(GetVar(search)){
    SetVar(w_search, {"role_name": {"$like": #search#}})
}
SetVar(where, {"ecosystem":#ecosystem_id#, GetVar(w_search)})

Div(list-group-item ml-lg mr-lg pt-lg){
    SetVar(search_name, LangRes(@1role))
    Include(@1search)
}

DBFind(#this_table#).Where({ecosystem:#ecosystem_id#}).Count(all_roles_count)
DBFind(#this_table#, src_roles).Where(#where#).Order({deleted:"1", id:"1"}).Limit(#pager_limit#).Offset(#pager_offset#).Columns("id,role_name,role_type,image_id,creator->member_id,creator->member_name,date_created,date_deleted,deleted,roles_access").Custom(_id){
    If(#deleted# == 0){
        SetVar(style_text,"text-normal").(style_link, "text-primary")
    }.Else{
        SetVar(style_text,"text-muted").(style_link, "text-muted")
    }
    Span(Class: #style_text#, Body: #id#)
}.Custom(_creator){
    If(And(#creator.member_name#!=NULL,#creator.member_name#!="")){
        LinkPage(Class: #style_link# text-bold, Page: @1profile_view, PageParams: "v_key_id=#creator.member_id#"){
            #creator.member_name#
        }
    }
}.Custom(_name){
    LinkPage(Class: #style_link# h5 text-bold, Page: @1roles_view, PageParams: "v_role_id=#id#"){
        If(#image_id#>0){
            Image(Src: Binary().ById(#image_id#), Class: mr-sm).Style(width: 30px; border: 1px solid #5A5D63;)
            #role_name#
        }.Else{
            Div(Class: #style_link#){
                Span(Class: fa icon-settings fa-2x mr-sm)
            }.Style(
                display: inline-block;
            )
            Span(Class: btn-link text-bold pb-sm){
                Span(Class: #style_link#, Body: #role_name#)
            }.Style(
                display: inline-block;
                vertical-align: top;
                padding-top: 7px;
                padding-left: 4px;
            )
        }
    }
}.Custom(_date){
    Div(#style_text# small){
        Div(text-nowrap){DateTime(DateTime: #date_created#, Format: "DD.MM.YYYY HH:MI")}
        If(#deleted# == 1){
          Div(text-nowrap){DateTime(DateTime: #date_deleted#, Format: "DD.MM.YYYY HH:MI")}
        }
    }
}.Custom(_type){
    DBFind(@1applications).Where({name:"Basic", ecosystem:1}).Columns("name,id").Vars(application)
    Span(Class: #style_text#, Body: AppParam(Ecosystem: 1, App: #application_id#, Name: roles_types, Index: #role_type#))
}.Custom(_status){
    Span(Class:#style_text#){
        If(#deleted# == 0){
            LangRes(@1active)
        }.Else{
            LangRes(@1deleted)
        }
    }
}.Custom(_access){
    If(#creator.member_id#==#key_id#){
        SetVar(access,done)
    }.Else{
        SetVar(access,)
    }
    If(And(#roles_access#!="NULL",#roles_access#!="",#roles_access#!="[]")){
        DBFind(@1roles,src_access_list).Where({id:{"$in":#roles_access#}}).Columns("id,role_name").Count(access_count).Order(role_name)
        Div(#style_text# breaker){
            ForList(src_access_list){
                If(And(#role_id#==#id#)){
                    SetVar(access,done)
                }
                If(#access_count#!=#src_access_list_index#){
                    Span("#role_name#,",mr-sm)
                }.Else{
                    #role_name#
                }
            }
        }
    }
}.Custom(_actions){
    Div(text-right button-group text-nowrap){
        If(#access#=="done"){
            If(And(#deleted#==0,#role_type#!=3)){
                Button(Class: btn bg-gray-lighter, Contract: @1RolesDelete, Params: "ops=D,rid=#id#", Page: @1roles_list){
                    Em(Class: text-danger fa fa-1x fa-trash)
                }.Alert(Text: "$@1sure_want_delete$", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)
            }.ElseIf(#deleted#==1){
                Button(Class: btn bg-gray-lighter mh-sm, Contract: @1RolesDelete, Params: "ops=R,rid=#id#", Page: @1roles_list){
                    Em(Class: btn-default fa fa-1x fa-recycle)
                }
            }
            If(#deleted#==0){
                Button(Class: btn bg-gray-lighter mh-sm, PageParams: "rid=#id#", Page: @1roles_create){
                    Em(Class: text-default fa fa-1x fa-edit)
                }.Popup(50, $@1edit_role$)
            }
        }
    }
}.Count(count)

Div(fullscreen){
    Div(table-responsive ml-lg mr-lg){
        Div(list-group-item){
            If(#count# > 0){
                Table(src_roles, "$@1role$=_name,$@1type$=_type,$@1id$=_id,$@1creator$=_creator,$@1role_created_deleted$=_date,$@1status$=_status,$@1roles_access$=_access,=_actions")
            }.ElseIf(#all_roles_count# > 0){
                Div(Class: text-center h4 text-muted){
                    Div(Class: text-center h4 text-muted, Body: "$@1roles$ $@1not_founded$")
                }
            }.Else{
                Div(Class: text-center h4 text-muted){
                    Button(Body: $@1install_default_roles$, Class: btn btn-primary, Page: @1roles_list, Contract: @1RolesInstall)
                }
            }
        }.Style(
            margin-top:-15px;
            tbody > tr:nth-of-type(odd) {
                background-color: #f8f9fc;
            }
        )
    }
}
Div(mt-sm ml-lg mr-sm mb-sm){
    Include(@1pager)
}
