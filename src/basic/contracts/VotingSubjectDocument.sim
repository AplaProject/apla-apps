contract VotingSubjectDocument {
    data {
        VotingId int
        TextDocument string

        OptContractAcceptName string "optional"
        OptContractAcceptParams string "optional"
        OptContractRejectName string "optional"
        OptContractRejectParams string "optional"
    }

    func safeJsonToMap(m string) map {
        var res map
        if Size(m) > 0 { res = JSONToMap(m) }
        return res
    }

    conditions {
        $STARTED = 3
        $FINISHED = 4
        $voting = DBFind("@1votings").Where({"ecosystem": $ecosystem_id, "id": $VotingId, "status":[{"$neq":$STARTED},{"$neq":$FINISHED}]}).Columns("id,date_started,flags->full_data,voting->type,optional,creator->member_id").Row()
        if !$voting {
            warning LangRes("@1voting_started_can_not_edit", "en")
        }
        if $voting["creator.member_id"] != $key_id {
            warning LangRes("@1access_denied", "en")
        }

        if $voting["flags.full_data"] == 1 && $voting["voting.type"] == 2 {
            warning LangRes("@1system_voting_can_not_edit", "en")
        }
    }

    action {
        var subject map
        subject["text"] = $TextDocument
        subject["hash"] = Sha256($TextDocument)

        $subject_id = DBFind("@1votings_subject").Where({"ecosystem": $ecosystem_id, "voting_id": $VotingId}).One("id")
        if $subject_id {
            DBUpdate("@1votings_subject", Int($subject_id), {subject:subject})
        } else {
            DBInsert("@1votings_subject", {"ecosystem": $ecosystem_id, "voting_id": $VotingId, "subject": subject})
        }
        var accept_params reject_params map
        accept_params = safeJsonToMap($OptContractAcceptParams)
        reject_params = safeJsonToMap($OptContractRejectParams)

        var optional map
        optional = safeJsonToMap($voting["optional"])

        optional["contract_accept"] = $OptContractAcceptName
        optional["contract_accept_params"] = accept_params
        optional["contract_reject"] = $OptContractRejectName
        optional["contract_reject_params"] = reject_params

        DBUpdate("@1votings", $VotingId, {optional:optional})

        @1VotingSubjectCheck("VotingId", $VotingId)
    }
}