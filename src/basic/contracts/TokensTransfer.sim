contract TokensTransfer {
    data {
        Amount money
        SenderId int
        RecipientId int
        Comment string "optional"
        Ecosystem int "optional"
    }

    func getEcosystem() {
        $e_id = Int($Ecosystem)
        if $e_id == 0 {
            $e_id = $ecosystem_id
        } else {
            if !DBFind("@1ecosystems").Where({"id": $e_id}).One("id") {
                warning Sprintf(LangRes("@1ecosystem_not_found", "en"), $e_id)
            }
        }    
    }

    func getPermission() {
        var array_permissions array result i int prevContract string
        array_permissions = ["@1ExMatching", "@1TokensSend", "@1PoaTokensSend", "@1TokensRefund"]

        prevContract = $stack[0]
        if Len($stack) > 2 {
            prevContract = $stack[Len($stack) - 2]
        }
        while i < Len(array_permissions) {
            var contract_name string
            contract_name = array_permissions[i]
            if contract_name==prevContract {
                result = 1
            }
            i = i + 1
        }

        if result == 0 {
            warning LangRes("@1tokens_transfer_cannot_be_made", "en")
        }
    }

    func checkSender() {
        var sender_map map
        sender_map = DBFind("@1keys").Where({"id": $SenderId, "ecosystem": $e_id}).Row()

        if !sender_map {
            warning Sprintf(LangRes("@1sender_x_invalid", "en"), $SenderId)
        }
        if Int(sender_map["blocked"]) != 0 {
            warning LangRes("@1sender_blocked", "en")
        }
        if Int(sender_map["deleted"]) != 0 {
            warning LangRes("@1sender_deleted", "en")
        }
        if Money(sender_map["amount"]) < $Amount {
            warning LangRes("@1amount_less_than_needed", "en")
        }
    }

    func checkRecipient() {
        var recipient_map map
        recipient_map = DBFind("@1keys").Where({"id": $RecipientId, "ecosystem": $e_id}).Row()

        if !recipient_map {
            warning Sprintf(LangRes("@1recipient_x_invalid", "en"), $RecipientId)
        }
        if Int(recipient_map["blocked"]) != 0 {
            warning LangRes("@1recipient_blocked", "en")
        }
        if Int(recipient_map["deleted"]) != 0 {
            warning LangRes("@1recipient_deleted", "en")
        }
    }

    conditions {
        getEcosystem()    //getting an ecosystem number
        getPermission()   //getting permission to run
        checkSender()     //check the sender
        checkRecipient()  //check the recipient
        
        //check amount
        if $Amount == 0 {
            warning LangRes("@1amount_zero", "en")
        }
        if $Amount < 0 {
            warning LangRes("@1amount_less_zero", "en")
        }
    }

    action {
        DBUpdateExt("@1keys", {"id": $SenderId, "ecosystem": $e_id}, {"-amount": $Amount})
        DBUpdateExt("@1keys", {"id": $RecipientId, "ecosystem": $e_id}, {"+amount": $Amount})

        var m map
        m["sender_id"] = $SenderId
        m["recipient_id"] = $RecipientId
        m["amount"] = $Amount
        m["comment"] = $Comment
        m["block_id"] = $block
        m["txhash"] = $txhash
        m["ecosystem"] = $e_id
        m["type"] = 3
        m["created_at"] = $block_time
        DBInsert("@1history", m)
    }
}