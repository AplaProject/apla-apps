contract MembershipRequest {
    data {
        EcosystemId int
    }

    conditions {
        if $ecosystem_id != 1 {
            warning LangRes("@1contract_first_ecosystem_only", "en")
        }

        if $EcosystemId == 1 {
            warning LangRes("@1impossible_for_platform_ecosystem", "en")
        }

        if !DBFind("@1ecosystems").Where({"id": $EcosystemId}).One("id"){
            warning Sprintf(LangRes("@1template_eco_not_exist", "en"), $EcosystemId)
        }

        if DBFind("@1keys").Where({"id": $key_id, "ecosystem": $EcosystemId}) {
            warning LangRes("@1member_added_before", "en")
        }

        $free_membership = Int(DBFind("@1parameters").Where({"ecosystem": $EcosystemId, "name": "free_membership"}).One("value"))
        if $free_membership == 0 {
            if DBFind("@1notifications").Where({"ecosystem": $EcosystemId, "page_params->ecosystem_id": $EcosystemId, "sender->member_id": $key_id, "closed": 0, "page_name": "@1membership_admin_view"}).Row(){
                warning LangRes("@1request_sent_already", "en")
            }

            $system_app_id = DBFind("@1applications").Where({"ecosystem": $EcosystemId, "name": "System"}).One("id")
            $admin_id = Int(AppParam(Int($system_app_id), "role_admin", $EcosystemId))
            Println($system_app_id, $admin_id)
            if $admin_id == 0 {
                warning LangRes("@1recipient_role_not_found", "en")
            }
        }
    }

    action {
        if $free_membership == 0 {
            var notific_params map
            notific_params["ecosystem_id"] = $EcosystemId
            notific_params["ecosystem_sender"] = $ecosystem_id

            @1NotificationsSend("Rid,Sender,Icon,Header,Body,Page,Params,Closure,EcosystemId", $admin_id, 1, "icon icon-user-follow", LangRes("@1membership_request_new", "en"), LangRes("@1details_view", "en"), "@1membership_admin_view", notific_params,1,$EcosystemId)
        }
        if $free_membership == 1 {
            var pub string
            pub = DBFind("@1keys").Where({"ecosystem": 1, "id": $key_id}).One("pub")
            DBInsert("@1keys", {id:$key_id, pub:pub, ecosystem:$EcosystemId})

            var params map
            params["ecosystem_id"] = $EcosystemId
            params["status"] = 1

            var icon header body page ecoName string
            ecoName = DBFind("@1ecosystems").Where({"id": $EcosystemId}).One("name")
            icon = "icon icon-user-follow"
            header = LangRes("@1request_approved", "en")
            body = Sprintf(LangRes("@1ecosystem_request_approved", "en"), ecoName, $EcosystemId)
            page = "@1membership_user_view"

            @1NotificationsSend("MemberId,Sender,Icon,Header,Body,Page,Params,EcosystemId", $key_id, 1, icon, header, body, page, params, $ecosystem_id)
        }
    }
}