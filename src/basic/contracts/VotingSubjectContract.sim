contract VotingSubjectContract {
    data {
        VotingId int
        ContractAccept string
        ContractAcceptParams string "optional"
        ContractReject string
        ContractRejectParams string "optional"
        OptionalAcceptContract string "optional"
        OptionalAcceptParams string "optional"
        OptionalRejectContract string "optional"
        OptionalRejectParams string "optional"
    }

    func safeJsonToMap(m string) map {
        var res map
        if Size(m) > 0 { res = JSONToMap(m) }
        return res
    }

    conditions {
        $STARTED = 3
        $FINISHED = 4

        $voting = DBFind("@1votings").Where({"ecosystem": $ecosystem_id, "id": $VotingId, "status":[{"$neq":$STARTED},{"$neq":$FINISHED}]}).Columns("id,date_started,voting->type,flags->full_data,optional,creator->member_id").Row()
        if !$voting {
            warning LangRes("@1voting_started_can_not_edit", "en")
        }
        if $voting["creator.member_id"] != $key_id {
            warning LangRes("@1access_denied", "en")
        }
        if $voting["flags.full_data"] == 1 && $voting["voting.type"] == 2 {
            warning LangRes("@1system_voting_can_not_edit", "en")
        }
    }

    action {
        var accept_params, reject_params map
        accept_params = safeJsonToMap($ContractAcceptParams)
        reject_params = safeJsonToMap($ContractRejectParams)

        var subject map
        subject["contract_accept"] = $ContractAccept
        subject["contract_accept_params"] = accept_params
        subject["contract_reject"] = $ContractReject
        subject["contract_reject_params"] = reject_params

        $subject_id = DBFind("@1votings_subject").Where({"ecosystem": $ecosystem_id, "voting_id": $VotingId}).One("id")
        if $subject_id {
            DBUpdate("@1votings_subject", Int($subject_id), {subject:subject})
        } else {
            DBInsert("@1votings_subject", {ecosystem:$ecosystem_id, voting_id:$VotingId, subject:subject})
        }

        var o_accept_params o_reject_params map
        o_accept_params = safeJsonToMap($OptionalAcceptParams)
        o_reject_params = safeJsonToMap($OptionalRejectParams)

        var optional map
        optional = safeJsonToMap($voting["optional"])
        optional["contract_accept"] = $OptionalAcceptContract
        optional["contract_accept_params"] = o_accept_params
        optional["contract_reject"] = $OptionalRejectContract
        optional["contract_reject_params"] = o_reject_params
        DBUpdate("@1votings", $VotingId, {optional:optional})

        @1VotingSubjectCheck("VotingId", $VotingId)
    }
}