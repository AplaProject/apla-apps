contract NotificationsBroadcast {
    data {
        RoleId int
        Header string
        Body string
        Popup string "optional"
    }
    
    func getMemberInfo(kid int) map {
        var res member map
        member = DBFind("@1members").Where({ecosystem:$ecosystem_id, id:kid}).Row()
        if member {
            res["member_id"] = member["id"]
            res["member_name"] = member["member_name"]
            res["image_id"] = member["image_id"]
        }else{
            if DBFind("@1keys").Columns("id").Where({ecosystem:$ecosystem_id, id:kid}).Row() {
                res["member_id"] = Str(kid)
                res["member_name"] = IdToAddress(kid)
                res["image_id"] = "0"
            }
        }
        return res
    }
    
    conditions {
        if $RoleId !=1 {
            warning LangRes("@1admin_only_action", "en")
        }
        if $ecosystem_id != 1 {
            warning LangRes("@1first_ecosystem_admin_only_action", "en")
        }
        $ecos = DBFind("@1ecosystems").Columns("id")
        $lenEcos = Len($ecos)
        if $lenEcos == 1 {
            warning LangRes("@1other_ecosystems_not_found", "en")
        }
    }
    
    action {
        var i lenIds int eco map ids array bt string sender recipient params note map
        bt = BlockTime()
        sender = getMemberInfo($key_id)
        sender["type"] = 1
        note["header"] = $Header
        note["type"] = 1
        note["icon"] = "icon-envelope"
        note["body"] = $Body
        if $Popup == "true" || $Popup == "1" {
            note["popup"] = 1
        }else{
            note["popup"] = 0
        }
        
        while i < $lenEcos{
            eco = $ecos[i]
            var ecoId int
            ecoId = Int(eco["id"])
            if ecoId != 1 {
                var adminRoleId int
                adminRoleId = Int(DBFind("@1parameters").Where({ecosystem:ecoId, name:"role_admin"}).One("value"))
                ids = DBFind("@1roles_participants").Where({ecosystem:ecoId, "role->id":adminRoleId, "role->type":3}).Columns("member->member_id")
                lenIds = Len(ids)
                var i_ids int
                while i_ids < lenIds{
                    recipient = ids[i_ids]
                    recipient = getMemberInfo(Int(recipient["member.member_id"]))
                    var m map
                    m["recipient"] = recipient
                    m["sender"] = sender
                    m["notification"] = note
                    m["page_name"] = "@1notifications_show"
                    m["page_params"] = params
                    m["date_created"] = bt
                    m["ecosystem"] = ecoId
                    DBInsert("@1notifications", m)
                    i_ids = i_ids + 1
                }
            }
            i = i + 1
        }
    }
}