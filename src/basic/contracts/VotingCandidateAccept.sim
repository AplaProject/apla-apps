contract VotingCandidateAccept {
    data {
        votingID int
        CandidateID int
        RoleId int
    }
    
    func closeNotification() {
        var role_id_search int
        role_id_search = Int(DBFind("@1notifications").Where({ecosystem:$ecosystem_id, "recipient->role_id":$RoleId, page_name:"@1voting_view", "page_params->voting_id":$votingID, closed:0}).One("id"))
        if role_id_search > 0 {
            @1NotificationsClose("notific_id", role_id_search)
        } else {
            var id int
            id = Int(DBFind("@1notifications").Where({ecosystem:$ecosystem_id, "recipient->member_id":$key_id, page_name:"@1voting_view", "page_params->voting_id":$votingID, closed:0}).One("id"))
            if id > 0 {
                @1NotificationsClose("notific_id", id)
            }
        }
    }
    
    conditions {
        $INVALID = 1
        $WAITING = 2
        $STARTED = 3
        $FINISHED = 4
        
        $voting = DBFind("@1votings").Columns("id,flags->decision,flags->notifics,status").Where({ecosystem:$ecosystem_id, id: $votingID}).Row()
        if !$voting {
            warning LangRes("@1voting_not_found", "en")
        }
        if $voting["status"] == $FINISHED {
            warning LangRes("@1voting_expired_can_not_vote", "en")
        }
        if $voting["status"] != $STARTED {
            warning LangRes("@1voting_not_started", "en")
        }
        $subject_map = DBFind("@1votings_subject").Where({ecosystem:$ecosystem_id, voting_id:$votingID, "subject->member_id":$CandidateID}).Row()
        if !$subject_map {
            warning LangRes("@1voting_subject_not_found", "en")
        }
        $participant_role_id = DBFind("@1votings_participants").Where({ecosystem:$ecosystem_id, voting_id:$votingID, "member->role_id":$RoleId,"member->member_id":0}).One("id")

        $check_type = DBFind("@1votings").Columns("id,voting,voting->type_participants").Where({ecosystem:$ecosystem_id, id: $votingID}).Row()
        if (Int($check_type["voting.type_participants"]) < 5){
            $participant_id = DBFind("@1votings_participants").Where({ecosystem:$ecosystem_id, voting_id:$votingID, "member->member_id":$key_id,decision:0}).One("id")
            if !$participant_id {
                warning LangRes("@1voting_not_participant", "en")
            }
        }
    }

    action {
        if $participant_role_id {
            $rid = DBFind("@1votings_participants").Columns("id,voting_id,member->role_id").Where({ecosystem:$ecosystem_id, voting_id:$votingID, "member->role_id":$RoleId}).Row()
            if $rid {
                var mem_role int
                mem_role = Int($rid["member.role_id"])
                $participant_id = DBFind("@1roles_participants").Columns("id,role,role->id,member,member->member_id").Where({ecosystem:$ecosystem_id, "member->member_id":$key_id,"role->id":mem_role,"deleted":0}).One("member.member_id")
                if !$participant_id{
                    warning LangRes("@1voting_not_participant", "en")
                } else {
                    var solo_role_vot map
                    $membership_role_name = DBFind("@1members").Where({ecosystem:$ecosystem_id, id:$key_id}).Row()
                    solo_role_vot["role_id"] = Int($rid["member.role_id"])
                    solo_role_vot["member_id"] = $key_id
                    solo_role_vot["member_name"] = $membership_role_name["member_name"]
                    solo_role_vot["image_id"] = $membership_role_name["image_id"]
                    var json string
                    json = JSONEncode(solo_role_vot)
                    DBUpdate("@1votings_participants", Int($rid["id"]), {"member":json})
                    $participant_id = Int($rid["id"])
                }
            } else {
                warning LangRes("@1voting_not_participant", "en")
            }
        }
        
        if $voting["flags.notifics"] == 1 {
            closeNotification()
        }

        if $voting["flags.decision"] != 1 {
            var bt string
            bt = BlockTime()

            // write the result of the voting
            var m map
            m["decision_date"] = bt
            m["decision"] = $CandidateID
            DBUpdate("@1votings_participants", Int($participant_id), m)

            // increment count of accept
            DBUpdate("@1votings_subject", Int($subject_map["id"]), {"+number_accept":1})

            @1VotingUpdate("votingID", $votingID)
        }
    }
}