contract ValidatorResign {
    data {}

    func getRoleId(name string) int {
        var rid int
        rid = Int(EcosysParam(name))
        if rid == 0{
            warning Sprintf(LangRes("@1role_not_set_eco_parameter", "en"), name)
        }
        return rid
    }

    conditions {
        $key_address = IdToAddress($key_id)
        var roleValidatorId int
        roleValidatorId = getRoleId("role_validator")
        if !RoleAccess(roleValidatorId) {
            warning LangRes("@1not_validator_can_not_run", "en")
        }
        $assigned = DBFind("@1roles_participants").Where({"ecosystem": $ecosystem_id, "member->address": $key_address, "role->id": roleValidatorId, "deleted": 0}).One("id")
    }

    action {
        @1RolesUnassign("row_id", Int($assigned))
        @1NodeRemoveByKey()
    }
}