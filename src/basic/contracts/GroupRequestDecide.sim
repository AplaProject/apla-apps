contract GroupRequestDecide {
    data {
        NotificId int
        Accept int
    }

    conditions {
        $notific = DBFind("@1notifications").WhereId($NotificId).Columns("id,closed,page_params->gr_id,page_params->member_id,sender,sender->member_id,recipient,recipient->role_id").Row()
        if $notific["closed"] == 1 {
            warning LangRes("@1request_already", "en")
        }
    }

    action {
        $gr_id = Int($notific["page_params.gr_id"])
        $member_id = Int($notific["page_params.member_id"])
        if $Accept == 1 {
            @1GroupsAssign("gr_id,member_id", $gr_id, $member_id)
        }
        var params map
        params["gr_id"] = $gr_id
        if $Accept == 1 {
            params["decide"] = 1
        } else {
            params["decide"] = -1
        }
        var icon header body page ecoName string member int
        icon = "icon icon-user-follow"
        header = "Request to group"
        body = "Solution for your request"
        page = "@1groups_request_view"
        member = Int($notific["sender.member_id"])
        if $notific["recipient.role_id"] > 0 {
            @1NotificationsSend("MemberId,Sender,Icon,Header,Body,Page,Params,EcosystemId,CurrentRid", member, 2, icon, header, body, page, params, $ecosystem_id, Int($notific["recipient.role_id"]))
            @1NotificationsProcess("NotificId", $NotificId)
            @1NotificationsClose("NotificId", $NotificId)
        } else{
            @1NotificationsSend("MemberId,Sender,Icon,Header,Body,Page,Params,EcosystemId", member, 1, icon, header, body, page, params, $ecosystem_id)
            @1NotificationsClose("NotificId", $NotificId)
        }
    }
}