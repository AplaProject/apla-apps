contract VotingSubjectCandidates {
    data {
        votingID int
        Address string
    }

    conditions {
        $STARTED = 3
        $FINISHED = 4
        $voting = DBFind("@1votings").Where({"ecosystem": $ecosystem_id, "id": $votingID}).Columns("id,optional->number_candidates,voting->type,flags->full_data,status").Row()
        if $voting["status"] == $STARTED {
            warning LangRes("@1voting_started_can_not_add_candidates", "en")
        }
        if $voting["status"] == $FINISHED {
            warning LangRes("@1voting_finished_can_not_add_candidates", "en")
        }

        if $voting["flags.full_data"] == 1 && $voting["voting.type"] == 2 {
            warning LangRes("@1system_voting_can_not_edit", "en")
        }

        if $Address == "" {
            $Address = IdToAddress($key_id)
        }

        if DBFind("@1votings_subject").Where({"ecosystem": $ecosystem_id, "voting_id": $votingID, "subject->address": $Address}).One("id") {
            warning LangRes("@1candidate_added_before", "en")
        }
    }

    action {
        var m member map
        member["member_id"] = AddressToId($Address)
        member["address"] = $Address
        DBInsert("@1votings_subject", {"ecosystem":$ecosystem_id, "voting_id":$votingID, "subject":member})
        m["optional->number_candidates"] = Int($voting["optional.number_candidates"]) + 1
        DBUpdate("@1votings", $votingID, m)
        @1VotingSubjectCheck("votingID", $votingID)
    }
}