contract VotingSubjectCandidates {
    data {
        VotingId int
        MemberId string
    }

    func getMemberInfo(account string) map {
        var res member map
        member = DBFind("@1members").Where({"ecosystem": $ecosystem_id, "account": account}).Row()
        if member {
            res["account"] = member["account"]
            res["member_name"] = member["member_name"]
            res["image_id"] = member["image_id"]
        } else {
            if DBFind("@1keys").Columns("id").Where({"ecosystem": $ecosystem_id, "account": account, "deleted": 0}).Row() {
                res["account"] = account
                res["member_name"] = account
                res["image_id"] = "0"
            }
        }
        return res
    }

    conditions {
        $STARTED = 3
        $FINISHED = 4
        $voting = DBFind("@1votings").Where({"ecosystem": $ecosystem_id, "id": $VotingId}).Columns("id,optional->number_candidates,voting->type,flags->full_data,status,creator->account,voting->type_decision").Row()
        if !$voting {
            warning LangRes("@1voting_started_can_not_edit", "en")
        }
        if $voting["creator.account"] != $account_id {
            if $voting["voting.type_decision"] != 1 && $MemberId != $account_id {
                warning LangRes("@1access_denied", "en")
            }
        }
        if $voting["status"] == $STARTED {
            warning LangRes("@1voting_started_can_not_add_candidates", "en")
        }
        if $voting["status"] == $FINISHED {
            warning LangRes("@1voting_finished_can_not_add_candidates", "en")
        }

        if $voting["flags.full_data"] == 1 && $voting["voting.type"] == 2 {
            warning LangRes("@1system_voting_can_not_edit", "en")
        }

        if !$MemberId || $MemberId == "0" {
            $MemberId = $account_id
        }

        if DBFind("@1votings_subject").Where({"ecosystem": $ecosystem_id, "voting_id": $VotingId, "subject->account": $MemberId}).One("id") {
            warning LangRes("@1candidate_added_before", "en")
        }

        $member = getMemberInfo($MemberId)
        if !$member {
            warning Sprintf(LangRes("@1key_not_found", "en") + " (%v)", $MemberId)
        }
    }

    action {
        DBInsert("@1votings_subject", {ecosystem: $ecosystem_id, voting_id: $VotingId, subject: $member})
        var m map
        m["optional->number_candidates"] = Int($voting["optional.number_candidates"]) + 1
        DBUpdate("@1votings", $VotingId, m)
        @1VotingSubjectCheck("VotingId", $VotingId)
    }
}