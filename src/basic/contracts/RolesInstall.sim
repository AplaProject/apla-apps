contract RolesInstall {

    func updateParam(name string, value int) {
        var app_param map
        app_param = DBFind("@1app_params").Where({"ecosystem": $ecosystem_id, "app_id": $app_id, "name": name}).Row()
        if app_param {
            var params map
            params["Id"] = Int(app_param["id"])
            params["Value"] = value
            params["Conditions"] = "ContractConditions(\"MainCondition\")"
            CallContract("@1EditAppParam", params)
        } else {
            var params map
            params["ApplicationId"] = $app_id
            params["Name"] = name
            params["Value"] = value
            params["Conditions"] = "ContractConditions(\"MainCondition\")"
            CallContract("@1NewAppParam", params)
        }
    }

    func addRole(name string, withParticipant bool, managerId int) int{
        var m map paramName string id int
        m["role_name"] = name
        m["role_type"] = 3
        m["ecosystem"] = $ecosystem_id
        id = Int(DBFind("@1roles").Where(m).One("id"))
        if id == 0 {
            m["default_page"] = ""
            m["deleted"] = 0
            m["creator->image_id"] = 0
            m["creator->member_name"] = "founder"
            m["creator->account"] = Str($account_id)
            m["date_created"] = $block_time
            if managerId > 0 {
                m["roles_access"] = Sprintf("[%v]", managerId)
            } else {
                m["roles_access"] = "[]"
            }
            id = DBInsert("@1roles", m)
        }
        paramName = "role_" + Replace(ToLower(name), " ", "_")
        updateParam(paramName, id)

        if withParticipant {
            var participant map
            participant["role->id"] = id
            participant["role->type"] = m["role_type"]
            participant["role->name"] = m["role_name"]
            participant["role->image_id"] = 0
            participant["member->account"] = Str($account_id)
            participant["member->member_name"] = "founder"
            participant["member->image_id"] = 0
            participant["ecosystem"] = $ecosystem_id

            if !DBFind("@1roles_participants").Where(participant).One("id") {
                participant["date_created"] = $block_time
                DBInsert("@1roles_participants", participant)
            }
        }
        return id
    }

    conditions {
        MainCondition()
    }

    action {
        $app_id = DBFind("@1applications").Where({"ecosystem": $ecosystem_id, "name": "System"}).One("id")
        var managerId int
        managerId = addRole("Admin", true, 0)
        @1RolesAccessManager("Action,Rid,ManagerRid", "add", managerId, managerId)
        addRole("Developer", true, managerId)

        if $ecosystem_id == 1 {
            addRole("Consensus", false, managerId)
            addRole("Candidate for validators", false, managerId)
            addRole("Validator", false, managerId)
            addRole("Investor with voting rights", false, managerId)
            addRole("Delegate", false, managerId)
        }

        updateParam("role_creates_roles", 0)
    }
}