contract TokensRefundReject {
    data {
        RefundId int
    }

    conditions {
        var prevContract string
        prevContract = $stack[0]
        if Len($stack) > 2 {
            prevContract = $stack[Len($stack) - 2]
        }
        if prevContract != "@1VotingDecisionCheck" {
            warning LangRes("@1contract_start_votingdecisioncheck_only", "en")
        }
        
        $tokenrefund = DBFind("@1tokens_refund").Where({"id": $RefundId}).Row()
        if !$tokenrefund {
            warning LangRes("@1tokens_refund_not_found", "en")
        }

        $RecipientId = $tokenrefund["victim_account"]
        $SenderId = $tokenrefund["attacker_account"]
        $amount = Money($tokenrefund["amount"])
        $votingID = Int($tokenrefund["voting_id"])
    }

    action {
        if $tokenrefund["result"] == 0 {
            TokensLockoutMember("KeyId,Value", $RecipientId, 0)
            TokensLockoutMember("KeyId,Value", $SenderId, 0)

            var m map
            m["status"] = 2
            m["result"] = 1
            m["closed_at"] = $block_time
            DBUpdate("@1tokens_refund", Int($RefundId), m)
        }
    }
}