contract RolesRequest {
    data {
        Rid int
    }

    conditions {
        if !DBFind("@1roles").WhereId($Rid).One("id") {
            warning LangRes("@1role_not_found", "en")
        }

        if DBFind("@1roles_participants").Where({"role->id": $Rid, "member->account": $account_id, "deleted": 0}).One("id") {
            warning LangRes("@1role_you_added_already", "en")
        }

        if DBFind("@1notifications").Where({"ecosystem": $ecosystem_id, "page_name": "@1roles_request_view", "page_params->rid": $Rid, "sender->account": $account_id, "closed": 0}).One("id") {
            warning LangRes("@1request_sent_already", "en")
        }
    }

    action {
        var params map
        params["rid"] = $Rid

        var founder_id int founder_account string
        founder_id = Int(EcosysParam("founder_account"))
        founder_account = IdToAddress(founder_id)

        @1NotificationsSend("MemberId,Sender,Icon,Header,Body,Page,Params", founder_account, 1, "fa-bars", LangRes("@1roles", "en"), LangRes("@1new_request_received", "en"), "@1roles_request_view", params)
    }
}