contract SectionAdd {
	data {
		title string
		status int
		urlname string
		page string
		roles_access_ids array
		roles_access_vals array
	}
	conditions {
		if $status < 0 || $status > 2 {
			warning "Status must be in range 0..2"
		}
		if DBFind("sections").Columns("id").Where({"urlname:$urlname}) {
			warning Sprintf("Section with url name '%s' already exists", $urlname)
		}
		if Len($roles_access_ids) != Len($roles_access_vals) {
			warning Sprintf("Given '%s' role IDs but checked '%v' role IDs", Len($roles_access_ids), Len($roles_access_vals))
		}
	}
	action {
		var roles_access map i int k string
		while i < Len($roles_access_ids) {
			k = Str($roles_access_ids[i])
			roles_access[k] = $roles_access_vals[i]
			i = i + 1
		}
		//DBInsert("sections", "title,status,urlname,page,roles_access", $title, $status, $urlname, $page, JSONEncode(roles_access))
		DBInsert("sections", {"title":$title, "status":$status, "urlname":$urlname, "page":$page, "roles_access":JSONEncode(roles_access)})
		}
}