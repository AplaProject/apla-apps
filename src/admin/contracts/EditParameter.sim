contract EditParameter {
    data {
        Id int
        Value string "optional"
        Conditions string "optional"
    }
    func onlyConditions() bool {
        return $Conditions && !$Value
    }

    conditions {
        RowConditions("parameters", $Id, onlyConditions())
        if $Conditions {
            ValidateCondition($Conditions, $ecosystem_id)
        }
		$Name = DBFind("@1parameters").Where({id: $Id, ecosystem: $ecosystem_id}).One("name")
		if $Name == "founder_account" {
			if !DBFind("@1members").Where({id:$Value, ecosystem: $ecosystem_id}).One("id") {
				 warning Sprintf("User %v not found", $Value)
			}
		}
        if $Name == "max_block_user_tx" || $Name == "money_digit" || $Name == "max_sum" || $Name == "min_page_validate_count" || $Name == "max_page_validate_count" {
			if Size($Value) == 0 {
				warning "Value was not received"
			}
            if Int($Value) <= 0 {
				warning "Value must be greater than zero"
			}
        }
    }

    action {
        var pars map
        if $Value {
            pars["value"] = $Value
        }
        if $Conditions {
            pars["conditions"] = $Conditions
        }
        if pars {
            DBUpdate("@1parameters", $Id, pars)
        }
    }
}
