contract UploadBinary {
    data {
        ApplicationId int
        Name string
        Data bytes "file"
        DataMimeType string "optional"
    }

    conditions {
        $Id = Int(DBFind("@1binaries").Columns("id").Where({app_id: $ApplicationId,
            member_id: $key_id, name: $Name, ecosystem: $ecosystem_id}).One("id"))

        if $Id == 0 {
            if $ApplicationId == 0 {
                warning "Application id cannot equal 0"
            }
        }
    }
    action {
        var hash string
        hash = MD5($Data)

        if $DataMimeType == "" {
            $DataMimeType = "application/octet-stream"
        }

        if $Id != 0 {
            DBUpdate("@1binaries", $Id, {"data": $Data,"hash": hash,"mime_type": $DataMimeType})
        } else {
            $Id = DBInsert("@1binaries", {"app_id": $ApplicationId,"member_id": $key_id,
               "name": $Name,"data": $Data,"hash": hash, "mime_type": $DataMimeType})
        }

        $result = $Id
    }
}