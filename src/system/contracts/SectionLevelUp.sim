contract SectionLevelUp {
    data {
        Id int
    }

    conditions {
        DeveloperCondition()

        if !DBFind("@1sections").Where({"id": $Id, "ecosystem": $ecosystem_id}).Columns("id") {
            warning Sprintf(LangRes("@1template_section_not_exist", "en"), $Id)
        }
        $next = DBFind("@1sections").Where({"id": {"$lt": $Id}, "ecosystem": $ecosystem_id}).Columns("id")
        if !$next {
            warning LangRes("@1section_already_top", "en")
        }
    }

    action {
        var next_id int
        var last_id int
        next_id = $Id - 1
        $max_id = DBFind("@1sections").Order({"id": "-1"}).One("id")
        last_id = $max_id + 1
        DBUpdate("@1sections", next_id, {"id":last_id})
        DBUpdate("@1sections", $Id, {"id":next_id})
        DBUpdate("@1sections", last_id, {"id":$Id})
    }
}