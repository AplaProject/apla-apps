contract BindWallet {
    data {
        Id int
        WalletId string "optional"
    }

    func sendInvite() {
        if GetContractByName("@1NotificationsSend") == 0 {
            warning LangRes("@1notifications_install_needed", "en")
        } else {
            $request = DBFind("@1notifications").Where({"recipient->account": $WalletId, "page_name": "contract_bind_request", "page_params->contract_id": $Id, "ecosystem": $ecosystem_id, "closed": 0}).Columns("id")
            if $request {
                warning LangRes("@1request_sent_already", "en")
            }

            var notific params map
            params["contract_id"] = $Id
            params["contract_name"] = $cur["name"]
            notific["MemberAccount"] = $WalletId
            notific["Sender"] = 1
            notific["Icon"] = "icon icon-link"
            notific["Header"] = LangRes("@1request_contract_binding", "en")
            notific["Body"] = LangRes("@1details_view", "en")
            notific["Page"] = "contract_bind_request"
            notific["Params"] = params
            CallContract("@1NotificationsSend", notific)
        }
    }

    func closeInvite() {
        if GetContractByName("@1NotificationsClose") == 0 {
            warning LangRes("@1notifications_install_needed", "en")
        } else {
            $request = DBFind("@1notifications").Where({"recipient->account": $account_id, "page_name": "contract_bind_request", "page_params->contract_id": $Id, "ecosystem": $ecosystem_id, "closed": 0}).Columns("id")
            var i int r map
            while i < Len($request) {
                r = $request[i]
                var params map
                params["NotificId"] = Int(r["id"])
                CallContract("@1NotificationsClose", params)
                i = i + 1
            }
        }
    }

    conditions {
        DeveloperCondition()

        $cur = DBFind("@1contracts").Columns("id,name,conditions,wallet_id").Where({"id": $Id, "ecosystem": $ecosystem_id}).Row()
        if !$cur {
            warning Sprintf(LangRes("@1contract_x_not_exist", "en"), $Id)
        }
        if Size($WalletId) == 0 {
            warning LangRes("@1wallet_not_found", "en")
        }
        RowConditions("@1contracts", $Id, false)
    }

    action {
        if $WalletId == "" || $WalletId == $account_id {
            BndWallet($Id, $ecosystem_id)
            closeInvite()
        } else {
            sendInvite()
        }
    }
}