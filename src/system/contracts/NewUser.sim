contract NewUser {
    data {
        NewPubkey string "optional"
        Account string "optional"
    }

    conditions {
        $newId = PubToID($NewPubkey)
        
        if $newId == 0 {
            warning LangRes("@1wrong_pub", "en")
        }
        if DBFind("@1keys").Columns("id").Where({"id": $newId, "ecosystem": $ecosystem_id}).One("id") != nil {
            warning Sprintf(LangRes("@1template_user_exists", "en"), IdToAddress($newId))
        }

        if Size($NewPubkey) == 0 {
            warning "You did not enter the public key"
        }

        $pub = HexToPub($NewPubkey)
        $amount = Money(1000) * Money(1000000000000000000)

        if Size($Account) > 0 {
            $k_id = DBFind("@1keys").Columns("id").Where({"account": $Account, "ecosystem": $ecosystem_id, "deleted": 0}).One("id") 
            if $k_id == nil {
                warning "Account not found"
            }
        }
    }

    action {
        if Size($Account) > 0 {
            $account = $Account
            DBInsert("keys", {"id": $newId, "account": $account, "pub": $pub, "amount": $amount, "ecosystem": 1})
            $result = $account

            DBUpdate("@1keys", Int($k_id), {"deleted": 1})
        } else {
            $account = IdToAddress($newId)
            DBInsert("keys", {"id": $newId, "account": $account, "pub": $pub, "amount": $amount, "ecosystem": 1})
            $result = $account
        }
    }
}