contract SectionRoles {
    data {
        Id int
        Rid int
        Operation string
    }

    conditions {
        if $Operation == "add" {
            var roles_id map json array i int
            roles_id = DBFind("@1sections").Columns("roles_access").Where({"id": $Id, "ecosystem": $ecosystem_id}).Row()
            json = JSONDecode(roles_id["roles_access"])
            while i < Len(json) {
                if json[i] == $Rid {
                    warning LangRes("@1role_already_permission", "en")
                }
                i = i + 1
            }
        }
    }

    action {
        var roles_array array
        roles_array = DBFind("@1sections").Columns("roles_access").Where({"id": $Id, "ecosystem": $ecosystem_id}).One("roles_access")
        if $Operation == "add" {
            if roles_array == "[]" {
                var roles_id array
                roles_id[0] = $Rid
                roles_id = JSONEncode(roles_id)
                DBUpdate("@1sections", $Id, {"roles_access":roles_id})
            } else {
                var roles_id map
                var json array
                roles_id = DBFind("@1sections").Columns("roles_access").Where({"id": $Id, "ecosystem": $ecosystem_id}).Row()
                json = JSONDecode(roles_id["roles_access"])
                json = Append(json, $Rid)
                json = JSONEncode(json)
                DBUpdate("@1sections", $Id, {"roles_access":json})
            }
        }
        if $Operation == "remove" {
            var json array
            var roles_id map
            roles_id = DBFind("@1sections").Columns("roles_access").Where({"id": $Id, "ecosystem": $ecosystem_id}).Row()
            json = JSONDecode(roles_id["roles_access"])
            if Len(json) == 1 {
                var roles_access array
                roles_access = JSONEncode(roles_access)
                DBUpdate("@1sections", $Id, {"roles_access":roles_access})
            } else {
                var buffer string
                buffer = Join(json, ",")
                if Contains(buffer, Str($Rid)) {
                    buffer = Replace(buffer, `,` + Str($Rid), ``)
                }
                if HasPrefix(buffer, Str($Rid)) {
                    buffer = Replace(buffer, Str($Rid) + `,`, ``)
                }
                json = Split(buffer, ",")
                json = JSONEncode(json)
                DBUpdate("@1sections", $Id, {"roles_access":json})
            }
        }
    }
}