contract UpdateSysParam {
    data {
        Name string
        Value string
        VotingId int
        Conditions string "optional"
    }

    conditions {
        if GetContractByName($Name) == 0{
            warning LangRes("@1system_parameter_not_found", "en")
        }

        var prev string
        prev = $stack[0]
        if Len($stack) > 2{
            prev = $stack[Len($stack) - 2]
        }
        if prev != "@1VotingDecisionCheck" {
            warning LangRes("@1contract_start_votingdecisioncheck_only", "en")
        }
        $voting = DBFind("@1votings").Where({ecosystem:$ecosystem_id, id: $VotingId }).Columns("voting->type_decision,flags->success,voting->type").Row()
        if Int($voting["voting.type"]) != 2 {
            warning LangRes("@1voting_type_invalid", "en")
        }
        if Int($voting["voting.type_decision"]) != 4 {
            warning LangRes("@1voting_error_decision", "en")
        }
        if Int($voting["flags.success"]) != 1 {
            warning LangRes("@1voting_error_success", "en")
        }
    }

    action {
        var params map
        params["Value"] = $Value
        CallContract($Name, params)
        DBUpdateSysParam($Name, $Value, $Conditions)
    }
}