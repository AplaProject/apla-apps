DBFind("@1applications").Where({"ecosystem": "#ecosystem_id#", "name": "System"}).Vars(application)
SetVar(role_developer_id, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_developer))
SetVar(role_admin_id, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_admin))
DBFind("@1roles_participants").Where({"ecosystem": "#ecosystem_id#", "$and": [{"role->id": {"$in": [#role_developer_id#]}}, {"role->id": "#role_id#"}], "member->account": "#account_id#", "deleted": 0}).Vars(developer_access)
DBFind("@1roles_participants").Where({"ecosystem": "#ecosystem_id#", "$and": [{"role->id": {"$in": [#role_admin_id#]}}, {"role->id": "#role_id#"}], "member->account": "#account_id#", "deleted": 0}).Vars(admin_access)

If(Or(#developer_access_id#>0,#admin_access_id#>0)){
    Div(content-wrapper){
        DBFind("@1tables").Columns("id,name,columns,conditions,permissions->insert,permissions->update,permissions->new_column,permissions->read").Vars(pre).Where({"id": "#tabl_id#", "ecosystem": "#ecosystem_id#"})

        SetTitle($@1tables$)
        Div(breadcrumb){
            Div(){
                LinkPage($@1tables$, @1app_tables)
                Span(/, mh)
                LinkPage(#pre_name#, @1table_view,, "tabl_id=#tabl_id#")
                Span(/, mh)
                Span($@1edit_table$, text-muted)
            }
        }

        Form(){
            Div(panel panel-default){
                Div(panel-body){
                    Div(row){
                        Div(col-xs-3 col-md-3 h4){
                            Label($@1name$)
                        }
                        Div(col-xs-2 col-md-2 h4){
                            Label($@1type$)
                        }
                        Div(col-xs-5 col-md-5 h4){
                            Label($@1conditions$)
                        }
                        Div(col-xs-2 col-md-2 text-right){
                        }
                    }
                    JsonToSource(src_columns, #pre_columns#)
                    ForList(src_columns){
                        SetVar(name_column,#key#)
                        Div(list-group-item){
                            Div(row){
                                Div(col-xs-3 col-md-3 h5){
                                    Span(#key#)
                                }
                                Div(col-xs-2 col-md-2 h5){
                                    SetVar(col_type,GetColumnType(#pre_name#, #key#))
                                    If(#col_type# == text){
                                        Span("Text")
                                    }.ElseIf(#col_type# == number){
                                        Span("Number")
                                    }.ElseIf(#col_type# == money){
                                        Span("Money")
                                    }.ElseIf(#col_type# == varchar){
                                        Span("Varchar")
                                    }.ElseIf(#col_type# == datetime){
                                        Span("Date/Time")
                                    }.ElseIf(#col_type# == double){
                                        Span("Double")
                                    }.ElseIf(#col_type# == character){
                                        Span("Character")
                                    }.ElseIf(#col_type# == json){
                                        Span("JSON")
                                    }.ElseIf(#col_type# == bytea){
                                        Span("Binary Data")
                                    }.ElseIf(#col_type# == uuid){
                                        Span("UUID")
                                    }
                                }
                                Div(col-xs-5 col-md-5){
                                    SetVar(isObject,0)
                                    JsonToSource(condition,#value#)
                                    ForList(condition){
                                        SetVar(isObject,1)
                                        If(#key#==read){
                                            Div(){
                                                Span($@1reading$:,text-muted)
                                                Span(#value#,ml-sm)
                                            }
                                        }.ElseIf(#key#==update){
                                            Div(){
                                                Span($@1updating$:,text-muted)
                                                Span(#value#,ml-sm)
                                            }
                                        }
                                    }
                                    If(#isObject#==0){
                                        Div(){
                                            Span($@1reading$:,text-muted)
                                            Span(true,ml-sm)
                                        }
                                        Div(){
                                            Span($@1updating$:,text-muted)
                                            Span(#value#,ml-sm)
                                        }
                                    }
                                }
                                Div(col-xs-2 col-md-2 text-right){
                                    Button(Body: $@1edit$, Class: btn btn-primary, Page: @1column_edit, PageParams: "name_column=#name_column#,tabl_id=#tabl_id#")
                                }
                            }
                        }
                    }
                }
                Div(panel-footer text-right){
                    Button(Body: $@1column_add$, Class: btn btn-primary, Page: @1column_add, PageParams: "next_table_name=#pre_name#,tabl_id=#tabl_id#")
                }
            }
            Div(row){
                Div(col-xs-6 col-md-6){
                    Div(panel panel-default){
                        Div(panel-heading){$@1write_permissions$}
                        Div(panel-body){
                            Div(form-group){
                                Label($@1insert$)
                                Input(Name: InsertPerm, Type: text, Value: #pre_permissions_insert#)
                            }
                            Div(form-group){
                                Label($@1updating$)
                                Input(Name: UpdatePerm, Type: text, Value: #pre_permissions_update#)
                            }
                            Div(form-group){
                                Label($@1new_column$)
                                Input(Name: NewColumnPerm, Type: text, Value: #pre_permissions_new_column#)
                            }
                            Div(form-group){
                                Label($@1reading$)
                                Input(Name: ReadPerm, Type: text, Value: #pre_permissions_read#)
                            }
                        }
                        Div(panel-footer text-right){
                            Button(Body: $@1save$, Class: btn btn-primary, Contract: @1EditTable, Page: @1app_tables, Params: "Name=#pre_name#")
                        }
                    }
                }
                Div(col-xs-6 col-md-6){
                    Div(panel panel-default){
                        Div(panel-heading){$@1conditions_for_change$}
                        Div(panel-body){
                            Div(form-group){
                                Input(Name: Insert_condition, Disabled: true, Type: text, Value: #pre_conditions#)
                            }
                        }
                    }
                }
            }
        }
    }
}.Else{
    SetTitle($@1tables$)
    Div(breadcrumb){
        Span(Class: text-muted, Body: $@1role_change_no_view_permission$)
    }
}