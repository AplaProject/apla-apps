DBFind("@1applications").Where({"ecosystem": "#ecosystem_id#", "name": "System"}).Vars(application)
SetVar(role_developer_id, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_developer))
SetVar(role_admin_id, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: role_admin))
DBFind("@1roles_participants").Where({"ecosystem": "#ecosystem_id#", "$and": [{"role->id": {"$in": [#role_developer_id#]}}, {"role->id": "#role_id#"}], "member->account": "#account_id#", "deleted": 0}).Vars(developer_access)
DBFind("@1roles_participants").Where({"ecosystem": "#ecosystem_id#", "$and": [{"role->id": {"$in": [#role_admin_id#]}}, {"role->id": "#role_id#"}], "member->account": "#account_id#", "deleted": 0}).Vars(admin_access)

If(Or(#developer_access_id#>0,#admin_access_id#>0)){
    SetVar(this_page, @1history)
    If(#view_mode# == ""){
        SetVar(view_mode, "compact")
    }
    If(#view_mode# == compact){
        SetVar(compact_button, "bg-gray-lighter")
        SetVar(full_button, "bg-gray")
    }.Else{
        SetVar(full_button, "bg-gray-lighter")
        SetVar(compact_button, "bg-gray")
    }
    SetVar(element_id, #id#)
    If(#type# == page){
        DBFind(@1pages).Where({"id": "#element_id#", "ecosystem": "#ecosystem_id#"}).Limit(1).Vars("res")
        SetTitle($@1page_history$: #res_name#)
        SetVar(contract_name, "@1EditPage")
        GetHistory(Source: src_history, Name: pages, Id: #element_id#)
    }.ElseIf(#type# == block){
        DBFind(@1blocks).Where({"id": "#element_id#", "ecosystem": "#ecosystem_id#"}).Limit(1).Vars("res")
        SetTitle($@1block_history$: #res_name#)
        SetVar(contract_name, "@1EditBlock")
        GetHistory(Source: src_history, Name: blocks, Id: #element_id#)
    }.ElseIf(#type# == contract){
        DBFind(@1contracts).Where({"id": "#element_id#", "ecosystem": "#ecosystem_id#"}).Limit(1).Vars("res")
        SetTitle($@1contract_history$: #res_name#)
        SetVar(contract_name, "@1EditContract")
        GetHistory(Source: src_history, Name: contracts, Id: #element_id#)
    }.ElseIf(#type# == menu){
        DBFind(@1menu).Where({"id": "#element_id#", "ecosystem": "#ecosystem_id#"}).Limit(1).Vars("res")
        SetTitle($@1menu_history$: #res_name#)
        SetVar(contract_name, "@1EditMenu")
        GetHistory(Source: src_history, Name: menu, Id: #element_id#)
    }

    Div(mr-lg text-right){
        Button(Page: #this_page#, PageParams: "view_mode=compact,type=#type#,id=#element_id#", Class: btn #compact_button# mr-sm, Body: Em(Class: fa fa-bars) $@1compact$)
        Button(Page: #this_page#, PageParams: "view_mode=full,type=#type#,id=#element_id#", Class: btn #full_button# mr-sm, Body: Em(Class: fa fa-arrows-alt) $@1full$)
    }.Style(margin-top: -33px; z-index: 1001;)

    Div(fullscreen){
        Div(list-group-item ml-lg mr-lg){
            Div(table){
                Div(table__head){
                    Div(table__row){
                        Div(table__cell){$@1id$}
                        Div(table__cell){$@1value$}
                        Div(table__cell){}
                    }
                }
                Div(table__row){
                    Div(table__cell table__cell_collapse){$@1current$}
                    Div(table__cell){
                        If(#view_mode# == compact){
                            VarAsIs(value_as_is, #res_value#)
                            Span(#value_as_is#)
                        }.ElseIf(#view_mode# == full){
                            VarAsIs(value_as_is, #res_value#)
                            Code(#value_as_is#)
                        }
                    }
                    Div(table__cell table__cell_collapse){}
                }
                ForList(src_history){
                    If(#id#>0){
                        Div(table__row){
                            Div(table__cell table__cell_collapse){#id#}
                            Div(table__cell){
                                If(#view_mode# == compact){
                                    VarAsIs(value_as_is, #value#)
                                    Span(#value_as_is#)
                                }.ElseIf(#view_mode# == full){
                                    VarAsIs(value_as_is, #value#)
                                    Code(#value_as_is#)
                                }
                            }
                            Div(table__cell table__cell_collapse){
                                Div(text-right){
                                    Button(Class: btn bg-gray-lighter mr-sm, Body: Em(Class: fa fa-eye), Page: @1history_compare, PageParams: "type=#type#,element_id=#element_id#,history_id=#id#")
                                    Button(Class: btn bg-gray-lighter, Body: Em(Class: fa fa-undo), Page: #this_page#, PageParams: "type=#type#,id=#element_id#,view_mode=#view_mode#", Contract: #contract_name#, Params: "Id=#element_id#,Value=#value_as_is#").Alert(Text: "$@1want_restore_history_value$", ConfirmButton: "$@1yes$", CancelButton: "$@1no$", Icon: icon-question)
                                }.Style(min-width: 120px;)
                            }
                        }
                    }
                }
            }
        }
    }.Style(
        .table {
            display: table;
        }

        .table > div:not(.table__body) {
            display: table-row-group;
        }

        .table .table__head {
            display: table-header-group;
        }

        .table .table__head .table__cell {
            font-weight: 700;
            color: #888;
            background: #fff !important;
            border-left: 0 !important;
            border-right: 0 !important;
            border-top: 0 !important;
        }

        .table .table__row {
            display: table-row;
            flex-direction: row;
            flex-wrap: no-wrap;
        }

        .table .table__row:nth-child(even) {
            background: #f8f9fc;
        }

        .table .table__row .table__cell {
            border-top: solid 1px #eee;
        }

        .table .table__cell {
            display: table-cell;
            padding: 8px 10px;
        }

        .table .table__cell.table__cell_collapse {
            width: 1px;
        }
    )
}.Else{
    SetTitle($@1page_history$)
    Div(breadcrumb){
        Span(Class: text-muted, Body: $@1role_change_no_view_permission$)
    }
}