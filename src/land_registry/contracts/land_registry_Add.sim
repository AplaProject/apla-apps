contract land_registry_Add{
    data{
        OwnerId int
        Coords string // {"coords":[{"lat":float,"lng":float},],"area": float,"address": string}
        LandUse int
        BuildingsUseClass int
        RegistrationDate string
        LandNature int
        LandLocalBody int
    }
    
    func conditions{
        var member map
        member = DBFind("@1members").Where({"id": $OwnerId, "ecosystem": $ecosystem_id}).Row()
        if !member {
            warning "Member account for Owner not found"
        }
        
        $depart2_RoleId = DBFind("@1roles").Where({"role_name": "land_depart2", "deleted": 0, "ecosystem": $ecosystem_id}).One("id")
        $depart3_RoleId = DBFind("@1roles").Where({"role_name": "land_depart3", "deleted": 0, "ecosystem": $ecosystem_id}).One("id")
        if $depart2_RoleId == nil || $depart3_RoleId == nil{
            info "Department roles not found"
        }
        
    }
    func action{
        var icon, header, body, page, roleParams, coordsAddress, area string params, params2, params3 map
        var closureType, landId int
        var coords map
        coords = JSONToMap($Coords)
        coordsAddress = coords["address"]
        area = Sprintf("%.0f", coords["area"])
        
        landId = DBInsert("land_registry", {"owner_id": $OwnerId, "address": coordsAddress, "area": area, "buildings_use_class": $BuildingsUseClass, "map_coords": $Coords, "land_use": $LandUse, "date_create": $block_time, "delete": 0, "land_nature": $LandNature, "land_local_body": $LandLocalBody, "registration_date": $RegistrationDate, "modification_date": $block_time})
        
        DBInsert("land_registry_ownership", {"step": "-1", "date_create": $block_time, "date_signing": $block_time, "lend_object_id": landId, "owner_id": $OwnerId, "owner_new_id": $OwnerId})
        
        icon = "fa fa-bell-o"
        header = "$new_land$"
        body = "$need_processing$"
        closureType = 2
        
        roleParams = "sender,rid,closure_type,icon_name,text_header,text_body,page_name,params_map"
        
        //notify role2
        params2["land_id"] = landId
		params2["depart2"] = 1
        page = "land_registry_depart2_edit"
        @1NotificationsSend(roleParams,1,Int($depart2_RoleId),closureType,icon,header,body,page,params2)
        
        //notify role3
        params3["land_id"] = landId
		params3["depart3"] = 1
        page = "land_registry_depart3_edit"
        @1NotificationsSend(roleParams,1,Int($depart3_RoleId),closureType,icon,header,body,page,params3)
        
        //notify owner
        params["land_id"] = landId
		params["depart1"] = 1
        page = "land_registry_depart1_edit"
        @1NotificationsSend("sender,member_id,icon_name,text_header,text_body,page_name,params_map", 1,$OwnerId,icon,header,body,page,params)
    }
}