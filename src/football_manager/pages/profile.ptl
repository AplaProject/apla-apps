If(Or(#v_key_id#>0,#v_key_id#<0)){
}.Else{
    SetVar(v_key_id,#key_id#)
}
DBFind(@1members,Source: src_mem).Where({ecosystem:1, id:#v_key_id#}).Columns("id,image_id,member_name,member_info->information,manager_info->type,ecosystem").Vars(member)

If(Or(#member_id#>0,#member_id#<0)){
    SetVar(member_name, #member_member_name#).(member_info, #member_member_info_information#)
}.Else{
    SetVar(member_name,).(member_info,)
}

Div(Class: content-wrapper){
    Div(Class: col-md-6 col-md-offset-3){
        Div(Class: panel panel-default){
            Div(Class: panel-heading){
                Div(Class: col-md-6 bb){
                    Span(Body: Profile, Class: h2 ml-sm)
                    P(Body: LangRes(@1user_info), Class: ml-sm text-muted)
                }.Style(height: 64px;)
                Div(Class: col-md-6 bb){
                    If(#member_id# != 0){
                        Button(Class: btn btn-link pull-right p0, Page: profile_update){
                            Div(Class: h4 m0 p, Body: LangRes(@1editing_profile))
                        }
                    }
                }.Style(height: 64px;)
            }
            Div(Class: panel-body){
                Div(Class: pt-xl)
                Div(Class: pt-xl){
                    Div(Class: col pull-right){
                        If(Or(#member_id#>0,#member_id#<0)){
                            If(#member_id# == #key_id#){
                                Button(Class: btn btn-link, Page: profile_update){
                                    If(#member_image_id#>0){
                                        Image(Src: Binary().ById(#member_image_id#), Class: img-thumbnail).Style(width: 180px; border: 1px solid #5A5D63;)
                                    }.Else{
                                        Span(Class: icon-user text-primary).Style(font-size: 13em!important;)
                                    }
                                }
                            }.Else{
                                If(#member_image_id#>0){
                                    Image(Src: Binary().ById(#member_image_id#), Class: img-thumbnail).Style(width: 180px; border: 1px solid #5A5D63;)
                                }.Else{
                                    Span(Class: icon-user).Style(font-size: 13em!important;)
                                }
                                Div(m0 h4 text-bold){#member_name#}
                            }
                        }
                    }
                    Div(Class: col-md-3 ml-sm){
                        Div(Class: text-muted h4, Body: Name)
                    }
                    Div(Class: col){
                        Div(Class: text-bold h4){
                            Button(Class: btn-link text-primary p0 b0, Page: profile_update){
                                Div(Class: h4 m0, Body: #member_name#)
                            }
                        }
                    }                
                }
                Div(Class: pt-sm){
                    Div(Class: col-md-3 ml-sm){
                        Div(Class: text-muted h4, Body: $@1wallet_address$)
                    }
                    Div(Class: col){
                        Div(Class: text-bold h4, Body: Address(#v_key_id#))
                    }                    
                }
                If(#v_key_id# == #key_id#){
                    Div(Class: pt-sm){
                    DBFind(@1keys).Where({ecosystem:1, id:#v_key_id#}).Vars(apl)
                        Div(Class: col-md-3 ml-sm){
                            Div(Class: text-muted h4, Body: $@1balance$)
                        }
                        Div(Class: col){
                            Div(Class: text-bold h4, Body: Money(#apl_amount#) APLA)
                        }
                        Div(Class: pt-sm){
                            Div(Class: col-md-3 ml-sm){
                                Div(Class: text-muted h4, Body: Operations)
                            }
                            Div(Class: col){
                                Div(Class: text-bold h4){
                                    Button(Class: btn-link text-primary p0 b0, Page: @1tokens_send, PageParams: "back_page=@19profile", Body: LangRes(@1tokens_send)).Popup(Header: $@1tokens_send$, Width: "50")
                                }
                            }
                        }
                        Div(Class: pt-sm){
                            Div(Class: col-md-3 ml-sm){
                                Div(Class: text-muted h4, Body: Transactions)
                            }
                            Div(Class: col){
                                Div(Class: text-bold h4){
                                    Button(Class: btn-link text-primary p0 b0, Page: @1profile_transactions, Body: LangRes(@1transactions_history))
                                }
                            }
                        }
                        If(#member_manager_info_type# == ""){
                            Div(Class: pt-sm){
                                Div(Class: col-md-3 ml-sm){
                                    Div(Class: text-muted h4, Body: Manager Roles)
                                }
                                Div(Class: col){
                                    Div(Class: text-bold h4){
                                        Button(Class: btn-link text-primary p0 b0, Page: manager_role_selection, Body: Role selection).Popup(35, Please select your roles)
                                    }
                                }
                            }
                        }
                        Div(Class: pt-sm){
                            Div(Class: col-md-3 ml-sm){
                                Div(Class: text-muted h4, Body: Roles)
                            }
                            Div(Class: col){
                                Div(Class: text-bold){
                                    DBFind(@1roles_participants).Where({ecosystem:#ecosystem_id#, "member->member_id":#v_key_id#, deleted:0}).Columns("id").Vars(check)
                                    If(#check_id#>0){
                                        DBFind(@1roles_participants,src_roles).Where({ecosystem:#ecosystem_id#, "member->member_id":#v_key_id#, deleted:0}).Columns("role->id,role->name").Order("id")
                                        ForList(src_roles){
                                            Button(Class: wallet-btn new-btn, Page: @1roles_view, PageParams: "v_role_id=#role.id#"){
                                                Div(Class: button-content){
                                                    #role.name#
                                                }
                                            }
                                        }
                                    }.Else{
                                        Button(Class: wallet-btn no-role){
                                            Div(Class: button-content){
                                                Span(Body: "You currently have no role!")
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }.Style(
            border-top: 5px solid transparent!important;
            border-top-color: #5d9cec!important;
        )
    }
}