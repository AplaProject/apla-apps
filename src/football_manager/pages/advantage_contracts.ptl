Form(){
    If(#contract_block# == general){
        If(#contract_block_type# == edit){
            DBFind("player_contracts",Source: src_contr).Columns("id,general_information->country,general_information->num_seasons,general_information->start_date,general_information->end_date,general_information->information").WhereId(#id_contract#).Vars(details)
        }
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: Country).(Class: text-danger, Body:*)
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: country,Value: #details_general_information_country#)
                    }.Else{
                        Input(Name: country)
                    }
                }
            }
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: Number of Seasons)
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: num_seasons,Placeholder: "[1-10]",Type: number,Value: #details_general_information_num_seasons#)
                    }.Else{
                        Input(Name: num_seasons,Placeholder: "[1-10]",Type: number)
                    }
                }
            }.Style(padding-top:10px;)
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: $@1date_start$).(Class: text-danger, Body:*)
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: start_date, Type: date,Value: #details_general_information_start_date#)
                    }.Else{
                        Input(Name: start_date, Type: date)
                    }
                }
            }.Style(padding-top:10px;)
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: $@1date_end$).(Class: text-danger, Body:*)
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: end_date, Type: date,Value: #details_general_information_end_date#)
                    }.Else{
                        Input(Name: end_date, Type: date)
                    }
                }
            }.Style(padding-top:10px;)
        }
        Div(list-group-item){
            Div(row mb-sm){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body:"Other information")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: contract_other_info,Type: textarea,Value: #details_general_information_information#)
                    }.Else{
                        Input(Name: contract_other_info,Type: textarea)
                    }
                }
            }.Style(padding-top:10px;)
        }
        Div(row mt){
            Div(col-md-12){
                If(#contract_block_type# == edit){
                    Button(Body: $@1back$, Class: btn btn-default,Page: player_contract_view,PageParams:"id_contract=#id_contract#")
                    Button(Body: $@1save$, Class: btn btn-primary pull-right,PageParams:"id_contract=#id_contract#",Page: player_contract_view, Contract: PlayerContractCreate,Params: "id_contract=#id_contract#,contract_block=#contract_block#")
                }.Else{
                    Button(Body: $@1back$, Class: btn btn-default,Page: player_contracts_list)
                    Button(Body: $@1save$, Class: btn btn-primary pull-right,Page: player_contracts_list, Contract: PlayerContractCreate,Params: "id_player=#id_player#,contract_block=#contract_block#")
                }
            }
        }
    }
    If(#contract_block# == salary){
        If(#contract_block_type# == edit){
            DBFind("player_contracts",Source: src_contr).Columns("id,salary->monthly_salary,salary->month_cbox,salary->increase_salary,salary->other_salary").WhereId(#id_contract#).Vars(details)
        }
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: Monthly Salary).(Class: text-danger, Body:*)
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        SetVar(mon_s_money, Money(#details_salary_monthly_salary#))
                        Input(Name: monthly_salary,Type: number,Value: #mon_s_money#)
                    }.Else{
                        Input(Name: monthly_salary,Type: number)
                    }
                }
            }
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: 13rd Month)
                    }
                }.Style(padding-top:4px;)
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: month_cbox, Type: checkbox,Value: #details_salary_month_cbox#)
                    }.Else{
                        Input(Name: month_cbox, Type: checkbox)
                    }
                }
            }.Style(padding-top:6px;)
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: Salary Increase)
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        SetVar(inc_s_money, Money(#details_salary_increase_salary#))
                        Input(Name: increase_salary,Type: number,Value: #inc_s_money#)
                    }.Else{
                        Input(Name: increase_salary,Type: number)
                    }
                }
            }.Style(padding-top:10px;)
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: Other Salary)
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: other_salary,Type: textarea,Value: #details_salary_other_salary#)
                    }.Else{
                        Input(Name: other_salary,Type: textarea)
                    }
                }
            }.Style(padding-top:10px;)
        }
        Div(row mt){
            Div(col-md-12){
                Button(Body: $@1back$, Class: btn btn-default,Page: player_contract_view,PageParams:"id_contract=#id_contract#")
                Button(Body: $@1save$, Class: btn btn-primary pull-right,PageParams:"id_contract=#id_contract#",Page: player_contract_view, Contract: PlayerContractCreate,Params: "id_contract=#id_contract#,contract_block=#contract_block#")
            }
        }
    }
    If(#contract_block# == bonus){
        If(#contract_block_type# == edit){
            DBFind("player_contracts",Source: src_contr).Columns("id,performance_bonus->bonus_win_match,performance_bonus->bonus_draw_match,performance_bonus->bonus_selection,performance_bonus->bonus_appearance,performance_bonus->bonus_starting,performance_bonus->bonus_action,performance_bonus->bonus_other").WhereId(#id_contract#).Vars(details)
        }
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Result Bonus – Match – Win")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        SetVar(inc1_s_money, Money(#details_performance_bonus_bonus_win_match#))
                        Input(Name: bonus_win_match,Type: number,Value: #inc1_s_money#)
                    }.Else{
                        Input(Name: bonus_win_match,Type: number)
                    }
                }
            }
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Result Bonus – Match – Draw")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        SetVar(inc2_s_money, Money(#details_performance_bonus_bonus_draw_match#))
                        Input(Name: bonus_draw_match,Type: number,Value: #inc2_s_money#)
                    }.Else{
                        Input(Name: bonus_draw_match,Type: number)
                    }
                }
            }.Style(padding-top:10px;)
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Selection Bonus")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        SetVar(inc3_s_money, Money(#details_performance_bonus_bonus_selection#))
                        Input(Name: bonus_selection,Type: number,Value: #inc3_s_money#)
                    }.Else{
                        Input(Name: bonus_selection,Type: number)
                    }
                }
            }.Style(padding-top:10px;)
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Appearance Bonus")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        SetVar(inc4_s_money, Money(#details_performance_bonus_bonus_appearance#))
                        Input(Name: bonus_appearance,Type: number,Value: #inc4_s_money#)
                    }.Else{
                        Input(Name: bonus_appearance,Type: number)
                    }
                }
            }.Style(padding-top:10px;)
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Starting Bonus")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        SetVar(inc5_s_money, Money(#details_performance_bonus_bonus_starting#))
                        Input(Name: bonus_starting,Type: number,Value: #inc5_s_money#)
                    }.Else{
                        Input(Name: bonus_starting,Type: number)
                    }
                }
            }.Style(padding-top:10px;)
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Action Bonus")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        SetVar(inc6_s_money, Money(#details_performance_bonus_bonus_action#))
                        Input(Name: bonus_action,Type: number,Value: #inc6_s_money#)
                    }.Else{
                        Input(Name: bonus_action,Type: number)
                    }
                }
            }.Style(padding-top:10px;)
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Other Performance Bonus")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: bonus_other,Type: textarea,Value: #details_performance_bonus_bonus_other#)
                    }.Else{
                        Input(Name: bonus_other,Type: textarea)
                    }
                }
            }.Style(padding-top:10px;)
        }
        Div(row mt){
            Div(col-md-12){
                Button(Body: $@1back$, Class: btn btn-default,Page: player_contract_view,PageParams:"id_contract=#id_contract#")
                Button(Body: $@1save$, Class: btn btn-primary pull-right,PageParams:"id_contract=#id_contract#",Page: player_contract_view, Contract: PlayerContractCreate,Params: "id_contract=#id_contract#,contract_block=#contract_block#")
            }
        }
    }
    If(#contract_block# == other_advatages){
        If(#contract_block_type# == edit){
            DBFind("player_contracts",Source: src_contr).Columns("id,other_advantages->check_filled,other_advantages->housing_rent,other_advantages->housing_description,other_advantages->car_leasing,other_advantages->car_description,other_advantages->gas_card_cbox,other_advantages->flight_ticket,other_advantages->other_advantage").WhereId(#id_contract#).Vars(details)
        }
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Housing - Rent")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        SetVar(adv_s_money, Money(#details_other_advantages_housing_rent#))
                        Input(Name: housing_rent,Type: number,Value: #adv_s_money#)
                    }.Else{
                        Input(Name: housing_rent,Type: number)
                    }
                }
            }
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Housing - Description")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: housing_description,Type: textarea,Value: #details_other_advantages_housing_description#)
                    }.Else{
                        Input(Name: housing_description,Type: textarea)
                    }
                }
            }.Style(padding-top:10px;)
        }
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Car - Leasing")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        SetVar(adv2_s_money, Money(#details_other_advantages_car_leasing#))
                        Input(Name: car_leasing,Type: number,Value: #adv2_s_money#)
                    }.Else{
                        Input(Name: car_leasing,Type: number)
                    }
                }
            }
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Car - Description")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: car_description,Type: textarea,Value: #details_other_advantages_car_description#)
                    }.Else{
                        Input(Name: car_description,Type: textarea)
                    }
                }
            }.Style(padding-top:10px;)
        }
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: Gas Card)
                    }
                }.Style(padding-top:4px;)
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: gas_card_cbox, Type: checkbox,Value: #details_other_advantages_gas_card_cbox#)
                    }.Else{
                        Input(Name: gas_card_cbox, Type: checkbox)
                    }
                }
            }.Style(padding-top:6px;)
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: Flight Tickets)
                    }
                }.Style(padding-top:4px;)
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: flight_ticket, Type: number,Value: #details_other_advantages_flight_ticket#)
                    }.Else{
                        Input(Name: flight_ticket, Type: number)
                    }
                }
            }.Style(padding-top:10px;)
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: Other Advantage)
                    }
                }.Style(padding-top:4px;)
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: other_advantage, Type: textarea,Value: #details_other_advantages_other_advantage#)
                    }.Else{
                        Input(Name: other_advantage, Type: textarea)
                    }
                }
            }.Style(padding-top:10px;)
        }
        Div(row mt){
            Div(col-md-12){
                Button(Body: $@1back$, Class: btn btn-default,Page: player_contract_view,PageParams:"id_contract=#id_contract#")
                Button(Body: $@1save$, Class: btn btn-primary pull-right,PageParams:"id_contract=#id_contract#",Page: player_contract_view, Contract: PlayerContractCreate,Params: "id_contract=#id_contract#,contract_block=#contract_block#")
            }
        }
    }
    If(#contract_block# == insurance){
        If(#contract_block_type# == edit){
            DBFind("player_contracts",Source: src_contr).Columns("id,insurance->group_insurance,insurance->other_insurance").WhereId(#id_contract#).Vars(details)
        }
        Div(list-group-item){
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Group Insurance")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: group_insurance,Type: textarea,Value: #details_insurance_group_insurance#)
                    }.Else{
                        Input(Name: group_insurance,Type: textarea)
                    }
                }
            }
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: "Other Insurance")
                    }
                }
                Div(col-md-9 text-left){
                    If(#contract_block_type# == edit){
                        Input(Name: other_insurance,Type: textarea,Value: #details_insurance_other_insurance#)
                    }.Else{
                        Input(Name: other_insurance,Type: textarea)
                    }
                }
            }.Style(padding-top:15px;)
        }
        Div(row mt){
            Div(col-md-12){
                Button(Body: $@1back$, Class: btn btn-default,Page: player_contract_view,PageParams:"id_contract=#id_contract#")
                Button(Body: $@1save$, Class: btn btn-primary pull-right,PageParams:"id_contract=#id_contract#",Page: player_contract_view, Contract: PlayerContractCreate,Params: "id_contract=#id_contract#,contract_block=#contract_block#")
            }
        }
    }
}