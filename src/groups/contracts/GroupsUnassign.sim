contract GroupsUnassign {
    data {
        row_id int
    }

    conditions {
        var assigned group map
        assigned = DBFind("@1groups_participants").Where({ecosystem:$ecosystem_id, id:$row_id, deleted:0}).Columns("id,ecosystem,deleted,groups_info->id,member->member_id").Row()
        if !assigned {
            warning ("group_participant_not_found")
        }
        var buffer_id int
        buffer_id = Int(assigned["groups_info.id"])
        group = DBFind("@1groups").Where({ecosystem:$ecosystem_id, id:buffer_id}).Row()
        $groupId = Int(group["id"])
        if $groupId == 0 {
            warning ("Group not found")
        }
        if(Int(group["group_type"]) == 1){
            if Int(assigned["member.member_id"]) != $key_id {
                @1GroupsAccessCheck("gr_id", $groupId)
            }
        } else{
            @1GroupsAccessCheck("gr_id", $groupId)
        }
        
    }

    action {
        // delete the member
        var m map
        m["deleted"] = 1
        m["date_deleted"] = BlockTime()
        DBUpdate("@1groups_participants", $row_id, m)
    }
}