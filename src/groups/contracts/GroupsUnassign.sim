contract GroupsUnassign {
    data {
        row_id int
    }

    conditions {
        var assigned map
        assigned = DBFind("@1groups_participants").Where({"ecosystem": $ecosystem_id, "id": $row_id, "deleted": 0}).Columns("id,ecosystem,deleted,groups_info->id,member->member_id").Row()
        if !assigned {
            warning LangRes("@1group_participant_not_found", "en")
        }

        var buffer_id int group map
        buffer_id = Int(assigned["groups_info.id"])
        group = DBFind("@1groups").Where({"ecosystem": $ecosystem_id, "id": buffer_id}).One("id")
        $groupId = Int(group["id"])
        $groupType = Int(group["group_type"])

        if $groupId == 0 {
            warning LangRes("@1group_not_found", "en")
        }
        if $groupType == 1 {
            if Int(assigned["member.member_id"]) != $key_id {
                @1GroupsAccessCheck("gr_id", $groupId)
            }
        } else {
            @1GroupsAccessCheck("gr_id", $groupId)
        }
    }

    action {
        var m map
        m["deleted"] = 1
        m["date_deleted"] = $block_time
        DBUpdate("@1groups_participants", $row_id, m)
    }
}