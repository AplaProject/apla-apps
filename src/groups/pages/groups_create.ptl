DBFind(@1applications).Columns("id,name").Where({ecosystem:1, "name": "Groups"}).Vars(application)
DBFind(@1roles, src_roles).Columns("id,role_name").Where({ecosystem:#ecosystem_id#, "deleted":0}).Order(id)

If(#gr_id# > 0){
    DBFind(@1groups).Columns("id,group_name,group_type,group_info,group_access").WhereId(#gr_id#).Vars(gr_e)
}.Else{
    DBFind(@1buffer_data).Columns(value).Where({ecosystem:#ecosystem_id#, "key": "group_access", "member_id": #key_id#}).Columns("id,key,member_id,ecosystem,value->groups_access,value->group_information,value->group_type,value->group_name").Vars(buffer)
}
Form(){
    Div(row){
        Div(col-md-2 mt-sm text-right){
            Label(){
                LangRes(@1name)   
            }
        }
        Div(col-md-10 mt-sm text-left){ 
            If(#gr_e_id# > 0){
                Input(Name: e_group_name,Value: #gr_e_group_name#,Disabled: true)
            }.Else{
                Input(Name: group_name,Value: #buffer_value_group_name#).Validate(minLength:3)
                InputErr(Name: group_name, minLength: "Group name too short")  
            }
        }
    }
    Div(row mt-sm){
        Div(col-md-2 mt-sm text-right){
            Label(){
                $@1type$        
            }
        }
        Div(col-md-10 text-left mt-sm){ 
            If(#gr_e_id# > 0){
                Span(Body: AppParam(Ecosystem:1, App: #application_id#, Name: type_groups,Index:#gr_e_group_type#))
            }.Else{
                AppParam(Ecosystem:1, App: #application_id#, Name: type_groups, Source: type_group)
                Select(Name: group_type,Source: type_group,NameColumn: name,ValueColumn: id,Value: #buffer_value_group_type#) 
            } 
        }
    }
    Div(row mt-sm){
        Div(col-md-2 mt-sm text-right){
            Label(){
                $@1group_info$         
            }
        }
        Div(col-md-10 mt-sm text-left){ 
            If(#gr_e_id# > 0){
                Input(Name: group_information,Type: textarea,Value: #gr_e_group_info#)  
            }.Else{
                Input(Name: group_information,Type: textarea,Value: #buffer_value_group_information#)  
            }
        }
    }
    Div(row mt-sm){
        Div(col-md-2 mt-sm text-right){
            Label(){
                $@1group_access$
            }
        }
        Div(col-md-10 mt-sm text-left){
            Div(input-group mb-sm){
                Select(Name: roles_managers, Source: src_roles, NameColumn: role_name, ValueColumn: id)
                Div(input-group-btn){
                    Button(Class: btn btn-primary fa fa-plus, Page: @1groups_create, Contract: @1GroupAccessManager, Params:"ManagerRid=Val(roles_managers),Action=add,gr_id=#gr_id#",PageParams: "gr_id=#gr_id#").Popup(50, $@new_group$)
                }
            }
            If(And(#gr_e_id# > 0,#gr_e_group_access#!="NULL",#gr_e_group_access#!="",#gr_e_group_access#!="[]",GetVar(gr_e_group_access)!="")){
                DBFind(@1roles, src_roles_access).Columns("id,role_name").Where({ecosystem:#ecosystem_id#, "id": {"$in": #gr_e_group_access#}}).Order(role_name)
            }.Else{
                If(And(#buffer_value_groups_access#!="NULL",#buffer_value_groups_access#!="",#buffer_value_groups_access#!="[]",GetVar(buffer_value_groups_access)!="")){
                    DBFind(@1roles, src_roles_access).Columns("id,role_name").Where({ecosystem:#ecosystem_id#, "id": {"$in": #buffer_value_groups_access#}}).Order(role_name)
                }
            }
            ForList(src_roles_access){
                SetVar(btn_class,"btn-default")
                If(#id#==#role_id#){
                    SetVar(btn_class,"btn-info")
                }
                Button(Class: btn #btn_class# mr-sm mb-sm, Page: @1groups_create, Contract: @1GroupAccessManager, Params:"ManagerRid=#id#,Action=remove,gr_id=#gr_id#",PageParams: "gr_id=#gr_id#", Body: Span(Class: fa fa-remove) #role_name#).Popup(50, $@new_group$)
            }
        }
    }
    If(#gr_e_id# > 0){
        Button(Body: LangRes(@1edit), Class: btn btn-primary pull-right mt, Page: @1groups_list,Contract:GroupsCreate,Params:"gr_id=#gr_id#")
    }.Else{
        Button(Body: LangRes(@1create), Class: btn btn-primary pull-right mt, Page: @1groups_list,Contract:GroupsCreate)
    }
    Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: @1groups_list)
}