contract TsTransferReject {
    data {
        Comment string
        RoleParam string
        NotificId int
    }
    func getRoleId(name string) int{
        var rid int
        rid = Int(EcosysParam(name))
        if rid == 0{
            warning Sprintf(LangRes("@1role_not_set_application_parameter", "en"), name)
        }
        return rid
    }
    conditions{
        $WAITING_MANAGER = 1
        $WAITING_SELLER = 2
        $FINISHED = 3
        $REJECTED = 4

        if !($RoleParam == "role_sale_manager" || $RoleParam == "role_sale_seller"){
            warning "invalid role parameter"
        }
        var role noteSaleId int note map
        role = getRoleId($RoleParam)
        if !RoleAccess(role){
            warning "this action allowed only for role id #" + role
        }
        note = DBFind("@1notifications").Where({id:$NotificId}).Columns("page_params->sale_id,date_start_processing,notification->type").Row()
        if !note{
            warning "Notification not found"
        }
        $needProcessing = note["date_start_processing"] == ""
        noteSaleId = Int(note["page_params.sale_id"])
        $sale = DBFind("ts_sales").Where({id:noteSaleId}).Row()
        if !$sale {
            warning "Sale not found"
        }
        $saleId = Int($sale["id"])
    }

    action {
        if $needProcessing {
            @1NotificationsProcess("notific_id", $NotificId)
        }
        @1NotificationsClose("notific_id", $NotificId)
        var sale params map title body string prevKeyId int
        title = Sprintf("Sale %v rejected", $saleId)
        body = $Comment
        params["sale_id"] = $saleId
        sale["status"] = $REJECTED
        if $RoleParam == "role_sale_manager"{
            sale["key_id_sale_apl_manager"] = $key_id
            sale["manager_reject_comment"] = $Comment
            sale["manager_rejected_at"] = $time
            prevKeyId = Int($sale["key_id_sale_apl_admin"])

        }elif $RoleParam == "role_sale_seller"{
            sale["key_id_seller"] = $key_id
            sale["seller_reject_comment"] = $Comment
            sale["seller_rejected_at"] = $time
            prevKeyId = Int($sale["key_id_sale_apl_manager"])
        }

        DBUpdate("ts_sales", $saleId, sale)
        @1NotificationsSend("member_id,sender,text_header,text_body,page_name,params_map,closure_type", prevKeyId, 1, title, body, "ts_notification", params, 1)

    }
}