contract CFStartupStatusUpdate {
    data {}

    func notifyStartupAdmin(){
        // оповещение админу в экосистему стартапа для финиша кампании
        var sender startupAdmin eco int header page eco popup string params map
        sender = 1
        header = Sprintf("Startup (%v, %v) notification", $startup["id"], $startup["name"])
        body = "The campaign has expired. Need finishing campaign"
        page = "cf_notification_finish"
        eco = $startup["ecosystem"]
        popup = "true"

        eco = Int($startup["ecosystem"])
        startupAdmin = Int(DBFind("@1parameters").Where({name:"role_admin", ecosystem:eco}).One("value"))
        if startupAdmin == 0{
            warning "Startup admin role not assigned"
        }
        @1NotificationsSend("rid,sender,text_header,text_body,page_name,params_map,eco_id,popup", startupAdmin, sender, header, body, page, params, eco, popup)
    }
    func changeStatus(from, to map) {
        var items array i lenItems int it map
        from["deleted_at"] = 0
        items = DBFind($table).Columns("id,started_at,finished_at,name,current_investment,estimated_amount,wallet").Where(from).Limit(10000)

        lenItems = Len(items)
        while i < lenItems{
            it = items[i]
            DBUpdate($table, Int(it["id"]), to)
            if to["status"] == $FINISHED {
                notifyStartupAdmin()
            }
            i = i + 1
        }
    }
    conditions{
        var appId admin int feeWallet string
        appId = Int(DBFind("@1applications").Where({ecosystem:1, name:"Crowdfunding"}).One("id"))
        admin = Int(AppParam(appId, "cf_catalog_admin", 1))
        if !RoleAccess(admin){
            warning "This action allowed only for startup catalog admin role"
        }
        $CREATED = 1
        $PUBLISHED = 2
        $STARTED = 3
        $FINISHED = 4
        $FAILED = 5
        $STOPPED = 6
        $REJECTED = 7
        $table = "@1cf_startups"

        $fee = AppParam(appId, "cf_fee", 1)
        feeWallet = AppParam(appId, "cf_fee_wallet", 1)
        $feeKey = AddressToId(feeWallet)
        if $feeKey == 0{
            $feeKey = Int(DBFind("@parameters").Where({ecosystem:1, name:"founder_account"}).One("value"))
        }
    }

    action {
        changeStatus({status:$PUBLISHED, started_at:{"$lte":$block_time}}, {status:$STARTED})
        changeStatus({status:$STARTED, finished_at:{"$lte":$block_time}}, {status:$FINISHED})
    }
}