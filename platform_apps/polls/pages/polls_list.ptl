SetVar(this_page, @1polls_list).(this_table, @1votings)
Include(@1pager_header)

SetTitle($@1polls$)
If(EcosysParam(Ecosystem:1, Name: role_admin) == #role_id#){
    AddToolButton(Title: $@1polls_templates$, Page: @1polls_templates, Icon: fa icon-pin)
}

If(GetVar(page_par)){
    If(#page_par#==3){
        SetVar(type_filter, {"status":3})
    }.ElseIf(#page_par#==4){
        SetVar(type_filter, {"creator->member_id":#key_id#})
    }.ElseIf(#page_par#==5){
        SetVar(type_filter, {"voting->type_participants":4})
    }
}.Else{
    SetVar(page_par, "0")
}

If(GetVar(search)!=""){
    SetVar(where, {$and: [{"ecosystem": #ecosystem_id#}, {"deleted": 0}, {"voting->type": 3}, GetVar(type_filter), {"voting->name": {"$like":#search#}}]})
}.Else{
    SetVar(where, {$and: [{"ecosystem": #ecosystem_id#}, {"deleted": 0}, {"voting->type": 3}, GetVar(type_filter)]}).(search,)
}

Div(btn-group ml-lg mr-lg){
    If(EcosysParam(Ecosystem:#ecosystem_id#, Name: role_admin) == #role_id#){
        Button(Body: Em(Class: fa fa-refresh) $@1update_votings_statuses$, Class: btn bg-gray ml-sm, Page: #this_page#, Contract: @1VotingStatusUpdate)
    }
    Div(text-right){
        Button(Page: @1polls_filters, Class: btn bg-gray-lighter mr-sm, PageParams: "sort=#sort#,page_par=#page_par#,search=#search#,current_page=#current_page#", Body: Em(Class: fa fa-filter) $@1filter$).Popup(Header: $@1filter$, Width: "30")
        If(Or(#page_par#>0,#sort#>0)){
            Button(Page: #this_page#, PageParams: "sort=0,page_par=0,search=#search#", Class: btn bg-gray-lighter mr-sm, Body: Em(Class: fa fa-close))
        }
    }
}

Div(list-group-item ml-lg mr-lg pt-lg){
    SetVar(search_name, LangRes(@1polls))
    Include(@1search)
}

SetVar(WAITING,1).(VALID,2).(STARTED,3).(FINISHED,4).(INVALID,5)
DBFind(@1applications).Where({ecosystem:1, name:"Basic"}).Columns("name,id").Vars(application)

DBFind(#this_table#, src).Where(#where#).Order({"id": -1}).Limit(#pager_limit#).Offset(#pager_offset#).Columns("id,voting->name,voting->type,voting->type_decision,voting->type_participants,flags->success,flags->decision,flags->full_data,progress->percent_success,progress->number_participants,creator->member_id,creator->member_name,date_started,date_ended,deleted,status,voting->count_type_voters,voting->volume,progress->number_voters").Count(count_votings).Custom(_id){
    Span(Class: h5, Body: #id#)
}.Custom(_name){
    LinkPage(Page: @1polls_view, PageParams: "vID=#id#"){
        Span(Class: h5 text-bold m0, Body: #voting.name#)
    }
}.Custom(_participants){
    SetVar(participants, AppParam(Ecosystem:1, App:#application_id#, Name: type_voting_participants, Index: #voting.type_participants#))
    Div(h6 m0){
        If(Or(#status#==#STARTED#,#status#==#FINISHED#,#voting.type#==2)){
            #participants#
        }.Else{
            Button(Page: @1voting_invite, PageParams: "back_page=#this_page#", PageParams: "vID=#id#,back_page=#this_page#", Class: btn btn-link p0 text-bold, Body: #participants#).Popup(45, $@1participants_add$)
        }
    }
}.Custom(_date){
    SetVar(started_class, text-bold h5 m0).(finished_class,text-bold h5 m0)
    If(Or(#status#==#STARTED#,#status#==#FINISHED#)){
        SetVar(started_class, text-muted h5 m0)
    }
    If(#status#==#FINISHED#){
        SetVar(finished_class, text-muted h5 m0)
    }
    Div(Class: text-left){
        P(Class: #started_class#, Body: DateTime(DateTime: #date_started#, Format: "DD.MM.YYYY HH:MI"))
        P(Class: #finished_class#, Body: DateTime(DateTime: #date_ended#, Format: "DD.MM.YYYY HH:MI"))
    }
}.Custom(_status){
    SetVar(status_class, AppParam(Ecosystem:1, App:#application_id#, Name:voting_statuses_classes, Index:#status#))
    Div(#status_class#){
        AppParam(Ecosystem:1, App:#application_id#, Name:voting_statuses, Index:#status#)
    }
}.Custom(_result){
    If(#flags.decision#==0){
        Span(Body: $@1not_voted$, Class: text-info)
    }.ElseIf(#flags.decision#==-1){
        Span(Body: $@1no$, Class: text-danger)
    }.ElseIf(#flags.decision#==1){
        Span(Body: $@1yes$, Class: text-success)
    }
}.Custom(_actions){
    If(And(#creator.member_id#==#key_id#,#status#==#INVALID#)){
        Button(Class: fa fa-trash btn btn-default, Contract: @1VotingDelete, Params: "votingID=#id#", Page: #this_page#).Alert(Text: "$@1want_delete_voting$", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)
    }
}.Count(count)

Div(fullscreen){
    Div(table-responsive ml-lg mr-lg){
        Div(list-group-item){
            If(#count# > 0){
                Table(src, "Polls=_name,$@1result$=_result,$@1type$=_type,$@1subject_voting$=_subject,$@1participants$=_participants,$@1date_start$ / $@1date_end$=_date,$@1creator$=_creator,$@1progress$=_progress,$@1decision$=_decision,$@1status$=_status,=_actions")
            }.Else{
                Div(Class: text-center h4 text-muted, Body: "$@1polls$ $@1not_founded$")
            }
        }.Style(
            margin-top:-15px;
            tbody > tr:nth-of-type(odd) {
                background-color: #f8f9fc;
            }
        )
    }
}           
Div(mt-sm ml-lg mr-sm mb-sm){
    Include(@1pager)
}