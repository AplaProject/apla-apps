{
    "name": "Crowdfunding",
    "conditions": "ContractConditions(\"@1DeveloperCondition\")",
    "data": [
        {
            "Name": "default_menu",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "MenuItem(Title:$@1cf_startups$, Page:@1cf_startups, Icon:\"icon-credit-card\")\nMenuItem(Title:$@1cf_investments$, Page:@1cf_investments, Icon:\"icon-credit-card\")",
            "Type": "menu"
        },
        {
            "Name": "cf_investments",
            "Columns": "[\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFInvestment\\\")\",\n        \"name\": \"startup_id\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFInvestment\\\")\",\n        \"name\": \"investment_wallet\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFInvestment\\\")\",\n        \"name\": \"amount\",\n        \"type\": \"money\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFInvestment\\\")\",\n        \"name\": \"created_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFInvestment\\\")\",\n        \"name\": \"is_refund\",\n        \"type\": \"number\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}",
            "Type": "tables"
        },
        {
            "Name": "cf_startups",
            "Columns": "[\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"ecosystem\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"name\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"description\",\n        \"type\": \"text\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"wallet\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"escrow_wallet\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"escrow_name\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"web_address\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"registered_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"published_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"started_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"finished_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"estimated_amount\",\n        \"type\": \"money\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"minimal_investment\",\n        \"type\": \"money\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"current_investment\",\n        \"type\": \"money\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"token_info\",\n        \"type\": \"json\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"is_failed\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"deleted_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"@1CFStartup\\\")\",\n        \"name\": \"is_stopped\",\n        \"type\": \"number\"\n    }\n]",
            "Permissions": "{\"insert\":\"true\",\"update\":\"true\",\"new_column\":\"true\"}",
            "Type": "tables"
        },
        {
            "Name": "cf_company",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetVar(this_page, @1r_ratings).(this_table, @1keys)\nInclude(@1pager_header)\n\nSetTitle($@1ecosystem_members$)\nSpan(Class: text-muted h5 m0 mb ml-lg){\n    $@1ecosystem_members_list_desc$\n}\n\nSetVar(isManager,0)\nSetVar(admin_role_id, EcosysParam(Name:role_admin))\nIf(#role_id#>0){\n    If(#admin_role_id#==#role_id#){\n        SetVar(isManager,1)\n    }\n}\nIf(#isManager#==1){\n    AddToolButton(Title:$@1r_rating_group$, Page: @1r_rating_group, Icon: icon-calendar).Popup(Header: $@1r_rating_group$, Width: \"50\")\n}\n\nIf(GetVar(search)!=\"\"){\n    SetVar(where, {ecosystem:#ecosystem_id#, id:{\"$neq\":#guest_key#}, deleted:0, id:AddressToId(#search#)})\n}.Else{\n    SetVar(where, {ecosystem:#ecosystem_id#, id:{\"$neq\":#guest_key#}, deleted:0}).(search,)\n}\n\nDiv(list-group-item ml-lg mr-lg pt-lg){\n    SetVar(search_name, $@1wallet$)\n    Include(@1search)\n}\n\nDBFind(#this_table#, src).Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Count(count).Custom(_id){\n    SetVar(Name: style_text, Value: \"text-normal\")\n    SetVar(Name: style_link, Value: \"text-primary\")\n    Span(Class: h6 text-muted, Body: #id#)\n    SetVar(m_id, 0)\n    DBFind(@1members).Where({ecosystem:#ecosystem_id#, id:#id#}).Vars(m)\n    If(Or(#m_id#>0,#m_id#<0)){\n        SetVar(image_id, #m_image_id#)\n        SetVar(member_name, #m_member_name#)\n    }.Else{\n        SetVar(image_id, 0)\n        SetVar(member_name, Address(#id#))\n    }\n}.Custom(_member_id){\n    Button(Class: btn-xs btn-link, Page: @1r_accruals, PageParams: \"Id=#id#\"){\n        Span(Class: h5, Body: Address(#id#))\n    }\n}.Custom(_rating){\n    SetVar(rating_amount, 0).(member, Address(#id#))\n    DBFind(@1r_ratings, r).Where({ecosystem:#ecosystem_id#, member:#member#}).Vars(rating)\n    Span(#rating_amount#)\n}.Custom(_username){\n    LinkPage(Class: #style_link# h5 text-bold, Page: @1profile_view, PageParams: \"v_key_id=#id#\"){\n        If(#image_id#>0){\n            Image(Src: Binary().ById(#image_id#), Class: img-circle).Style(height: 30px;width: 30px; border: 1px solid #5A5D63; margin-right: 10px;)\n            Span(#member_name#)\n        }.Else{\n            Div(){\n                Span(Em(Class: fa icon-user fa-2x mr)).(#member_name#)\n            }.Style(display:flex; align-items:center;)\n        }\n    }\n}.Custom(_actions){\n    If(#isManager#==1){\n        Button(Page:@1r_rating_member, PageParams: \"MemberId=#id#\", Class: btn btn-default fa fa-pencil pull-right).Popup(Header:$@1r_change_rating$, Width: 50)\n    }\n}\n\nDiv(fullscreen){\n    Div(table-responsive ml-lg mr-lg){\n        Div(list-group-item){\n            If(#count# > 0){\n                Table(src, \"$@1name$=_username,$@1r_accruals$=_member_id,$@1r_rating$=_rating,=_actions\")\n            }.Else{\n                Div(text-center h4 text-muted){\n                    $@1members$ $@1not_founded$\n                }\n            }\n        }.Style(\n            tbody > tr:nth-of-type(odd) {\n                background-color: #f8f9fc;\n            }\n        )\n    }\n}\nDiv(mt-sm ml-lg mr-sm mb-sm){\n    Include(@1pager)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "cf_investments",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetVar(this_page, @1r_accruals).(this_table, @1r_accruals)\nInclude(@1pager_header)\n\nIf(GetVar(Id)!=\"\"){\n    SetVar(member, Address(#Id#))\n}.Else{\n    SetVar(member, Address(#key_id#))\n}\n\nSetVar(where, {member:#member#, ecosystem:#ecosystem_id#})\n\nSetTitle($@1r_accruals$ #member#)\nSpan(Class: h5 m0 mb ml-lg){\n    LinkPage(Class: ml-sm, Body: $@1r_rating$, Page: @1r_ratings)\n    Span(/,text-muted mh)\n    Span($@1r_accruals$, text-muted)\n}.Style(\n    display: inline-block;\n)\n\nDBFind(#this_table#, src).Where(#where#).Order({\"id\": -1}).Limit(#pager_limit#).Offset(#pager_offset#).Count(count).Custom(_type){\n    SetVar(t_name,)\n    DBFind(@1e_types).Where({ecosystem:#ecosystem_id#, id:#event_type#}).Columns(\"name\").Vars(t)\n    Span(#t_name#,ml-sm text-muted)\n}.Custom(_created){\n    DateTime(#created_at#, Format: YYYY-MM-DD HH:MI:SS)\n}.Custom(_manager){\n    SetVar(manager_key_id, AddressToId(#manager#))\n    LinkPage(Class: h5 text-primary, Page: @1profile_view, PageParams: \"v_key_id=#manager_key_id#\"){\n        Div(){\n            Span(Class: fa icon-user fa-2x mr).(#manager#)\n        }.Style(display:flex; align-items:center;)\n    }\n}\n\nDiv(fullscreen){\n    Div(table-responsive ml-lg mr-lg){\n        Div(list-group-item){\n            If(#count# > 0){\n                Table(src, \"$@1id$=id,$@1r_amount$=amount,$@1r_manager$=_manager,$@1r_created$=_created,$@1r_event_type$=_type,$@1r_event_id$=event_id\")\n            }.Else{\n                Div(text-center h4 text-muted){\n                    $@1r_accruals$ $@1not_founded$\n                }\n            }\n        }.Style(\n            tbody > tr:nth-of-type(odd) {\n                background-color: #f8f9fc;\n            }\n        )\n    }\n}\nDiv(mt-sm ml-lg mr-sm mb-sm){\n    Include(@1pager)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "cf_startup_filter",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetVar(this_page, @1cf_startup_filter)\nIf(GetVar(back_page)==\"\"){\n    SetVar(back_page, @1cf_startups)\n}\n\nDBFind(@1e_types, t).Where({ecosystem:#ecosystem_id#}).Columns(\"id,name\")\n\nSetVar(types_json,`\"0\":\"$@1e_select_type$\"`)\nForList(t){\n    SetVar(types_json,`#types_json#,\"#id#\":\"#name#\"`)\n}\nJsonToSource(types,{#types_json#})\nфильтры:\nпо датам\nпо минимальной сумме\nпо сумме сбора\nForm(){\n    Div(row mb-sm){\n        Div(col-md-3 mt-sm text-right text-bold){\n            Label($@1starting_date$)\n        }\n        Div(col-md-9 text-left){\n            Div(row){\n                Div(col-sm-6){\n                    Input(Name: StartingDate, Type:date)\n                }\n                Div(col-sm-6){\n                    Input(Name: StartingTime, Type:time, Value: \"00:00\")\n                }\n            }\n        }\n    }\n    Div(row mb-sm){\n        Div(col-md-3 mt-sm text-right text-bold){\n            Label($@1ending_date$)\n        }\n        Div(col-md-9 text-left){\n            Div(row){\n                Div(col-sm-6){\n                    Input(Name: EndingDate, Type:date)\n                }\n                Div(col-sm-6){\n                    Input(Name: EndingTime, Type:time, Value: \"00:00\")\n                }\n            }\n        }\n    }\n    Div(row mb-sm){\n        Div(col-md-3 mt-sm text-right text-bold){\n            Label($@1registration_date$)\n        }\n        Div(col-md-9 text-left){\n            Div(row){\n                Div(col-sm-6){\n                    Input(Name: RegDate, Type:date)\n                }\n                Div(col-sm-6){\n                    Input(Name: RegTime, Type:time, Value: \"00:00\")\n                }\n            }\n        }\n    }\n    Div(row mb-sm){\n        Div(col-md-3 mt-sm text-right text-bold){\n            Label($@1publication_date$)\n        }\n        Div(col-md-9 text-left){\n            Div(row){\n                Div(col-sm-6){\n                    Input(Name: PubDate, Type:date)\n                }\n                Div(col-sm-6){\n                    Input(Name: PubTime, Type:time, Value: \"00:00\")\n                }\n            }\n        }\n    }\n    Div(row mb-sm){\n        Div(col-md-3 mt-sm text-right text-bold){\n            Label($@1cf_minimal_investment$)\n        }\n        Div(col-md-9 text-left){\n            Input(Name: Min, Type:number)\n        }\n    }\n    Div(row mb-sm){\n        Div(col-md-3 mt-sm text-right text-bold){\n            Label(For:Est){\n                $@1cf_estimated_amount$\n            }\n        }\n        Div(col-md-9 text-left){\n            Input(Name: Est, Type:number)\n        }\n    }\n\n    Div(mt pull-right){\n        Button(Class: btn btn-default, Page: #back_page#, Body:$@1e_reset$)\n        Button(Class: btn btn-primary, Page: #back_page#, PageParams: \"Type=Val(Type)\", Body: $@1filter$)\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "cf_startup_form",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetVar(this_page, @1r_rating_group).(back_page,@1r_ratings)\nDBFind(@1applications).Where({ecosystem:1, name:\"Ratings\"}).Columns(\"name,id\").Vars(application)\nAppParam(App: #application_id#, Name:r_types, Source:types, Ecosystem:#ecosystem_id#)\n\nSetVar(isManager,0)\nSetVar(admin_role_id, EcosysParam(Name:role_admin))\nIf(#role_id#>0){\n    If(#admin_role_id#==#role_id#){\n        SetVar(isManager,1)\n    }\n}\n\nForm(){\n    Div(mb-sm text-muted){\n        $@1r_rating_group_description$\n    }\n    Div(mb-sm){\n        Input(Name: Ratings, Type: textarea)\n    }\n    Div(){\n        If(#isManager#==1){\n            Button(Body: $@1send$, Class: btn btn-primary pull-right mt, Page: #back_page#, Contract: @1RUpdateGroup)\n        }\n        Button(Body: $@1back$, Class: btn btn-default pull-right mt, Page: #back_page#)\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "cf_startups",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetVar(this_page, @1cf_startups).(this_table, @1cf_startups)\nInclude(@1pager_header)\nимя (переход на страницу кампании)\nдата начала\nдата окончания\nминимальная сумма\nтребуемая сумма\nсобранная сумма\nкнопка \"Инвестировать\"\nфильтры:\nпо датам\nпо минимальной сумме\nпо сумме сбора\n\nIf(GetVar(Id)!=\"\"){\n    SetVar(member, Address(#Id#))\n}.Else{\n    SetVar(member, Address(#key_id#))\n}\n\nSetVar(where, {member:#member#, ecosystem:#ecosystem_id#})\n\nSetTitle($@1r_accruals$ #member#)\nSpan(Class: h5 m0 mb ml-lg){\n    LinkPage(Class: ml-sm, Body: $@1r_rating$, Page: @1r_ratings)\n    Span(/,text-muted mh)\n    Span($@1r_accruals$, text-muted)\n}.Style(\n    display: inline-block;\n)\n\nDBFind(#this_table#, src).Where(#where#).Order({\"id\": -1}).Limit(#pager_limit#).Offset(#pager_offset#).Count(count).Custom(_created){\n    DateTime(#created_at#, Format: YYYY-MM-DD HH:MI:SS)\n}.Custom(_manager){\n    SetVar(manager_key_id, AddressToId(#manager#))\n    LinkPage(Class: h5 text-primary, Page: @1profile_view, PageParams: \"v_key_id=#manager_key_id#\"){\n        Div(){\n            Span(Class: fa icon-user fa-2x mr).(#manager#)\n        }.Style(display:flex; align-items:center;)\n    }\n}\n\nDiv(fullscreen){\n    Div(table-responsive ml-lg mr-lg){\n        Div(list-group-item){\n            If(#count# > 0){\n                Table(src, \"$@1id$=id,$@1r_amount$=amount,$@1r_manager$=_manager,$@1r_created$=_created,$@1r_event_type$=_type,$@1r_event_id$=event_id\")\n            }.Else{\n                Div(text-center h4 text-muted){\n                    $@1r_accruals$ $@1not_founded$\n                }\n            }\n        }.Style(\n            tbody > tr:nth-of-type(odd) {\n                background-color: #f8f9fc;\n            }\n        )\n    }\n}\nDiv(mt-sm ml-lg mr-sm mb-sm){\n    Include(@1pager)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "CFInvestment",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract CFInvestment {\n    data {}\n\n    conditions{\n        // TODO: this\n    }\n\n    action {\n        // TODO: this\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "CFStartup",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "contract CFStartup {\n    data {}\n\n    conditions{\n        // TODO: this\n    }\n\n    action {\n        // TODO: this\n    }\n}",
            "Type": "contracts"
        }
    ]
}