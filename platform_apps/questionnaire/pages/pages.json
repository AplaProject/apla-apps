{
    "blocks": [],
    "contracts": [],
    "data": [],
    "languages": [],
    "menus": [],
    "pages": [
        {
            "Name": "q_listing",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetVar(this_page, @1q_listing).(this_table, @1questionnaire)\nInclude(@1pager_header)\n\nSetTitle($@1q_poll$)\nIf(#role_id#==1){\n    SetVar(permission,1)\n}\nIf(#permission#==1){\n    AddToolButton(Title: $@1q_new_question$, Page: @1q_question_new, Icon: icon-plus).Popup(Header: $@1q_new_question$, Width: \"50\")\n}\n\nIf(GetVar(search)!=\"\"){\n    SetVar(where,\"{ecosystem:#ecosystem_id#,deleted:0,{$or:[{question:{$like:#search#}}]}}\")\n}.Else{\n    SetVar(where,\"{ecosystem:#ecosystem_id#,deleted:0}\").(search,)\n}\n\nDiv(list-group-item ml-lg mr-lg pt-lg){\n    SetVar(search_name, LangRes(@1q_question))\n    Include(@1search)\n}\nDBFind(#this_table#,src_q).Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Columns(\"id,question,description,answer,ecosystem,init,lastmodified,created_at,expired,status,params->hide,params->change,au_groups,au_roles\").Custom(custom_name){\n    If(Or(#status#==1,#permission#==1)){\n        LinkPage(Class: #style_link# h5 text-bold, Page: @1q_question, PageParams: \"q_id=#id#\"){\n            Div(Class: text-primary){\n                Span(#question#).Style({padding-left: 30px;})\n            }\n        }\n    }.Else{\n         Span(#question#).Style({padding-left: 30px;})\n    }\n}.Custom(custom_status){\n    If(#status#==0){\n        Span(Class: text-success, Body: LangRes(@1q_status_created))\n    }\n    If(#status#==1){\n        Span(Class: text-success, Body: LangRes(@1q_status_started))\n    }\n    If(#status#==2){\n        Span(Class: text-primary, Body: LangRes(@1q_status_ended))\n    }\n    If(#status#==3){\n        Span(Class: text-warning, Body: LangRes(@1q_status_admin))\n    }\n}.Custom(time){\n    DateTime(#created_at#,HH:MI DD.MM.YYYY) / DateTime(#expired#,HH:MI DD.MM.YYYY)\n}.Custom(initiator){\n    DBFind(@1members).Where({ecosystem:#ecosystem#, id:#init#}).Vars(m)\n    If(Or(#m_id#>0,#m_id#<0)){\n        SetVar(member_name, #m_member_name#)\n    }.Else{\n        SetVar(member_name, Address(#id#))\n    }\n    Span(#member_name#)\n}.Custom(hidden){\n    If(#params.hide#==true){\n        Span(Class: fa fa-check fa-1x)\n    }.Else{\n        Span(Class:fa fa-times fa-1x)\n    }\n}.Custom(change){\n    If(#params.change#==true){\n        Span(Class: fa fa-check fa-1x)\n    }.Else{\n        Span(Class:fa fa-times fa-1x)\n    }\n}.Custom(ops){\n    If(#permission#==1){\n        Span(Class: pull-right){\n            If(#status#!=1){\n                Button(Body: Em(Class: fa fa-hourglass-start), Class: btn-xs btn-link, Page: @1q_listing, Contract: @1QOperations, Params: \"operation=T,id=#id#\")\n            }\n            Button(Body: Em(Class: fa fa-trash), Class: btn-xs btn-link, Page: @1q_listing, Contract: @1QOperations, Params: \"operation=D,id=#id#\").Style({margin-left: 30px;})\n            LinkPage(Body: Em(Class: fa fa-edit), Class: btn-xs btn-link, Page: @1q_question_edit, PageParams: \"q_id=#id#\").Style({margin-left: 30px;})\n            DBFind(@1q_answers).Where({question_id:#id#}).Count(answers)\n            If(#answers#>0){\n                Button(Body: Em(Class: fa fa-book), Class: btn-xs btn-link, Page: @1q_question_log, PageParams: \"q_id=#id#\").Style({margin-left: 30px;}).Popup(Header: #question#, Width: \"50\")\n            }.Else{\n                Span(Class:btn-xs fa fa-book).Style({margin-left: 35px;})\n            }\n            Button(Body: Em(Class: fa fa-comment), Class: btn-xs btn-link, Page: @1q_question_graph, PageParams: \"q_id=#id#\").Style({margin-left: 30px;}).Popup(Header: $@1q_answer_graph$ / #question#, Width: \"50\")\n        }\n    }\n}.Count(q)\n\nDiv(fullscreen){\n    Div(table-responsive ml-lg mr-lg){\n        If(#q#>0){\n            Div(list-group-item){\n                If(#permission#==1){\n                    Table(Source: src_q, Columns: \"$@1q_question$=custom_name,$@1q_date_start$ / $@1q_date_expiration$=time,$@1q_initiator$=initiator,$@1q_audience$=audience,$@1q_status$=custom_status,$@1q_hide$=hidden,$@1q_change$=change,=ops\")\n                }.Else{\n                    Table(Source: src_q, Columns: \"$@1q_question$=custom_name,$@1q_date_start$ / $@1q_date_expiration$=time,$@1q_initiator$=initiator,$@1q_audience$=audience,$@1q_status$=custom_status,$@1q_hide$=hidden,$@1q_change$=change\")\n                }\n            }\n        }.Else{\n            Div(Class: text-center h4 text-muted, Body: $@1q_no_questions$)\n        }\n    }\n}\nDiv(mt-sm ml-lg mr-sm mb-sm){\n    Include(@1pager)\n}",
            "Menu": "default_menu"
        },
        {
            "Name": "q_question",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1questionnaire).Where({id:#q_id#}).Columns(\"id,question,description,answer,ecosystem,init,lastmodified,created_at,expired,status,params->hide,params->change\").Vars(question)\nDBFind(@1q_answers).Where({question_id:#question_id#}).Count(answers)\nDBFind(@1q_answers).Where({question_id:#question_id#, member:#key_id#}).Vars(your_answer).Count(a)\nDBFind(@1members).Where({ecosystem:#question_ecosystem#}).Count(total)\n\nIf(#role_id#==1){\n    SetVar(permission,1)\n}\n\nDiv(content-wrapper){  \n    SetTitle(#question_question#)\n    Div(breadcrumb){\n        LinkPage(Body: $@1q_poll$, Page: @1q_listing)\n        Span(/,mh)\n        Span(Class: text-muted, Body: #question_question#)\n    }\n\n    Div(row mt-sm){\n        Div(col-lg-10 col-lg-offset-1){\n            Form(panel panel-primary){\n                Div(list-group-item text-center){\n                    P(Class: h3 text-bold m0, Body: #question_description#)\n                }\n                Div(list-group-item text-center){\n                    Div(row){\n                        Div(col-md-6 text-right){\n                            Label(For: Date Ending){\n                                Span(Body: LangRes(@1q_date_expiration):)\n                            }\n                        }\n                        Div(col-md-6 text-left){\n                            DateTime(#question_expired#,HH:MI DD.MM.YYYY)\n                        }\n                    }\n                    If(And(#question_params_change#==true,#a#>0)){\n                        Div(row){\n                            Div(col-md-12 text-center){\n                                Span(Body: LangRes(@1q_hint_answer_revoting))\n                            }\n                        }\n                    }\n                }\n                If(#question_status#!=0){\n                    Div(list-group-item text-center t5){\n                        Div(row){\n                            If(#a#>0){\n                                Div(col-sm-6 text-right){\n                                    Input(Name: change, Type: checkbox, Value: true, Disabled: true)\n                                }\n                                Div(col-sm-6 text-left){\n                                    Span(Class: text-bold, Body: #your_answer_decision#)\n                                }.Style(margin-top: 10px;)\n                            }\n                            If(#question_status#==1){\n                                Div(col-md-12 text-center){\n                                    ArrayToSource(src, #question_answer#)\n                                    ForList(Source: src, Index:ind){\n                                        If(#a#==0){\n                                            Button(Body: #value#, Page: @1q_question, Class: btn btn-primary ml-sm, Contract: @1QAnswer, PageParams: \"q_id=#question_id#\", Params: \"question_id=#question_id#, answer_id=#ind#, decision=#value#, operation=CV\")\n                                        }\n                                        If(And(#question_params_change#==true,#a#>0)){\n                                            Button(Body: #value#, Page: @1q_question, Class: btn btn-primary ml-sm, Contract: @1QAnswer, PageParams: \"q_id=#question_id#\", Params: \"id=#your_answer_id#, question_id=#question_id#, answer_id=#ind#, decision=#value#, operation=UV\")\n                                        }\n                                    }     \n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu"
        },
        {
            "Name": "q_question_edit",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1questionnaire).Where({ecosystem:#ecosystem_id#, id:#q_id#}).Vars(question)\nArrayToSource(src, #question_answer#)\nData(src_status,\"status_id,status_name\"){\n    1,$@1q_status_started$\n    3,$@1q_status_admin$\n}\nIf(#question_status#==0){\n    SetVar(editable,1)\n}\nSetVar(time,DateTime(#question_lastmodified#,HH:MI DD.MM.YYYY))\n\nDiv(content-wrapper){\n    SetTitle(#question_question#)\n    Div(Class: breadcrumb){\n        LinkPage($@1q_poll$, @1q_listing)\n        Span(/).Style(margin-right: 10px; margin-left: 10px;)\n        Span(Class: text-muted, Body: #question_question#)\n    }\n    \n    Form(){\n        Div(form-group){\n            Label($@1title$)\n            If(#editable#==1){\n                Input(Name: question, Value: #question_question#)\n            }.Else{\n                Input(Name: question, Value: #question_question#, Disabled: true)\n            }\n        }\n        Div(form-group){\n            If(#editable#==1){\n            Label($@1q_description$)\n                Input(Type: textarea, Name: description, Value: #question_description#).Style(resize: vertical; min-height: 6em;)\n            }\n        }\n        DBFind(@1groups,src_gp).Where({ecosystem:#ecosystem_id#}).Count(g)\n        If(#g#>0){\n            Div(form-group){\n            Label($@1q_question_groups$)\n                If(#editable#==1){\n                    Div(input-group mb-sm){\n                        Select(Name: au_groups, Source: src_gp, NameColumn: group_name, ValueColumn: id)\n                        Div(input-group-btn){\n                            Button(Class: btn btn-primary fa fa-plus, Page: @1q_question_edit, PageParams:\"q_id=#question_id#\", Contract: @1QOperations, Params:\"id=#question_id#, operation=GA\")\n                        }\n                    }\n                } \n                ArrayToSource(au_g_src, #question_au_groups#)\n                ForList(Source: au_g_src, Index:ind){\n                DBFind(@1groups).Where({id:#value#}).Vars(gn)\n                    If(#editable#==1){\n                        If(#value#==0){\n                            Button(Body: $@1q_question_everyone$, Class: btn btn-success ml-sm)\n                        }.Else{\n                            Button(Body: Span(Class: fa fa-remove) #gn_group_name#, Page: @1q_question_edit, Class: btn btn-danger ml-sm, Contract: @1QOperations, PageParams: \"q_id=#question_id#\", Params: \"id=#question_id#, au_groups=#value#, operation=GD\")\n                        }\n                    }.Else{\n                        If(#value#==0){\n                            Button(Body: $@1q_question_everyone$, Class: btn btn-success ml-sm)\n                        }.Else{\n                            Button(Body: #gn_group_name#, Class: btn btn-primary ml-sm)\n                        }\n                    }\n                }\n            }\n        }\n        DBFind(@1roles,src_rid).Where({ecosystem:#ecosystem_id#}).Count(r)\n        If(#r#>0){\n            Div(form-group){\n            Label($@1q_question_roles$)\n                If(#editable#==1){\n                    Div(input-group mb-sm){\n                        Select(Name: au_roles, Source: src_rid, NameColumn: role_name, ValueColumn: id)\n                        Div(input-group-btn){\n                            Button(Class: btn btn-primary fa fa-plus, Page: @1q_question_edit, PageParams:\"q_id=#question_id#\", Contract: @1QOperations, Params:\"id=#question_id#, operation=RA\")\n                        }\n                    }\n                }\n                ArrayToSource(au_r_src, #question_au_roles#)\n                ForList(Source: au_r_src, Index:ind){\n                DBFind(@1roles).Where({id:#value#}).Vars(rn)\n                    If(#editable#==1){\n                        If(#value#==0){\n                            Button(Body: $@1q_question_everyone$, Class: btn btn-success ml-sm)\n                        }.Else{\n                            Button(Body: Span(Class: fa fa-remove) #rn_role_name#, Page: @1q_question_edit, Class: btn btn-danger ml-sm, Contract: @1QOperations, PageParams: \"q_id=#question_id#\", Params: \"id=#question_id#, au_roles=#value#, operation=RD\")\n                        }\n                    }.Else{\n                        If(#value#==0){\n                            Button(Body: $@1q_question_everyone$, Class: btn btn-success ml-sm)\n                        }.Else{\n                            Button(Body: #rn_role_name#, Class: btn btn-primary ml-sm)\n                        }\n                    }\n                }\n            }\n        }\n        Div(form-group){\n            Label($@1q_answer_change$)\n            If(#editable#==1){\n                Div(input-group mb-sm){\n                    Input(Name: answer)\n                    Div(input-group-btn){\n                        Button(Class: btn btn-primary fa fa-plus, Page: @1q_question_edit, PageParams:\"q_id=#question_id#\", Contract: @1QOperations, Params:\"id=#question_id#, operation=AA\")\n                    }\n                }\n            }\n            ForList(Source: src, Index:ind){\n                If(#editable#==1){\n                    Button(Body: Span(Class: fa fa-remove) #value#, Page: @1q_question_edit, Class: btn btn-primary ml-sm, Contract: @1QOperations, PageParams: \"q_id=#question_id#\", Params: \"id=#question_id#, answer=#value#, operation=AD\")\n                }.Else{\n                    Button(Body: #value#, Class: btn btn-primary ml-sm)\n                }\n            } \n        }\n        Div(form-group){\n            Label($@1status$)\n            Select(Name: status, Source: src_status, NameColumn: status_name, ValueColumn: status_id)\n        }\n        Div(form-group){\n            Label($@1q_lastmodified$)\n            Input(Name: lastmodified,  Value: #time#, Disabled: true)\n        }   \n        Div(form-group){\n            Button(Body: LangRes(@1back), Class: btn btn-default ml-sm, Page: @1q_listing)\n            Button(Class: btn btn-primary ml-sm, Body: $@1save$, Contract: @1QOperations, Page: @1q_listing, Params: \"id=#question_id#,operation=E\")\n        }\n    }\n}",
            "Menu": "default_menu"
        },
        {
            "Name": "q_question_graph",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Form(){\n    DBFind(@1questionnaire).Where({id:#q_id#}).Columns(\"id,question,description,answer,ecosystem,init,lastmodified,created_at,expired,status,params->hide,params->change\").Vars(question)\n    DBFind(@1members).Where({ecosystem:#question_ecosystem#}).Count(total)\n    DBFind(@1q_answers).Where({question_id:#question_id#}).Count(answers)\n    Div(list-group-item){\n        Div(row){\n            Div(col-md-12 text-center){\n                P(Class: h3, Body: #question_description#)\n            }\n        }\n    }\n    Div(list-group-item){\n        Div(row){\n            Div(col-md-3 text-right){\n                Label(For: Date Start){\n                    Span(Body: LangRes(@1q_date_start):)\n                }\n            }\n            Div(col-md-9 text-left){\n                DateTime(#question_created_at#,HH:MI DD.MM.YYYY)\n            }\n        }\n        Div(row){\n            Div(col-md-3 text-right){\n                Label(For: Last Modified){\n                    Span(Body: LangRes(@1q_lastmodified):)\n                }\n            }\n            Div(col-md-9 text-left){\n                DateTime(#question_lastmodified#,HH:MI DD.MM.YYYY)\n            }\n        }\n        Div(row){\n            Div(col-md-3 text-right){\n                Label(For: Date Ending){\n                    Span(Body: LangRes(@1q_date_expiration):)\n                }\n            }\n            Div(col-md-9 text-left){\n                DateTime(#question_expired#,HH:MI DD.MM.YYYY)\n            }\n        }\n        Div(row){\n            Div(col-md-3 text-right){\n                Label(For: Status){\n                    Span(Body: LangRes(@1status):)\n                }\n            }\n            Div(col-md-9 text-left){\n                If(#question_status#==0){\n                    Span(Class: text-success, Body: LangRes(@1q_status_created))\n                }\n                If(#question_status#==1){\n                    Span(Class: text-success, Body: LangRes(@1q_status_started))\n                }\n                If(#question_status#==2){\n                    Span(Class: text-primary, Body: LangRes(@1q_status_ended))\n                }\n                If(#question_status#==3){\n                    Span(Class: text-warning, Body: LangRes(@1q_status_admin))\n                }   \n            }\n        }\n        Div(row){\n            Div(col-md-3 text-right){\n                Label(For: Stats){\n                    Span(Body: LangRes(@1q_answer_data):)\n                }\n            }\n            Div(col-md-9 text-left){\n                #answers# / #total#\n            }\n        }\n    }\n    Div(list-group-item){\n        Div(row){\n            Div(col-md-12){\n                ArrayToSource(src, #question_answer#)\n                ForList(Source: src, Index:ind){\n                    DBFind(@1q_answers).Where({question_id:#question_id#, decision: #value#}).Count(a)\n                    Div(col-md-2 col-md-offset-1){\n                        Form(panel panel-primary text-center){\n                            Div(panel-heading, Body: #ind# : #value#)\n                            Div(panel-body){\n                                Span(Class: text-primary  ml h1, Body: #a#)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    Div(row mt){\n        Div(col-md-12){\n            Button(Body: LangRes(@1back), Class: btn btn-default, Page: @1q_listing)\n        }\n    }\n}",
            "Menu": "default_menu"
        },
        {
            "Name": "q_question_log",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Form(){\n    SetVar(this_page, @1q_question_log).(this_table, @1q_answers)\n    Include(@1pager_header)\n    DBFind(@1questionnaire).Where({id:#q_id#}).Columns(\"id\").Vars(q)\n\n    If(#a_id#>0){\n        SetVar(where,\"{question_id:#q_id#,answer_id:#a_id#}\")\n    }.Else{\n        SetVar(where,\"{question_id:#q_id#}\")\n    }\n\n    DBFind(@1q_answers,src_a).Where(#where#).Limit(#pager_limit#).Custom(ans){\n        #answer_id# : #decision#\n    }.Custom(c_m){\n        DBFind(@1members).Where({ecosystem:#ecosystem_id#, id:#member#}).Vars(m)\n        If(Or(#m_id#>0,#m_id#<0)){\n            SetVar(member_name, #m_member_name#)\n        }.Else{\n            SetVar(member_name, Address(#id#))\n        }\n        Span(#member_name#)\n    }.Custom(c_ecosystem){\n        DBFind(@1ecosystems).Where({id:#ecosystem#}).Vars(e)\n        If(Or(#e_id#>0,#e_id#<0)){\n            SetVar(eco_name, #e_name#)\n        }.Else{\n            SetVar(eco_name, #ecosystem#)\n        }\n        Span(#eco_name#)\n    }.Custom(time){\n        DateTime(#lastmodified#,HH:MI DD.MM.YYYY)\n    }.Count(a)\n    \n    Div(row form-group){\n        Div(col-sm-12){           \n            Table(Source: src_a, Columns:\"$@1q_answer_member$=c_m,$@1ecosystem_name$=c_ecosystem,$@1q_date_lastmodified$=time,$@1q_answer$=ans\")\n            Div(mt-sm ml-lg mr-sm mb-sm){\n                Include(@1pager)\n            }\n        }\n    } \n    Div(row mt){\n        Div(col-md-12){\n            Button(Body: LangRes(@1back), Class: btn btn-default, Page: @1q_listing)\n        }\n    }\n}",
            "Menu": "default_menu"
        },
        {
            "Name": "q_question_new",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "Form(){\n    Data(bool,\"value,name\"){\n        0,$@1ex_unavaliable$\n        1,$@1ex_avaliable$\n    }\n    Div(row form-group){\n        Div(col-sm-3 mt-sm text-right){\n            Label(For: Title){\n                Span(Body: LangRes(@1title)\n                Span(*,text-danger)\n            }\n        }\n        Div(col-sm-9){\n            Input(Name: question, Type: text)\n        }\n    }\n    Div(row form-group){\n        Div(col-sm-3 mt-sm text-right){\n            Label(For: Description){\n                Span(Body: LangRes(@1q_description)\n                Span(*,text-danger)\n            }\n        }\n        Div(col-sm-9){\n            Input(Type: textarea, Name: description, Value: \"\", Placeholder: $@1message_type_here$).Style(resize: vertical; min-height: 6em;)\n        }\n    }\n    Div(row form-group){\n        Div(col-sm-3 mt-sm text-right){\n            Label(For: Answer){\n                Span(Body: LangRes(@1q_answer)\n                Span(*,text-danger)\n            }\n        }\n        Div(col-sm-9){\n            Input(Type: text, Name: answer, Value: \"\", Placeholder: $@1q_hint_answer_placeholder$)\n            Div(Class: m0 h6 text-muted, Body: LangRes(@1q_hint_answer))\n        }\n    }\n    Div(row form-group){\n        Div(col-sm-3 mt-sm text-right){\n            Label(For: end_date){\n                LangRes(@1date_end)\n                Span(*,text-danger)\n            }\n        }\n        Div(col-md-9 text-left){\n            Div(row){\n                Div(col-md-6){\n                    Input(Name: end_date, Type: date)\n                }\n                Div(col-md-6){\n                    Input(Name: end_time, Type: time)\n                }\n            }\n        }\n    }\n    Div(row form-group){\n        Div(col-sm-3 mt-sm text-right){\n            Label(For: Notifications){\n                Span(Body: LangRes(@1q_notifications_send)\n            }      \n        }\n        Div(col-sm-9){\n            Input(Name: notifications, Type: checkbox, Value: false)\n        }\n    }\n    Div(row form-group){\n        Div(col-sm-3 mt-sm text-right){\n            Label(For: AnswerHide){\n                Span(Body: LangRes(@1q_hide)\n            }\n        }\n        Div(col-sm-9){\n            Input(Name: hide, Type: checkbox, Value: false)\n        }\n    }\n    Div(row form-group){\n        Div(col-sm-3 mt-sm text-right){\n            Label(For: AnswerChange){\n                Span(Body: LangRes(@1q_answer_change)\n            }\n            \n        }\n        Div(col-sm-9){\n            Input(Name: change, Type: checkbox, Value: false)\n        }\n    }\n    Div(row mt){\n        Div(col-md-12){\n            Button(Body: LangRes(@1back), Class: btn btn-default, Page: @1q_listing)\n            Button(Body: LangRes(@1create), Page: @1q_listing, Class: btn pull-right btn-primary, Contract: @1QOperations, Params: \"operation=C\")\n        }\n    }\n}",
            "Menu": "default_menu"
        }
    ],
    "parameters": [],
    "tables": []
}