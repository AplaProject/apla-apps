Form(){
    Data(bool,"value,name"){
        0,$@1ex_unavaliable$
        1,$@1ex_avaliable$
    }
    Div(row){
        Div(col-sm-3 mt-sm text-right){
            Label(For: Title){
                Span(Body: LangRes(@1title)
                Span(*,text-danger)
            }
        }
        Div(col-sm-9){
            Input(Name: question, Type: text)
        }
    }
    Div(row mt-sm){
        Div(col-sm-3 mt-sm text-right){
            Label(For: Description){
                Span(Body: LangRes(@1q_description)
                Span(*,text-danger)
            }
        }
        Div(col-sm-9){
            Input(Type: textarea, Name: description, Value: "", Placeholder: $@1message_type_here$).Style(resize: vertical; min-height: 6em;)
        }
    }
    Div(row mt-sm){
        Div(col-sm-3 mt-sm text-right){
            Label(For: Answer){
                Span(Body: LangRes(@1q_answer)
                Span(*,text-danger)
            }
        }
        Div(col-sm-9){
            Div(input-group mb-sm){
                Input(Name: answer)
                Div(input-group-btn){
                    Button(Class: btn bg-gray-lighter fa fa-plus mtl buttons, Page: @1q_question_new, Contract: @1QOperations, Params:"id=#question_id#, operation=AA").Popup(60, $@1message_type_here$)
                }
            }
            DBFind(@1buffer_data).Where({"key": "q_answers", "member_id": #key_id#}).Vars(ans)
            ArrayToSource(src, #ans_value#)
            ForList(Source: src, Index: ind){
                Button(Body: Span(Class: fa fa-remove) #value#, Class: btn-xs bg-gray-lighter mr-sm mb-sm, Page: @1q_question_new,Contract: @1QOperations, Params: "id=#question_id#, answer=#value#, operation=AD").Popup(60, $@1message_type_here$)
            }
        }
    }
    Div(row mt-lg){
        Div(col-sm-3 mt-sm text-right){
            Label(For: end_date){
                LangRes(@1date_end)
                Span(*,text-danger)
            }
        }
        Div(col-md-9 text-left){
            Div(row){
                Div(col-md-6){
                    Input(Name: end_date, Type: date)
                }
                Div(col-md-6){
                    Input(Name: end_time, Type: time, Value: "00:00")
                }
            }
        }
    }
    Div(row mt){
        Div(col-sm-3 mt-sm text-right){
            Label(For: Notifications){
                Span(Body: LangRes(@1notifications)
            }      
        }
        Div(col-sm-9 mt-sm){
            Input(Name: notifications, Type: checkbox, Value: false, Class: m0, Placeholder: $@1q_notifications_send$)
        }
    }
    Div(row mt-sm){
        Div(col-sm-3 mt-sm text-right){
            Label(For: AnswerHide){
                Span(Body: LangRes(@1result)
            }
        }
        Div(col-sm-9 mt-sm){
            Input(Name: hide, Type: checkbox, Value: false, Class: m0, Placeholder: $@1q_hide$)
        }
    }
    Div(row mt-sm){
        Div(col-sm-3 mt-sm text-right){
            Label(For: AnswerChange){
                Span(Body: LangRes(@1answer)
            }
            
        }
        Div(col-sm-9 mt-sm){
            Input(Name: change, Type: checkbox, Value: false, Class: m0, Placeholder: $@1q_answer_change$)
        }
    }
    Div(row mt){
        Div(col-md-12){
            Button(Body: LangRes(@1create), Page: @1q_listing, Class: btn btn-primary pull-right mt-sm, Contract: @1QOperations, Params: "operation=C")
            Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt-sm, Page: @1q_listing)
        }
    }
}.Style(
    .buttons{border: 1px solid #dde6e9;}
)