contract MSCreate {
    data {
        BufferId int
        Limit int
        LimitDate string
        LimitTime string
        AmountMax money
        AmountMaxDay money
        AmountMaxMonth money
        Sign int
        Duration int "optional"
        Quorum int "optional"
        Volume int "optional"
        PoaTemplateId int
    }

    func dateAddTime(d, t string) string {
        var dt string
        if Contains(d, "T00:00:00Z") {
            d = Replace(d, "T00:00:00Z", "")
        }
        if Size(t) == 5 {
            dt = Sprintf("%v %v:00", d, t)
        }
        return dt
    }

    conditions {
        $GROUP_SINGLE = 1
        $GROUP_VOTING = 2
        $ROLE_SINGLE = 3
        $ROLE_VOTING = 4
        $NO_LIMIT = 1
        $ONE_SIGN = 1

        $buf = DBFind("@1buffer_data").Where({id:$BufferId, ecosystem:$ecosystem_id}).Columns("value->type,value->units").Row()
        if !$buf {
            warning "not assigned group"
        }
        if Int($buf["value.type"]) == 0 {
            warning "not assigned group"
        }
        $units = JSONDecode($buf["value.units"])

        if $Limit != $NO_LIMIT{
            $limit = UnixDateTime(dateAddTime($LimitDate, $LimitTime))
            if $limit == 0 {
                warning "Invalid Date or Time"
            }
        }

        if $Sign != $ONE_SIGN{
            if $Duration == 0 || $Quorum == 0|| $Volume == 0 {
                warning "Invalid parameters of voting"
            }
            $multi = 1
        }else{
            // -1 if the selected "one signature"
            $multi = -1
        }
        var amountDay amountMonth dateDay dateMonth int roleIds groupIds array
        if $buf["value.type"] == $ROLE_SINGLE || $buf["value.type"] == $ROLE_VOTING{
            roleIds = $units
            $isGroup = false
        }else{
            groupIds = $units
            $isGroup = true
        }
        $PARAMS = ["amount_max", "amount_max_day", "amount_max_month", "amount_day", "amount_month", "date_day", "date_month", "voting_duration", "voting_quorum", "voting_volume", "role_ids", "group_ids"]
        $VALUES = [$AmountMax, $AmountMaxDay, $AmountMaxMonth, amountDay, amountMonth, dateDay, dateMonth, $Duration, $Quorum, $Volume, roleIds, groupIds]
    }

    action {
        var table string
        table = Sprintf("@%vkeys", $ecosystem_id)
        DBUpdate(table, $key_id, {multi:$multi})

        // лимиты групп и ролей пишу в таблицу доверенностей
        var params map i lenUnits kid int
        params["DateExpiration"] = $LimitDate
        params["TimeExpiration"] = $LimitTime
        params["TemplateId"] = $PoaTemplateId
        params["ParamArr"] = $PARAMS
        params["ValueArr"] = $VALUES
        params["Recipient"] = IdToAddress($key_id)
        Println(params)
        CallContract("@1PoaAdd", params)
    }
}
