contract PoaTemplateAdd {
    data {
        ContractName string
        ParamArr array
    }

    func getMemberInfo(account string) map {
        var res member map
        member = DBFind("@1members").Where({"ecosystem": $ecosystem_id, "account": account}).Row()
        if member {
            res["account"] = member["account"]
            res["member_name"] = member["member_name"]
            res["image_id"] = member["image_id"]
        } else {
            member = DBFind("@1keys").Where({"ecosystem": $ecosystem_id, "account": account, "deleted": 0}).Row()
            if member {
                res["account"] = member["account"]
                res["member_name"] = member["account"]
                res["image_id"] = 0
            }
        }
        return res
    }

    conditions {
        $app = DBFind("@1applications").Where({"ecosystem": $ecosystem_id, "name": "Power of attorney"}).One("id")
        var admin_ids string
        admin_ids = AppParam(Int($app), "poa_admin_role", $ecosystem_id)
        var rids array
        rids = JSONDecode("["+admin_ids+"]")
        if !DBFind("@1roles_participants").Where({"ecosystem": $ecosystem_id, "role->id": {"$in": rids}, "member->account": $account_id, "deleted": 0}).Row() {
            warning LangRes("@1poa_not_rights_to_create", "en")
        }
    }

    action {
        var i int params map
        while i < Len($ParamArr) {
            params[$ParamArr[i]] = ""
            i = i + 1
        }

        var m map
        m["creator"] = getMemberInfo($account_id)
        m["contract"] = $ContractName
        m["date_created"] = $block_time
        m["params"] = params
        m["deleted"] = 0
        m["ecosystem"] = $ecosystem_id
        $result = DBInsert("@1poa_templates", m)
    }
}