{
    "name": "Land registry",
    "conditions": "ContractConditions(\"AdminCondition\")",
    "data": [
        {
            "Name": "lr_check_rights",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({ecosystem: #ecosystem_id#, name: \"Land registry\"}).Vars(\"app\")\nSetVar(admin, 0).(bank, 0).(depart2, 0).(depart3, 0)\n\nIf(#role_id# == AppParam(App: #app_id#, Name: lr_admin_role)){\n    SetVar(admin, 1)\n}\nIf(#role_id# == AppParam(App: #app_id#, Name: lr_bank_role)){\n    SetVar(bank, 1)\n}\nIf(#role_id# == AppParam(App: #app_id#, Name: lr_depart2_role)){\n    SetVar(depart2, 1)\n}\nIf(#role_id# == AppParam(App: #app_id#, Name: lr_depart3_role)){\n    SetVar(depart3, 1)\n}",
            "Type": "blocks"
        },
        {
            "Name": "admin_menu",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "MenuItem(Title: \"$lr_settings$\", Page: lr_settings, Icon: \"icon-wrench\")",
            "Type": "menu"
        },
        {
            "Name": "default_menu",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "MenuItem(Title: \"$lr_land_registry$\", Page: lr_list, Icon: \"icon-home\")",
            "Type": "menu"
        },
        {
            "Name": "lr_additional_request",
            "Trans": "{\"en\":\"Additional request\",\"ru\":\"Дополнительный запрос\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_admin_role_name",
            "Trans": "{\"en\":\"Administrator\",\"ru\":\"Администратор\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_all_objects",
            "Trans": "{\"en\":\"All objects\",\"ru\":\"Все объекты\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_all_roles_needed",
            "Trans": "{\"en\":\"All application roles must be set before using this application\",\"ru\":\"Необходимо установить все роли этого приложения перед его использованием\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_area_size",
            "Trans": "{\"en\":\"Area size\",\"ru\":\"Размер территории\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_attention_required",
            "Trans": "{\"en\":\"Attention required\",\"ru\":\"Требует внимания\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_available_for_purchase",
            "Trans": "{\"en\":\"Available for the purchase\",\"ru\":\"Доступно для приобретения\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_awaiting_bank_transfer",
            "Trans": "{\"en\":\"Waiting for the bank transfer\",\"ru\":\"Ожидание перевода от банка\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_awaiting_buyer_deposit",
            "Trans": "{\"en\":\"Waiting for the buyer deposit\",\"ru\":\"Ожидание внесения средств от покупателя\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_awaiting_depart_checks",
            "Trans": "{\"en\":\"Waiting for the departments checks\",\"ru\":\"Ожидание окончания проверок департаментов\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_awaiting_owner_accept",
            "Trans": "{\"en\":\"Waiting for the owner acceptance\",\"ru\":\"Ожидание одобрения от владельца\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_bank_account_not_found",
            "Trans": "{\"en\":\"Land bank account was not found\",\"ru\":\"Счёт земельного банка не найден\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_bank_role_name",
            "Trans": "{\"ru\":\"Земельный банк\",\"en\":\"Land Bank\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_buildings_class",
            "Trans": "{\"en\":\"Buildings use class\",\"ru\":\"Класс используемых зданий\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_buyer",
            "Trans": "{\"en\":\"Buyer\",\"ru\":\"Покупатель\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_buyer_cancelled_purchase",
            "Trans": "{\"en\":\"The buyer cancelled the purchase\",\"ru\":\"Покупатель отказался от приобретения\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_buyer_made_deposit",
            "Trans": "{\"en\":\"The buyer made a deposit\",\"ru\":\"Покупатель внёс депозит\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_checks_successfull",
            "Trans": "{\"en\":\"All department checks completed successfully\",\"ru\":\"Все проверки департаментов успешно завершены\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_deal_cancelled_by_bank",
            "Trans": "{\"en\":\"The deal was cancelled by the Land bank\",\"ru\":\"Сделка отменена земельным банком\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_deal_status",
            "Trans": "{\"en\":\"Deal status\",\"ru\":\"Статус сделки\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_deal_successful",
            "Trans": "{\"en\":\"Deal completed successfully\",\"ru\":\"Сделка успешно завершена\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_decision_made",
            "Trans": "{\"en\":\"Decision was made\",\"ru\":\"Решение было принято\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_depart2_role_name",
            "Trans": "{\"en\":\"Department of Legal Affairs\",\"ru\":\"Департамент по правовым вопросам\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_depart3_role_name",
            "Trans": "{\"en\":\"Department of Revenue\",\"ru\":\"Департамент налогов и сборов\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_deposit_money",
            "Trans": "{\"en\":\"Deposit money\",\"ru\":\"Внести деньги на депозит\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_encumbrance_certificate",
            "Trans": "{\"en\":\"Encumbrance certificate\",\"ru\":\"Сертификат обременения\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_finalize_deal",
            "Trans": "{\"en\":\"Finalize deal\",\"ru\":\"Завершить сделку\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_government_price",
            "Trans": "{\"en\":\"Government value\",\"ru\":\"Государственная стоимость\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_land_authority",
            "Trans": "{\"en\":\"Land authority\",\"ru\":\"Местный орган\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_land_registry",
            "Trans": "{\"en\":\"Land Registry\",\"ru\":\"Земельный реестр\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_land_use",
            "Trans": "{\"en\":\"Land use\",\"ru\":\"Землепользование\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_legal_status",
            "Trans": "{\"en\":\"Legal status\",\"ru\":\"Правовой статус\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_list_desc",
            "Trans": "{\"en\":\"Complete list of all Land registry objects\",\"ru\":\"Полный список всех объектов земельного реестра\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_location",
            "Trans": "{\"en\":\"Location\",\"ru\":\"Местоположение\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_market_price",
            "Trans": "{\"en\":\"Market value\",\"ru\":\"Рыночная стоимость\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_modification_date",
            "Trans": "{\"en\":\"Modification date\",\"ru\":\"Дата изменения\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_need_processing",
            "Trans": "{\"en\":\"Need your processing\",\"ru\":\"Нужна ваша обработка\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_new_object",
            "Trans": "{\"en\":\"New object\",\"ru\":\"Новый объект\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_new_offer",
            "Trans": "{\"en\":\"New purchase offer\",\"ru\":\"Новое предложение о покупке\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_no_address_found",
            "Trans": "{\"en\":\"No address found\",\"ru\":\"Адрес не найден\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_no_issues",
            "Trans": "{\"en\":\"No issues\",\"ru\":\"Проблем нет\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_no_objects_found",
            "Trans": "{\"en\":\"Objects not found\",\"ru\":\"Объекты не найдены\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_no_rights_to_change",
            "Trans": "{\"en\":\"You have no rights to change this property\",\"ru\":\"У вас нет прав на редактирование этого свойства\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_object_create",
            "Trans": "{\"en\":\"Create object\",\"ru\":\"Создать объект\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_object_edit",
            "Trans": "{\"en\":\"Object edit\",\"ru\":\"Редактирование объекта\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_object_status",
            "Trans": "{\"en\":\"Object status\",\"ru\":\"Статус объекта\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_object_view",
            "Trans": "{\"en\":\"Object view\",\"ru\":\"Просмотр объекта\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_owner",
            "Trans": "{\"en\":\"Owner\",\"ru\":\"Владелец\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_owner_cancelled_purchase",
            "Trans": "{\"en\":\"The owner cancelled the selling\",\"ru\":\"Владелец отказался от продажи\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_owner_rejected_purchase",
            "Trans": "{\"en\":\"The owner rejected the purchase\",\"ru\":\"Владелец отклонил покупку\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_price",
            "Trans": "{\"en\":\"Price\",\"ru\":\"Цена\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_purchase",
            "Trans": "{\"en\":\"Purchase object\",\"ru\":\"Приобрести объект\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_purchase_accepted",
            "Trans": "{\"en\":\"Your purchase request was accepted\",\"ru\":\"Ваша заявка на покупку принята\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_purchase_rejected",
            "Trans": "{\"en\":\"Your purchase request was rejected\",\"ru\":\"Ваша заявка на покупку отклонена\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_registration_date",
            "Trans": "{\"en\":\"Registration date\",\"ru\":\"Дата регистрации\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_requests_limit_reached",
            "Trans": "{\"en\":\"Only one additional request to the department allowed\",\"ru\":\"Разрешён только один дополнительный запрос в департамент\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_sales",
            "Trans": "{\"en\":\"Land Registry sales\",\"ru\":\"Продажа объектов Земельного реестра\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_sales_desc",
            "Trans": "{\"en\":\"List of Land registry objects available for purchase\",\"ru\":\"Cписок объектов земельного реестра доступных для приобретения\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_save_results",
            "Trans": "{\"en\": \"Save results\", \"ru\": \"Сохранить результаты\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_settings",
            "Trans": "{\"en\":\"Land registry settings\",\"ru\":\"Настройки земельного реестра\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_settings_description",
            "Trans": "{\"en\": \"Correspondence between Land registry application roles and the ecosystem roles\", \"ru\": \"Соответствие ролей приложения Земельный реестр ролям экосистемы\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_taxes_and_bills",
            "Trans": "{\"en\":\"Taxes and bills\",\"ru\":\"Налоги и счета\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_tokens_needed",
            "Trans": "{\"en\": \"You must emit tokens for this ecosystem or install Land registry to the platform ecosystem before using it\", \"ru\": \"Вы должны выпустить токены для этой экосистемы или установить Земельный реестр в платформенной экосистеме для его использования\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_undefined",
            "Trans": "{\"en\":\"Undefined\",\"ru\":\"Не определено\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_want_accept_purchase",
            "Trans": "{\"en\":\"Do you want to accept the purchase offer?\",\"ru\":\"Вы хотите принять предложение о покупке?\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_want_cancel_deal",
            "Trans": "{\"en\":\"Do you really want to cancel the deal?\",\"ru\":\"Вы действительно хотите отменить сделку?\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_want_delete_object",
            "Trans": "{\"en\":\"Do you really want to delete this object?\",\"ru\":\"Вы действительно хотите удалить этот объект?\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_want_finalize_deal",
            "Trans": "{\"en\":\"Do you really want to finalize the deal?\",\"ru\":\"Вы действительно хотите завершить сделку?\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_want_initiate_purchase",
            "Trans": "{\"en\":\"Do you want to initiate the purchase?\",\"ru\":\"Вы хотите начать процесс покупки?\"}",
            "Type": "languages"
        },
        {
            "Name": "lr_want_reject_purchase",
            "Trans": "{\"en\":\"Do you want to reject the purchase offer?\",\"ru\":\"Вы хотите отклонить предложение о покупке?\"}",
            "Type": "languages"
        },
        {
            "Name": "land_registry",
            "Columns": "[\n    {\n        \"name\": \"buyer_id\",\n        \"conditions\": \"{\\\"update\\\":\\\"ContractAccess(\\\\\\\"LrPurchaseSteps\\\\\\\")\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"number\"\n    },\n    {\n        \"name\": \"date_created\",\n        \"conditions\": \"{\\\"update\\\":\\\"false\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"number\"\n    },\n    {\n        \"name\": \"deleted\",\n        \"conditions\": \"{\\\"update\\\":\\\"ContractAccess(\\\\\\\"LrEdit\\\\\\\")\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"number\"\n    },\n    {\n        \"name\": \"government_price\",\n        \"conditions\": \"{\\\"update\\\":\\\"ContractAccess(\\\\\\\"LrDepartChecks\\\\\\\")\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"money\"\n    },\n    {\n        \"name\": \"market_price\",\n        \"conditions\": \"{\\\"update\\\":\\\"ContractAccess(\\\\\\\"LrDepartChecks\\\\\\\")\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"money\"\n    },\n    {\n        \"name\": \"modification_date\",\n        \"conditions\": \"{\\\"update\\\":\\\"ContractAccess(\\\\\\\"LrDepartChecks\\\\\\\")\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"number\"\n    },\n    {\n        \"name\": \"owner_id\",\n        \"conditions\": \"{\\\"update\\\":\\\"ContractAccess(\\\\\\\"LrPurchaseSteps\\\\\\\")\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"number\"\n    },\n    {\n        \"name\": \"price\",\n        \"conditions\": \"{\\\"update\\\":\\\"ContractAccess(\\\\\\\"LrEdit\\\\\\\")\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"money\"\n    },\n    {\n        \"name\": \"registration_date\",\n        \"conditions\": \"{\\\"update\\\":\\\"ContractAccess(\\\\\\\"LrEdit\\\\\\\")\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"number\"\n    },\n    {\n        \"name\": \"specifications\",\n        \"conditions\": \"{\\\"update\\\":\\\"ContractAccess(\\\\\\\"LrEdit\\\\\\\")\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"json\"\n    },\n    {\n        \"name\": \"status\",\n        \"conditions\": \"{\\\"update\\\":\\\"ContractAccess(\\\\\\\"LrDepartChecks\\\\\\\",\\\\\\\"LrPurchaseSteps\\\\\\\")\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"json\"\n    },\n    {\n        \"name\": \"step\",\n        \"conditions\": \"{\\\"update\\\":\\\"ContractAccess(\\\\\\\"LrPurchaseSteps\\\\\\\")\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"number\"\n    }\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"ContractAccess(\\\"LrAdd\\\")\", \"update\": \"ContractAccess(\\\"LrDepartChecks\\\",\\\"LrEdit\\\",\\\"LrPurchaseSteps\\\")\", \"new_column\": \"ContractConditions(\\\"@1AdminCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Name": "land_registry_history",
            "Columns": "[\n    {\n        \"name\": \"attribute_name\",\n        \"conditions\": \"{\\\"update\\\":\\\"false\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"name\": \"date\",\n        \"conditions\": \"{\\\"update\\\":\\\"false\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"number\"\n    },\n    {\n        \"name\": \"member_id\",\n        \"conditions\": \"{\\\"update\\\":\\\"false\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"number\"\n    },\n    {\n        \"name\": \"new_value\",\n        \"conditions\": \"{\\\"update\\\":\\\"false\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"text\"\n    },\n    {\n        \"name\": \"object_id\",\n        \"conditions\": \"{\\\"update\\\":\\\"false\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"number\"\n    },\n    {\n        \"name\": \"old_value\",\n        \"conditions\": \"{\\\"update\\\":\\\"false\\\",\\\"read\\\":\\\"true\\\"}\",\n        \"type\": \"text\"\n    }\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"ContractAccess(\\\"LrEdit\\\")\", \"update\": \"false\", \"new_column\": \"ContractConditions(\\\"@1AdminCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Name": "lr_admin_role",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "lr_bank_role",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "lr_buildings_class",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Shops,Financial and professional services,Restaurants and cafes,Drinking establishments,Hot food takeaways,Drinking establishments with expanded food provision,Business,General industrial,Storage or distribution,Hotels,Residential institutions,Secure Residential Institution,Dwellinghouses,Houses in multiple occupation,Non-residential institutions,Assembly and leisure",
            "Type": "app_params"
        },
        {
            "Name": "lr_depart2_role",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "lr_depart3_role",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "lr_issues",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "lr_no_issues,lr_attention_required",
            "Type": "app_params"
        },
        {
            "Name": "lr_land_authority",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Municipal,Regional,Federal",
            "Type": "app_params"
        },
        {
            "Name": "lr_land_type",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Inheritance,Partition,Gift,Settlement,Grant,Release",
            "Type": "app_params"
        },
        {
            "Name": "lr_land_use",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Agriculture,Business,Community services,Construction,Energy production,Fishing,Forestry,Heavy environmental impact,Industry and manufacturing,Mining and quarrying,Recreation / leisure / sport,Residential,Services and residential,Total Land Use,Transport / communication networks / storage,Protective works,Unused and abandoned area",
            "Type": "app_params"
        },
        {
            "Name": "lr_legal_status",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "No Issues,Title Not Clear,Multiple Owner Claims",
            "Type": "app_params"
        },
        {
            "Name": "lr_add",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({ecosystem: #ecosystem_id#, name: \"Land registry\"}).Columns(\"name,id\").Vars(app)\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-3 text-right mt-sm\").(col_right,\"col-sm-9 text-left\")\nSetVar(custom_token_title, \"APLA\")\nIf(#ecosystem_id#>1){\n    DBFind(\"@1ecosystems\").Where({\"id\": #ecosystem_id#}).Vars(\"custom\")\n}\n\nDiv(content-wrapper){\n    Div(row){\n        Div(col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1){\n            Form(panel panel-primary){\n                Div(panel-body){\n                    Div(text-center text-bold h4 m0){\n                        LangRes(lr_new_object)\n                    }\n                    Div(row mt-lg){\n                        Div(#col_left#){\n                            Label(){\n                                LangRes(lr_location)\n                            }\n                        }\n                        Div(#col_right#){\n                            InputMap(Name: Coords, Type: polygon, MapType: streets, Value: `{\"zoom\":18, \"center\":{\"lng\":40.777045,\"lat\":-73.963719}}`)\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            Label(){\n                                LangRes(@1type)\n                            }\n                        }\n                        Div(#col_right#){\n                            AppParam(App: #app_id#, Name: lr_land_type, Source: lr_land_type)\n                            Select(Name: LandType, Source: lr_land_type, ValueColumn: id, NameColumn: name)\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            Label(){\n                                LangRes(lr_land_use)\n                            }\n                        }\n                        Div(#col_right#){\n                            AppParam(App: #app_id#, Name: lr_land_use, Source: src_land_use)\n                            Select(Name: LandUse, Source: src_land_use, ValueColumn: id, NameColumn: name)\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            Label(){\n                                LangRes(lr_buildings_class)\n                            }\n                        }\n                        Div(#col_right#){\n                            AppParam(App: #app_id#, Name: lr_buildings_class, Source: src_buildings_class)\n                            Select(Name: BuildingsUseClass, Source: src_buildings_class, ValueColumn: id, NameColumn: name)\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            Label(){\n                                LangRes(lr_land_authority)\n                            }\n                        }\n                        Div(#col_right#){\n                            AppParam(App: #app_id#, Name: lr_land_authority, Source: src_land_authority)\n                            Select(Name: LandAuthority, Source: src_land_authority, ValueColumn: id, NameColumn: name)\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            Label(){\n                                LangRes(lr_registration_date)\n                            }\n                        }\n                        Div(#col_right#){\n                            If(#edit_price#>0){\n                                SetVar(edit_price,Money(#edit_price#))\n                            }\n                            Input(Name: RegistrationDate, Type: date)\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            Label(){\n                                LangRes(lr_price) (#custom_token_title#)\n                            }\n                        }\n                        Div(#col_right#){\n                            If(#edit_price#>0){\n                                SetVar(edit_price,Money(#edit_price#))\n                            }\n                            Input(Name: Price)\n                        }\n                    }\n                }\n                Div(panel-footer text-right){\n                    Button(Page: #back_page#, PageParams: \"sales_list=#sales_list#\", Body: LangRes(@1back), Class: btn btn-default)\n                    Button(Contract: LrAdd, Page: #back_page#, PageParams: \"sales_list=0\", Body: $lr_object_create$, Class: btn btn-primary)\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "lr_edit",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "If(#object_id#>0){\n    Include(lr_check_rights)\n    DBFind(\"@1applications\").Where({ecosystem: #ecosystem_id#, name: \"Land registry\"}).Columns(\"name,id\").Vars(app)\n    SetVar(row,\"row mt-sm\").(col_left,\"col-md-3 mt-sm text-right\").(col_right,\"col-md-9 text-left\")\n\n    If(GetVar(edit_specifications_land_type)==\"\"){\n        SetVar(edit_specifications_land_type,1)\n    }\n    If(GetVar(edit_specifications_land_use)==\"\"){\n        SetVar(edit_specifications_land_use,1)\n    }\n    If(GetVar(edit_specifications_buildings_class)==\"\"){\n        SetVar(edit_specifications_buildings_class,1)\n    }\n    If(GetVar(edit_specifications_land_authority)==\"\"){\n        SetVar(edit_specifications_land_authority,1)\n    }\n    If(GetVar(edit_registration_date)==\"\"){\n        SetVar(edit_registration_date,)\n    }\n    If(GetVar(edit_price)==\"\"){\n        SetVar(edit_price,)\n    }\n    SetVar(custom_token_title, \"APLA\")\n    If(#ecosystem_id#>1){\n        DBFind(\"@1ecosystems\").Where({\"id\": #ecosystem_id#}).Vars(\"custom\")\n    }\n\n    DBFind(land_registry, src).WhereId(#object_id#).Columns(\"id,owner_id,specifications->map_coords,specifications->address,specifications->land_type,specifications->land_use,specifications->buildings_class,specifications->land_authority,registration_date,price\").Vars(edit)\n\n    Form(){\n        Div(){\n            Map(MapType: streets, Hmap: 250, Value: #edit_specifications_map_coords#)\n        }\n        Div(row mt){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_location)\n                }\n            }\n            Div(#col_right#){\n                Input(Value: #edit_specifications_address#, Disabled: true)\n            }\n        }\n        Div(#row#){\n            Div(#col_left#){\n                Label(){\n                    LangRes(@1type)\n                }\n            }\n            Div(#col_right#){\n                If(#admin#==1){\n                    AppParam(App: #app_id#, Name: lr_land_type, Source: lr_land_type)\n                    Select(Name: LandType, Source: lr_land_type, ValueColumn: id, NameColumn: name, Value: #edit_specifications_land_type#)\n                }.Else{\n                    SetVar(edit_specifications_land_type, AppParam(App: #app_id#, Name: lr_land_type, Index: #edit_specifications_land_type#))\n                    Input(Value: #edit_specifications_land_type#, Disabled: true)\n                }\n            }\n        }\n        Div(#row#){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_land_use)\n                }\n            }\n            Div(#col_right#){\n                If(#admin#==1){\n                    AppParam(App: #app_id#, Name: lr_land_use, Source: src_land_use)\n                    Select(Name: LandUse, Source: src_land_use, ValueColumn: id, NameColumn: name, Value: #edit_specifications_land_use#)\n                }.Else{\n                    SetVar(edit_specifications_land_use, AppParam(App: #app_id#, Name: lr_land_use, Index: #edit_specifications_land_use#))\n                    Input(Value: #edit_specifications_land_use#, Disabled: true)\n                }\n            }\n        }\n        Div(#row#){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_buildings_class)\n                }\n            }\n            Div(#col_right#){\n                If(#admin#==1){\n                    AppParam(App: #app_id#, Name: lr_buildings_class, Source: src_buildings_class)\n                    Select(Name: BuildingsUseClass, Source: src_buildings_class, ValueColumn: id, NameColumn: name, Value: #edit_specifications_buildings_class#)\n                }.Else{\n                    SetVar(edit_specifications_buildings_class, AppParam(App: #app_id#, Name: lr_buildings_class, Index: #edit_specifications_buildings_class#))\n                    Input(Value: #edit_specifications_buildings_class#, Disabled: true)\n                }\n            }\n        }\n        Div(#row#){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_land_authority)\n                }\n            }\n            Div(#col_right#){\n                If(#admin#==1){\n                    AppParam(App: #app_id#, Name: lr_land_authority, Source: src_land_authority)\n                    Select(Name: LandAuthority, Source: src_land_authority, ValueColumn: id, NameColumn: name, Value: #edit_specifications_land_authority#)\n                }.Else{\n                    SetVar(edit_specifications_land_authority, AppParam(App: #app_id#, Name: lr_land_authority, Index: #edit_specifications_land_authority#))\n                    Input(Value: #edit_specifications_land_authority#, Disabled: true)\n                }\n            }\n        }\n        Div(#row#){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_registration_date)\n                }\n            }\n            Div(#col_right#){\n                If(#edit_registration_date#>0){\n                    SetVar(edit_registration_date, DateTime(#edit_registration_date#, \"YYYY-MM-DD\"))\n                }\n                If(#admin#==1){\n                    Input(Name: RegistrationDate, Type: date, Value: #edit_registration_date#)\n                }.Else{\n                    Input(Value: #edit_registration_date#, Disabled: true)\n                }\n            }\n        }\n        Div(#row#){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_price) (#custom_token_title#)\n                }\n            }\n            Div(#col_right#){\n                If(#edit_price#>0){\n                    SetVar(edit_price, Money(#edit_price#))\n                }\n                If(#edit_owner_id#==#key_id#){\n                    Input(Name: Price, Value: #edit_price#)\n                }.Else{\n                    Input(Value: #edit_price#, Disabled: true)\n                }\n            }\n        }\n        Button(Body: LangRes(@1save), Class: btn btn-primary pull-right mt, Contract: LrEdit, Params: \"ObjectId=#edit_id#,RoleId=#role_id#\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\")\n        Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: #back_page#, PageParams: \"sales_list=#sales_list#\")\n    }\n}.Else{\n    Form(){\n        Div(alert alert-danger text-center){\n            LangRes(@1attention)\n        }\n        Button(Body: LangRes(@1back), Class: btn btn-default pull-right, Page: lr_list)\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "lr_list",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "SetVar(this_page, lr_list).(this_table, land_registry)\nInclude(@1pager_header)\nInclude(lr_check_rights)\n\nSetVar(custom_token_title, \"APLA\")\nIf(#ecosystem_id#>1){\n    DBFind(\"@1ecosystems\").Where({\"id\": #ecosystem_id#}).Vars(\"custom\")\n}\n\nIf(And(#sales_list#==\"\",#admin#!=1,#bank#!=1,#depart2#!=1,#depart3#!=1)){\n    SetVar(sales_list, 1)\n}\n\nIf(#sales_list#==1){\n    SetVar(title, $lr_sales$)\n    Span(Class: text-muted h5 m0 mb ml-lg, Body: Span(Class: ml-sm, Body: \"$lr_sales_desc$\"))\n    SetVar(filters, {\"price\": {$gt: 0}, \"government_price\": {$gt: 0}, \"market_price\": {$gt: 0}, \"status->legal_status\": 1, \"status->encumbrance_certificate\": 1, \"status->tax_receipt_and_bills\": 1, \"deleted\": 0})\n}.Else{\n    SetVar(sales_list, 0)\n    SetVar(title, $lr_land_registry$)\n    Span(Class: text-muted h5 m0 mb ml-lg, Body: Span(Class: ml-sm, Body: \"$lr_list_desc$\"))\n    \n    If(And(#admin#!=1,#bank#!=1,#depart2#!=1,#depart3#!=1)){\n        SetVar(filters, {$or: [{\"owner_id\": #key_id#, \"deleted\": 0}, {\"price\": {$gt: 0}, \"government_price\": {$gt: 0}, \"market_price\": {$gt: 0}, \"status->legal_status\": 1, \"status->encumbrance_certificate\": 1, \"status->tax_receipt_and_bills\": 1, \"deleted\": 0}]})\n    }.Else{\n        SetVar(filters, {\"deleted\": 0})\n    }\n}\n\nIf(#admin# == 1){\n    SetTitle(#title# ($lr_admin_role_name$))\n}.ElseIf(#bank# == 1){\n    SetTitle(#title# ($lr_bank_role_name$))\n}.ElseIf(#depart2# == 1){\n    SetTitle(#title# ($lr_depart2_role_name$))\n}.ElseIf(#depart3# == 1){\n    SetTitle(#title# ($lr_depart3_role_name$))\n}.Else{\n    SetTitle(#title#)\n}\n\nAddToolButton(Title: $@1add$, Page: lr_add, PageParams: \"back_page=#this_page#,sales_list=#sales_list#\", Icon: icon-plus)\n\nDiv(btn-group ml-lg){\n    If(#sales_list#==0){\n        Button(Body: Em(Class: fa fa-list) $lr_all_objects$, Page: #this_page#, PageParams: \"sales_list=0\", Class: btn bg-gray-lighter ml-sm)\n    }.Else{\n        Button(Body: Em(Class: fa fa-list) $lr_all_objects$, Page: #this_page#, PageParams: \"sales_list=0\", Class: btn bg-gray ml-sm)\n    }\n    If(#sales_list#==1){\n        Button(Body: Em(Class: fa fa-credit-card) $@1sales$, Page: #this_page#, PageParams: \"sales_list=1\", Class: btn bg-gray-lighter ml-sm)\n    }.Else{\n        Button(Body: Em(Class: fa fa-credit-card) $@1sales$, Page: #this_page#, PageParams: \"sales_list=1\", Class: btn bg-gray ml-sm)\n    }\n}\n\nIf(GetVar(search)!=\"\"){\n    SetVar(where, {GetVar(filters), \"specifications->address\": {$ilike: #search#}})\n}.Else{\n    SetVar(where, GetVar(filters)).(search,)\n}\n\nDiv(list-group-item ml-lg mr-lg pt-lg){\n    SetVar(search_name, LangRes(lr_location))\n    Include(@1search)\n}\n\nDBFind(#this_table#, src).Where(#where#).Order({\"id\": -1}).Limit(#pager_limit#).Offset(#pager_offset#).Columns(\"owner_id,buyer_id,specifications->address,specifications->land_use,specifications->buildings_class,specifications->area,price,status->legal_status,status->encumbrance_certificate,status->tax_receipt_and_bills,step\").Custom(location){\n    If(#specifications.address#){\n        SetVar(location_name, #specifications.address#)\n    }.Else{\n        SetVar(location_name, $lr_no_address_found$)\n    }\n    Button(Page: lr_view, PageParams: \"object_id=#id#,back_page=#this_page#,sales_list=#sales_list#\", Body: #location_name#, Class: btn-link).Popup(50, $lr_object_view$)\n}.Custom(owner_price){\n    If(GetVar(price)){\n        Money(#price#) #custom_token_title#\n    }.Else{\n        Em(Class: fa fa-question-circle text-muted)\n    }\n}.Custom(owner){\n    SetVar(m_id, 0)\n    DBFind(\"@1members\").Where({\"id\": #owner_id#, \"ecosystem\": #ecosystem_id#}).Vars(m)\n    If(Or(#m_id#>0,#m_id#<0)){\n        SetVar(owner_image_id, #m_image_id#)\n        SetVar(owner_member_name, #m_member_name#)\n    }.Else{\n        SetVar(owner_image_id, 0)\n        SetVar(owner_member_name, Address(#owner_id#))\n    }\n    LinkPage(Page: @1profile_view, PageParams: \"v_key_id=#owner_id#\"){\n        If(#owner_image_id#>0){\n            Image(Src: Binary().ById(#owner_image_id#), Class: img-circle).Style(height: 30px; width: 30px; border: 1px solid #5A5D63;)\n            Span(Class: ml-sm text-bold, Body: #owner_member_name#)\n        }.Else{\n            Div(){\n                Span(Em(Class: fa icon-user fa-2x))\n                Span(Class: ml-sm text-bold, Body: #owner_member_name#)\n            }.Style(display:flex; align-items:center;)\n        }\n    }\n}.Custom(buyer){\n    If(#owner_id#!=#buyer_id#){\n        SetVar(n_id, 0)\n        DBFind(\"@1members\").Where({\"id\": #buyer_id#, \"ecosystem\": #ecosystem_id#}).Vars(n)\n        If(Or(#n_id#>0,#n_id#<0)){\n            SetVar(buyer_image_id, #n_image_id#)\n            SetVar(buyer_member_name, #n_member_name#)\n        }.Else{\n            SetVar(buyer_image_id, 0)\n            SetVar(buyer_member_name, Address(#buyer_id#))\n        }\n        LinkPage(Page: @1profile_view, PageParams: \"v_key_id=#buyer_id#\"){\n            If(#buyer_image_id#>0){\n                Image(Src: Binary().ById(#buyer_image_id#), Class: img-circle).Style(height: 30px; width: 30px; border: 1px solid #5A5D63;)\n                Span(Class: ml-sm text-bold, Body: #buyer_member_name#)\n            }.Else{\n                Div(){\n                    Span(Em(Class: fa icon-user fa-2x))\n                    Span(Class: ml-sm text-bold, Body: #buyer_member_name#)\n                }.Style(display:flex; align-items:center;)\n            }\n        }\n    }\n}.Custom(deal_status){\n    If(#step#==-1){\n        Em(Class: fa fa-fw fa-check-circle text-success) $lr_available_for_purchase$\n    }.ElseIf(#step#==0){\n        Em(Class: fa fa-fw fa-hourglass-1 text-primary) $lr_awaiting_owner_accept$\n    }.ElseIf(#step#==1){\n        Em(Class: fa fa-fw fa-hourglass-2 text-primary) $lr_awaiting_buyer_deposit$\n    }.ElseIf(#step#==2){\n        Em(Class: fa fa-fw fa-hourglass-3 text-primary) $lr_awaiting_bank_transfer$\n    }\n}.Custom(legal_status){\n    If(#status.legal_status#==1){\n        Em(Class: fa fa-check-circle text-success)\n    }.ElseIf(#status.legal_status#==2){\n        Em(Class: fa fa-exclamation-circle text-danger)\n    }.Else{\n        Em(Class: fa fa-question-circle text-muted)\n    }\n}.Custom(encumbrance_certificate){\n    If(#status.encumbrance_certificate#==1){\n        Em(Class: fa fa-check-circle text-success)\n    }.ElseIf(#status.encumbrance_certificate#==2){\n        Em(Class: fa fa-exclamation-circle text-danger)\n    }.Else{\n        Em(Class: fa fa-question-circle text-muted)\n    }\n}.Custom(tax_receipt_and_bills){\n    If(#status.tax_receipt_and_bills#==1){\n        Em(Class: fa fa-check-circle text-success)\n    }.ElseIf(#status.tax_receipt_and_bills#==2){\n        Em(Class: fa fa-exclamation-circle text-danger)\n    }.Else{\n        Em(Class: fa fa-question-circle text-muted)\n    }\n}.Custom(actions){\n    If(And(Or(#owner_id#==#key_id#,#admin#==1),#step#<2)){\n        Button(Page: #this_page#, PageParams: \"sales_list=#sales_list#\", Contract: LrEdit, Params: \"ObjectId=#id#,RoleId=#role_id#,DeleteObject=1\", Class: btn bg-gray-lighter pull-right ml-sm, Body: Em(Class: text-danger fa fa-trash)).Alert($lr_want_delete_object$, $@1confirm_button$, $@1cancel$)\n        Button(Page: lr_edit, PageParams: \"object_id=#id#,back_page=#this_page#,sales_list=#sales_list#\", Class: btn bg-gray-lighter pull-right, Body: Em(Class: fa fa-edit)).Popup(50, $lr_object_edit$)\n    }\n}.Count(count)\n\nDiv(fullscreen){\n    Div(table-responsive ml-lg mr-lg){\n        Div(list-group-item){\n            If(#count# > 0){\n                If(#sales_list#==1){\n                    Table(src, \"$lr_location$=location,$lr_price$=owner_price,$lr_owner$=owner,$lr_buyer$=buyer,$@1status$=deal_status,=actions\")\n                }.Else{\n                    Table(src, \"$lr_location$=location,$lr_price$=owner_price,$lr_owner$=owner,$lr_legal_status$=legal_status,$lr_encumbrance_certificate$=encumbrance_certificate,$lr_taxes_and_bills$=tax_receipt_and_bills,=actions\")\n                }\n            }.Else{\n                Div(Class: text-center h4 text-muted, Body: \"$lr_no_objects_found$\")\n            }\n        }.Style(\n            margin-top:-15px;\n            tbody > tr:nth-of-type(odd) {\n                background-color: #f8f9fc;\n            }\n        )\n    }\n}\nDiv(mt-sm ml-lg mr-sm mb-sm){\n    Include(@1pager)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "lr_settings",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({ecosystem: #ecosystem_id#, name: \"Land registry\"}).Columns(\"name,id\").Vars(app)\n\nSetVar(this_page, lr_settings).(admin_role,0).(bank_role,0).(depart2_role,0).(depart3_role,0)\nSetVar(admin_role, AppParam(App: #app_id#, Name: lr_admin_role))\nSetVar(bank_role, AppParam(App: #app_id#, Name: lr_bank_role))\nSetVar(depart2_role, AppParam(App: #app_id#, Name: lr_depart2_role))\nSetVar(depart3_role, AppParam(App: #app_id#, Name: lr_depart3_role))\n\nDBFind(@1roles,src_roles).Where({ecosystem: #ecosystem_id#, deleted: 0}).Columns(\"role_name,id\").Limit(100)\n\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 text-right mt-sm\").(col_right,\"col-sm-8 text-left\")\n\nIf(#ecosystem_id#>1){\n    DBFind(\"@1ecosystems\").Where({\"id\": #ecosystem_id#}).Vars(\"custom\")\n}.Else{\n    SetVar(custom_token_title, \"APLA\")\n}\n\nDiv(content-wrapper){\n    Div(row){\n        Div(col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1){\n            Form(panel panel-primary){\n                If(#custom_token_title# != \"\"){\n                    Div(panel-body){\n                        Div(text-center text-bold h4 m0){\n                            LangRes(lr_settings)\n                        }\n                        Div(text-center text-muted){\n                            $lr_settings_description$\n                        }\n                        Div(row mt-lg){\n                            Div(#col_left#){\n                                Label(){\n                                    LangRes(lr_admin_role_name)\n                                }\n                            }\n                            Div(#col_right#){\n                                Select(Name: RoleAdmin, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #admin_role#)\n                            }\n                        }\n                        Div(#row#){\n                            Div(#col_left#){\n                                Label(){\n                                    LangRes(lr_bank_role_name)\n                                }\n                            }\n                            Div(#col_right#){\n                                Select(Name: RoleBank, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #bank_role#)\n                            }\n                        }\n                        Div(#row#){\n                            Div(#col_left#){\n                                Label(){\n                                    LangRes(lr_depart2_role_name)\n                                }\n                            }\n                            Div(#col_right#){\n                                Select(Name: RoleDepart2, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #depart2_role#)\n                            }\n                        }\n                        Div(#row#){\n                            Div(#col_left#){\n                                Label(){\n                                    LangRes(lr_depart3_role_name)\n                                }\n                            }\n                            Div(#col_right#){\n                                Select(Name: RoleDepart3, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #depart3_role#)\n                            }\n                        }\n                    }\n                    Div(panel-footer text-right){\n                        Button(Body: $@1apply_settings$, Class: btn btn-primary, Page: #this_page#, Contract: LrSettings)\n                    }\n                }.Else{\n                    Div(panel-body){\n                        Div(text-center text-bold h4 m0){\n                            LangRes(lr_settings)\n                        }\n                        Div(text-center text-muted){\n                            LangRes(lr_tokens_needed)\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Name": "lr_view",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "If(#notific_id#>0){\n    DBFind(\"@1notifications\").Where({\"id\": #notific_id#, \"ecosystem\": #ecosystem_id#}).Columns(\"notification->body,recipient->member_id,page_params->object_id,page_params->info_message,page_params->info_status,closed\").Vars(notific)\n    SetVar(object_id, #notific_page_params_object_id#)\n    SetVar(back_page,@1notifications_list)\n}\n\nIf(#object_id#>0){\n    Include(lr_check_rights)\n    DBFind(\"@1applications\").Where({ecosystem: #ecosystem_id#, name: \"Land registry\"}).Columns(\"name,id\").Vars(app)\n    AppParam(App: #app_id#, Name: lr_issues, Source: src_issues)\n    SetVar(col_left,\"col-md-4 text-right\").(col_right,\"col-md-8 text-left\")\n    DBFind(\"land_registry\", src).WhereId(#object_id#).Columns(\"id,owner_id,buyer_id,step,specifications->map_coords,specifications->address,specifications->area,specifications->land_type,specifications->land_use,specifications->buildings_class,specifications->land_authority,registration_date,date_created,modification_date,status->legal_status,status->encumbrance_certificate,status->tax_receipt_and_bills,price,market_price,government_price\").Vars(view)\n    SetVar(custom_token_title, \"APLA\")\n    If(#ecosystem_id#>1){\n        DBFind(\"@1ecosystems\").Where({\"id\": #ecosystem_id#}).Vars(\"custom\")\n    }\n\n    If(#view_owner_id#==#key_id#){\n        SetVar(owner,1)\n        DBFind(\"@1notifications\").Where({\"page_params->object_id\": #view_id#, \"page_params->depart2_requests\": 2, \"ecosystem\": #ecosystem_id#}).Columns(\"id\").Vars(depart2)\n        DBFind(\"@1notifications\").Where({\"page_params->object_id\": #view_id#, \"page_params->depart3_requests\": 2, \"ecosystem\": #ecosystem_id#}).Columns(\"id\").Vars(depart3)\n        If(#depart2_id#>0){\n            SetVar(depart2_requests,2)\n        }.Else{\n            SetVar(depart2_requests,1)\n        }\n        If(#depart3_id#>0){\n            SetVar(depart3_requests,2)\n        }.Else{\n            SetVar(depart3_requests,1)\n        }\n    }\n    If(#view_buyer_id#==#key_id#){\n        SetVar(buyer,1)\n    }\n    If(And(#view_status_legal_status#==1,#view_status_encumbrance_certificate#==1,#view_status_tax_receipt_and_bills#==1,#view_government_price#>0,#view_market_price#>0)){\n        SetVar(depart_checks,1)\n        If(And(#depart_checks#==1,#view_step#==-1,#view_price#>0)){\n            SetVar(available_for_sale,1)\n        }\n    }\n\n    Form(){\n        Div(){\n            Map(MapType: streets, Hmap: 250, Value: #view_specifications_map_coords#)\n        }\n        Div(row mt){\n            Div(#col_left# mt-sm){\n                Label(){\n                    LangRes(lr_owner)\n                }\n            }\n            Div(#col_right#){\n                SetVar(m_id, 0)\n                DBFind(\"@1members\").Where({\"id\": #view_owner_id#, \"ecosystem\": #ecosystem_id#}).Vars(m)\n                If(Or(#m_id#>0,#m_id#<0)){\n                    SetVar(image_id, #m_image_id#)\n                    SetVar(member_name, #m_member_name#)\n                }.Else{\n                    SetVar(image_id, 0)\n                    SetVar(member_name, Address(#view_owner_id#))\n                }\n                LinkPage(Page: @1profile_view, PageParams: \"v_key_id=#view_owner_id#\"){\n                    If(#image_id#>0){\n                        Image(Src: Binary().ById(#image_id#), Class: img-circle).Style(height: 30px; width: 30px; border: 1px solid #5A5D63;)\n                        Span(Class: ml-sm text-bold, Body: #member_name#)\n                    }.Else{\n                        Div(){\n                            Span(Em(Class: fa icon-user fa-2x))\n                            Span(Class: ml-sm text-bold, Body: #member_name#)\n                        }.Style(display:flex; align-items:center;)\n                    }\n                }\n            }\n        }\n        Div(row mt-sm){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_location)\n                }\n            }\n            Div(#col_right#){\n                If(#view_specifications_address#){\n                    Span(#view_specifications_address#)\n                }.Else{\n                    Span($lr_no_address_found$)\n                }\n            }\n        }\n        Div(row){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_area_size)\n                }\n            }\n            Div(#col_right#){\n                Span(#view_specifications_area#)\n            }\n        }\n        Div(row){\n            Div(#col_left#){\n                Label(){\n                    LangRes(@1date_created)\n                }\n            }\n            Div(#col_right#){\n                If(#view_date_created#>0){\n                    SetVar(view_date_created, DateTime(#view_date_created#, \"YYYY-MM-DD\"))\n                    Span(#view_date_created#)\n                }\n            }\n        }\n        Div(row){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_registration_date)\n                }\n            }\n            Div(#col_right#){\n                If(#view_registration_date#>0){\n                    SetVar(view_registration_date, DateTime(#view_registration_date#, \"YYYY-MM-DD\"))\n                    Span(#view_registration_date#)\n                }\n            }\n        }\n        Div(row){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_modification_date)\n                }\n            }\n            Div(#col_right#){\n                If(#view_modification_date#>0){\n                    SetVar(view_modification_date, DateTime(#view_modification_date#, \"YYYY-MM-DD\"))\n                    Span(#view_modification_date#)\n                }\n            }\n        }\n        Div(row){\n            Div(#col_left#){\n                Label(){\n                    LangRes(@1type)\n                }\n            }\n            Div(#col_right#){\n                SetVar(view_specifications_land_type, AppParam(App: #app_id#, Name: lr_land_type, Index: #view_specifications_land_type#))\n                Span(#view_specifications_land_type#)\n            }\n        }\n        Div(row){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_land_use)\n                }\n            }\n            Div(#col_right#){\n                SetVar(view_specifications_land_use, AppParam(App: #app_id#, Name: lr_land_use, Index: #view_specifications_land_use#))\n                Span(#view_specifications_land_use#)\n            }\n        }\n        Div(row){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_buildings_class)\n                }\n            }\n            Div(#col_right#){\n                SetVar(view_specifications_buildings_class, AppParam(App: #app_id#, Name: lr_buildings_class, Index: #view_specifications_buildings_class#))\n                Span(#view_specifications_buildings_class#)\n            }\n        }\n        Div(row){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_land_authority)\n                }\n            }\n            Div(#col_right#){\n                SetVar(view_specifications_land_authority, AppParam(App: #app_id#, Name: lr_land_authority, Index: #view_specifications_land_authority#))\n                Span(#view_specifications_land_authority#)\n            }\n        }\n        Div(row){\n            Div(#col_left#){\n                Label(){\n                    LangRes(lr_price)\n                }\n            }\n            Div(#col_right#){\n                If(#view_price#>0){\n                    SetVar(view_price, Money(#view_price#))\n                    Span(#view_price# #custom_token_title#)\n                }.Else{\n                    Em(Class: fa fa-question-circle text-muted)\n                }\n            }\n        }\n        If(And(#depart3#==1,#depart_checks#!=1,#notific_recipient_member_id#==\"\")){\n            Div(list-group-item){\n                Div(row mt-sm){\n                    Div(#col_left# mt-sm){\n                        Label(){\n                            LangRes(lr_market_price)\n                        }\n                    }\n                    Div(#col_right#){\n                        If(#view_market_price#>0){\n                            SetVar(view_market_price, Money(#view_market_price#))\n                            Input(Name: MarketPrice, Value: #view_market_price#)\n                        }.Else{\n                            Input(Name: MarketPrice)\n                        }\n                    }\n                }\n                Div(row mt-sm){\n                    Div(#col_left# mt-sm){\n                        Label(){\n                            LangRes(lr_government_price)\n                        }\n                    }\n                    Div(#col_right#){\n                        If(#view_government_price#>0){\n                            SetVar(view_government_price, Money(#view_government_price#))\n                            Input(Name: GovernmentPrice, Value: #view_government_price#)\n                        }.Else{\n                            Input(Name: GovernmentPrice)\n                        }\n                    }\n                }\n                Div(row mt-sm){\n                    Div(#col_left#){\n                        Label(){\n                            LangRes(lr_taxes_and_bills)\n                        }\n                    }\n                    Div(#col_right#){\n                        Div(form-inline){\n                            If(#view_status_tax_receipt_and_bills#>0){\n                                RadioGroup(Name: TaxReceiptAndBills, Value: #view_status_tax_receipt_and_bills#, Source: src_issues, ValueColumn: id, NameColumn: name)\n                            }.Else{\n                                RadioGroup(Name: TaxReceiptAndBills, Value: 0, Source: src_issues, ValueColumn: id, NameColumn: name)\n                            }\n                        }\n                    }\n                }\n            }\n        }.Else{\n            Div(row){\n                Div(#col_left#){\n                    Label(){\n                        LangRes(lr_market_price)\n                    }\n                }\n                Div(#col_right#){\n                    If(#view_market_price#>0){\n                        SetVar(view_market_price, Money(#view_market_price#))\n                        Span(#view_market_price# #custom_token_title#)\n                    }.Else{\n                        Em(Class: fa fa-question-circle text-muted)\n                        If(And(#owner#==1,#depart3_requests#==1)){\n                            Button(Body: ($lr_additional_request$), Class: btn-link p0 ml-sm, Contract: LrDepartRequest, Params: \"ObjectId=#view_id#,DepartNumber=3\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\")\n                        }\n                    }\n                }\n            }\n            Div(row){\n                Div(#col_left#){\n                    Label(){\n                        LangRes(lr_government_price)\n                    }\n                }\n                Div(#col_right#){\n                    If(#view_government_price#>0){\n                        SetVar(view_government_price, Money(#view_government_price#))\n                        Span(#view_government_price# #custom_token_title#)\n                    }.Else{\n                        Em(Class: fa fa-question-circle text-muted)\n                        If(And(#owner#==1,#depart3_requests#==1)){\n                            Button(Body: ($lr_additional_request$), Class: btn-link p0 ml-sm, Contract: LrDepartRequest, Params: \"ObjectId=#view_id#,DepartNumber=3\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\")\n                        }\n                    }\n                }\n            }\n            Div(row){\n                Div(#col_left#){\n                    Label(){\n                        LangRes(lr_taxes_and_bills)\n                    }\n                }\n                Div(#col_right#){\n                    If(#view_status_tax_receipt_and_bills#==1){\n                        Em(Class: fa fa-check-circle text-success)\n                    }.ElseIf(#view_status_tax_receipt_and_bills#==2){\n                        Em(Class: fa fa-exclamation-circle text-danger)\n                    }.Else{\n                        Em(Class: fa fa-question-circle text-muted)\n                        If(And(#owner#==1,#depart3_requests#==1)){\n                            Button(Body: ($lr_additional_request$), Class: btn-link p0 ml-sm, Contract: LrDepartRequest, Params: \"ObjectId=#view_id#,DepartNumber=3\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\")\n                        }\n                    }\n                }\n            }\n        }\n        If(And(#depart2#==1,#depart_checks#!=1,#notific_recipient_member_id#==\"\")){\n            Div(list-group-item){\n                Div(row mt-sm){\n                    Div(#col_left#){\n                        Label(){\n                            LangRes(lr_legal_status)\n                        }\n                    }\n                    Div(#col_right#){\n                        Div(form-inline){\n                            If(#view_status_legal_status#>0){\n                                RadioGroup(Name: LegalStatus, Value: #view_status_legal_status#, Source: src_issues, ValueColumn: id, NameColumn: name)\n                            }.Else{\n                                RadioGroup(Name: LegalStatus, Value: 0, Source: src_issues, ValueColumn: id, NameColumn: name)\n                            }\n                        }\n                    }\n                }\n                Div(row mt-sm){\n                    Div(#col_left#){\n                        Label(){\n                            LangRes(lr_encumbrance_certificate)\n                        }\n                    }\n                    Div(#col_right#){\n                        Div(form-inline){\n                            If(#view_status_encumbrance_certificate#>0){\n                                RadioGroup(Name: EncumbranceCertificate, Value: #view_status_encumbrance_certificate#, Source: src_issues, ValueColumn: id, NameColumn: name)\n                            }.Else{\n                                RadioGroup(Name: EncumbranceCertificate, Value: 0, Source: src_issues, ValueColumn: id, NameColumn: name)\n                            }\n                        }\n                    }\n                }\n            }\n        }.Else{\n            Div(row){\n                Div(#col_left#){\n                    Label(){\n                        LangRes(lr_legal_status)\n                    }\n                }\n                Div(#col_right#){\n                    If(#view_status_legal_status#==1){\n                        Em(Class: fa fa-check-circle text-success)\n                    }.ElseIf(#view_status_legal_status#==2){\n                        Em(Class: fa fa-exclamation-circle text-danger)\n                    }.Else{\n                        Em(Class: fa fa-question-circle text-muted)\n                        If(And(#owner#==1,#depart2_requests#==1)){\n                            Button(Body: ($lr_additional_request$), Class: btn-link p0 ml-sm, Contract: LrDepartRequest, Params: \"ObjectId=#view_id#,DepartNumber=2\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\")\n                        }\n                    }\n                }\n            }\n            Div(row){\n                Div(#col_left#){\n                    Label(){\n                        LangRes(lr_encumbrance_certificate)\n                    }\n                }\n                Div(#col_right#){\n                    If(#view_status_encumbrance_certificate#==1){\n                        Em(Class: fa fa-check-circle text-success)\n                    }.ElseIf(#view_status_encumbrance_certificate#==2){\n                        Em(Class: fa fa-exclamation-circle text-danger)\n                    }.Else{\n                        Em(Class: fa fa-question-circle text-muted)\n                        If(And(#owner#==1,#depart2_requests#==1)){\n                            Button(Body: ($lr_additional_request$), Class: btn-link p0 ml-sm, Contract: LrDepartRequest, Params: \"ObjectId=#view_id#,DepartNumber=2\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\")\n                        }\n                    }\n                }\n            }\n        }\n        Div(list-group-item){\n            Div(row){\n                If(And(#notific_closed#==1,And(Or(#depart2#==1,#depart3#==1),#depart_checks#!=1,#view_step#==-1,#notific_recipient_member_id#==\"\")!=1)){\n                    Div(col-md-8 col-md-offset-2 text-center){\n                        Div(Class: h4, Body: Em(Class: fa fa-fw fa-check-circle text-muted) $lr_decision_made$)\n                    }\n                }.Else{\n                    Div(col-md-2 text-center){\n                        If(#view_step#>=0){\n                            SetVar(o_id, 0)\n                            DBFind(\"@1members\").Where({\"id\": #view_owner_id#, \"ecosystem\": #ecosystem_id#}).Vars(o)\n                            If(Or(#o_id#>0,#o_id#<0)){\n                                SetVar(owner_image_id, #o_image_id#)\n                                SetVar(owner_member_name, #o_member_name#)\n                            }.Else{\n                                SetVar(owner_image_id, 0)\n                                SetVar(owner_member_name, Address(#view_owner_id#))\n                            }\n                            LinkPage(Page: @1profile_view, PageParams: \"v_key_id=#view_owner_id#\"){\n                                If(#owner_image_id#>0){\n                                    Image(Src: Binary().ById(#owner_image_id#), Class: img-circle).Style(height: 30px; width: 30px; border: 1px solid #5A5D63;)\n                                }.Else{\n                                    Span(Em(Class: fa icon-user fa-2x))\n                                }\n                                Div(Class: short-name text-bold, Body: #owner_member_name#)\n                            }\n                            Div(Class: text-muted m0, Body: ($lr_owner$))\n                        }\n                    }\n                    Div(col-md-8 text-center){\n                        If(And(#notific_page_params_info_message#==1,And(Or(#depart2#==1,#depart3#==1),#depart_checks#!=1,#view_step#==-1,#notific_recipient_member_id#==\"\")!=1)){\n                            If(#notific_page_params_info_status#==\"success\"){\n                                Div(Class: h4, Body: Em(Class: fa fa-fw fa-check-circle text-success) #notific_notification_body#)\n                            }.Else{\n                                Div(Class: h4, Body: Em(Class: fa fa-fw fa-times text-danger) #notific_notification_body#)\n                            }\n                            If(#notific_closed#==0){\n                                Button(Body: LangRes(@1understood), Class: btn btn-primary mb, Contract: @1NotificationsClose, Params: \"notific_id=#notific_id#\", Page: #back_page#)\n                            }\n                        }.ElseIf(And(#view_step#==-1,#available_for_sale#!=1)){\n                            Div(Class: h4, Body: Em(Class: fa fa-fw fa-hourglass-o text-primary) $lr_awaiting_depart_checks$)\n                            If(Or(#depart2#==1,#depart3#==1)){\n                                Button(Body: LangRes(lr_save_results), Class: btn btn-primary mb, Contract: LrDepartChecks, Params: \"ObjectId=#view_id#,RoleId=#role_id#\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\")\n                            }\n                        }.ElseIf(And(#view_step#==-1,#available_for_sale#==1)){\n                            Div(Class: h4, Body: Em(Class: fa fa-fw fa-check-circle text-success) $lr_available_for_purchase$)\n                            If(#owner#!=1){\n                                Button(Body: LangRes(lr_purchase), Class: btn btn-success mb, Contract: LrPurchaseSteps, Params: \"ObjectId=#view_id#,Step=#view_step#\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\").Alert($lr_want_initiate_purchase$, $@1confirm_button$, $@1cancel$)\n                            }\n                        }.ElseIf(#view_step#==0){\n                            Div(Class: h4, Body: Em(Class: fa fa-fw fa-hourglass-1 text-primary) $lr_awaiting_owner_accept$)\n                            If(#owner#==1){\n                                Button(Body: LangRes(@1reject), Class: btn btn-danger mb, Contract: LrPurchaseSteps, Params: \"ObjectId=#view_id#,Step=#view_step#,Decision=reject\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\").Alert($lr_want_reject_purchase$, $@1confirm_button$, $@1cancel$)\n                                Button(Body: LangRes(@1accept), Class: btn btn-success mb, Contract: LrPurchaseSteps, Params: \"ObjectId=#view_id#,Step=#view_step#,Decision=accept\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\").Alert($lr_want_accept_purchase$, $@1confirm_button$, $@1cancel$)\n                            }\n                        }.ElseIf(#view_step#==1){\n                            Div(Class: h4, Body: Em(Class: fa fa-fw fa-hourglass-2 text-primary) $lr_awaiting_buyer_deposit$)\n                            If(Or(#owner#==1,#buyer#==1)){\n                                Button(Body: LangRes(@1cancel), Class: btn btn-danger mb, Contract: LrPurchaseSteps, Params: \"ObjectId=#view_id#,Step=#view_step#,Decision=cancel\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\").Alert($lr_want_cancel_deal$, $@1confirm_button$, $@1cancel$)\n                            }\n                            If(#buyer#==1){\n                                SetVar(bank_role_id, AppParam(App: #app_id#, Name: lr_bank_role))\n                                DBFind(\"@1roles_participants\").Where({\"role->id\": #bank_role_id#, \"deleted\": 0, \"ecosystem\": #ecosystem_id#}).Columns(\"id,member->member_id\").Vars(bank)\n                                SetVar(bank_account,Address(#bank_member_member_id#))\n                                If(#bank_id#>0){\n                                    Button(Body: LangRes(lr_deposit_money), Class: btn btn-success mb, Contract: LrPurchaseSteps, Params: \"ObjectId=#view_id#,Step=#view_step#,Decision=deposit\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\").CompositeContract(@1TokensSend, [{\"Amount\": #view_price#, \"Recipient\": \"#bank_account#\"}])\n                                }\n                            }\n                        }.ElseIf(#view_step#==2){\n                            Div(Class: h4, Body: Em(Class: fa fa-fw fa-hourglass-3 text-primary) $lr_awaiting_bank_transfer$)\n                            If(#bank#==1){\n                                Button(Body: LangRes(@1cancel), Class: btn btn-danger mb, Contract: LrPurchaseSteps, Params: \"ObjectId=#view_id#,RoleId=#role_id#,Step=#view_step#,Decision=cancel\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\").Alert($lr_want_cancel_deal$, $@1confirm_button$, $@1cancel$)\n                                Button(Body: LangRes(lr_finalize_deal), Class: btn btn-success mb, Contract: LrPurchaseSteps, Params: \"ObjectId=#view_id#,RoleId=#role_id#,Step=#view_step#,Decision=finalize\", Page: #back_page#, PageParams: \"sales_list=#sales_list#\").CompositeContract(@1TokensSend, [{\"Amount\": #view_price#, \"Recipient\": \"#view_owner_id#\"}])\n                            }\n                        }\n                    }\n                    Div(col-md-2 text-center){\n                        If(#view_step#>=0){\n                            SetVar(b_id, 0)\n                            DBFind(\"@1members\").Where({\"id\": #view_buyer_id#, \"ecosystem\": #ecosystem_id#}).Vars(b)\n                            If(Or(#b_id#>0,#b_id#<0)){\n                                SetVar(buyer_image_id, #b_image_id#)\n                                SetVar(buyer_member_name, #b_member_name#)\n                            }.Else{\n                                SetVar(buyer_, 0)\n                                SetVar(buyer_member_name, Address(#view_buyer_id#))\n                            }\n                            LinkPage(Page: @1profile_view, PageParams: \"v_key_id=#view_buyer_id#\"){\n                                If(#buyer_image_id#>0){\n                                    Image(Src: Binary().ById(#buyer_image_id#), Class: img-circle).Style(height: 30px; width: 30px; border: 1px solid #5A5D63;)\n                                }.Else{\n                                    Span(Em(Class: fa icon-user fa-2x))\n                                }\n                                Div(Class: short-name text-bold, Body: #buyer_member_name#)\n                            }\n                            Div(Class: text-muted m0, Body: ($lr_owner$))\n                        }\n                    }\n                }\n            }\n        }\n        Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: #back_page#, PageParams: \"sales_list=#sales_list#\")\n    }.Style(\n        .short-name {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n        }\n    )\n}.Else{\n    Form(){\n        Div(alert alert-danger text-center){\n            LangRes(@1attention)\n        }\n        Button(Body: LangRes(@1back), Class: btn btn-default pull-right, Page: lr_list)\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "LrAdd",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract LrAdd {\n    data {\n        Coords string\n        LandUse int\n        LandType int\n        LandAuthority int\n        BuildingsUseClass int\n        RegistrationDate string\n        Price money\n    }\n    \n    conditions {\n        $app_id = DBFind(\"@1applications\").Where({ecosystem: $ecosystem_id, name: \"Land registry\"}).One(\"id\")\n        if $app_id > 0 {\n            if AppParam(Int($app_id), \"lr_depart2_role\", $ecosystem_id) == 0 || AppParam(Int($app_id), \"lr_depart3_role\", $ecosystem_id) == 0 || AppParam(Int($app_id), \"lr_bank_role\", $ecosystem_id) == 0 || AppParam(Int($app_id), \"lr_admin_role\", $ecosystem_id) == 0 {\n                info LangRes(\"lr_all_roles_needed\", \"en\")\n            }\n        } else {\n            warning LangRes(\"@1app_not_found\", \"en\")\n        }\n    }\n    \n    action {\n        var coords map coordsAddress, area string unixRegDate int\n        coords = JSONToMap($Coords)\n        coordsAddress = coords[\"address\"]\n        area = Sprintf(\"%.0f\", coords[\"area\"])\n        unixRegDate = UnixDateTime(Sprintf(\"%s %s\", $RegistrationDate, \"00:00:00\"))\n\n        var m specifications map objectId int\n        specifications[\"address\"] = coordsAddress\n        specifications[\"area\"] = area\n        specifications[\"buildings_class\"] = $BuildingsUseClass\n        specifications[\"map_coords\"] = $Coords\n        specifications[\"land_use\"] = $LandUse\n        specifications[\"land_type\"] = $LandType\n        specifications[\"land_authority\"] = $LandAuthority\n\n        m[\"owner_id\"] = $key_id\n        m[\"deleted\"] = 0\n        m[\"date_created\"] = $block_time\n        m[\"registration_date\"] = unixRegDate\n        m[\"modification_date\"] = $block_time\n        m[\"price\"] = $Price\n        m[\"specifications\"] = specifications\n        m[\"buyer_id\"] = $key_id\n        m[\"step\"] = \"-1\"\n\n        objectId = DBInsert(\"land_registry\", m)\n\n        // notifications to all departments\n        var depart_map depart2_params depart3_params map\n        depart2_params[\"object_id\"] = objectId\n        depart2_params[\"depart2_requests\"] = 1\n\n        depart_map[\"sender\"] = 1\n        depart_map[\"rid\"] = Int(AppParam(Int($app_id), \"lr_depart2_role\", $ecosystem_id))\n        depart_map[\"page_name\"] = \"lr_view\"\n        depart_map[\"text_header\"] = LangRes(\"lr_new_object\", \"en\")\n        depart_map[\"text_body\"] = LangRes(\"lr_need_processing\", \"en\")\n        depart_map[\"icon_name\"] = \"fa fa-bell-o\"\n        depart_map[\"closure_type\"] = 1\n        depart_map[\"popup\"] = \"true\"\n        depart_map[\"params_map\"] = depart2_params\n\n        CallContract(\"@1NotificationsSend\", depart_map)\n\n        depart3_params[\"object_id\"] = objectId\n        depart3_params[\"depart3_requests\"] = 1\n\n        depart_map[\"rid\"] = Int(AppParam(Int($app_id), \"lr_depart3_role\", $ecosystem_id))\n        depart_map[\"params_map\"] = depart3_params\n        \n        CallContract(\"@1NotificationsSend\", depart_map)\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "LrDepartChecks",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract LrDepartChecks {\n    data {\n        ObjectId int\n        LegalStatus int \"optional\"\n        EncumbranceCertificate int \"optional\"\n        TaxReceiptAndBills int \"optional\"\n        GovernmentPrice money \"optional\"\n        MarketPrice money \"optional\"\n        RoleId int\n    }\n\n    conditions {\n        $app_id = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Land registry\"}).One(\"id\")\n        $depart2_role = Int(AppParam(Int($app_id), \"lr_depart2_role\", $ecosystem_id))\n        $depart3_role = Int(AppParam(Int($app_id), \"lr_depart3_role\", $ecosystem_id))\n\n        if $app_id > 0 {\n            if $depart2_role == 0 || $depart3_role == 0 || AppParam(Int($app_id), \"lr_admin_role\", $ecosystem_id) == 0 || AppParam(Int($app_id), \"lr_bank_role\", $ecosystem_id) == 0 {\n                info LangRes(\"lr_all_roles_needed\", \"en\")\n            }\n        } else {\n            warning LangRes(\"@1app_not_found\", \"en\")\n        }\n    }\n    \n    action {\n        var object status m map\n\n        if $RoleId == $depart2_role {\n            object = DBFind(\"land_registry\").WhereId($ObjectId).Row()\n            if object[\"status\"] {\n                var depart3_status map\n                depart3_status = JSONDecode(object[\"status\"])\n                if depart3_status[\"tax_receipt_and_bills\"] {\n                    status[\"tax_receipt_and_bills\"] = depart3_status[\"tax_receipt_and_bills\"]\n                }\n            }\n            status[\"legal_status\"] = $LegalStatus\n            status[\"encumbrance_certificate\"] = $EncumbranceCertificate\n            m[\"modification_date\"] = $block_time\n            m[\"status\"] = status\n            DBUpdate(\"land_registry\", $ObjectId, m)\n            \n            // closing all opened role notifications\n            var opened map i int\n            opened = DBFind(\"@1notifications\").Where({\"recipient->role_id\": $depart2_role, \"page_params->object_id\": $ObjectId, \"closed\": 0, \"ecosystem\": $ecosystem_id})\n\n            while i < Len(opened){\n                var current map current_id int\n                current = opened[i]\n                current_id = Int(current[\"id\"])\n                @1NotificationsProcess(\"notific_id\", current_id)\n                @1NotificationsClose(\"notific_id\", current_id)\n                i = i + 1\n            }\n        }\n        if $RoleId == $depart3_role {\n            object = DBFind(\"land_registry\").WhereId($ObjectId).Row()\n            if object[\"status\"] {\n                var depart2_status map\n                depart2_status = JSONDecode(object[\"status\"])\n                if depart2_status[\"legal_status\"] {\n                    status[\"legal_status\"] = depart2_status[\"legal_status\"]\n                }\n                if depart2_status[\"encumbrance_certificate\"] {\n                    status[\"encumbrance_certificate\"] = depart2_status[\"encumbrance_certificate\"]\n                }\n            }\n\n            status[\"tax_receipt_and_bills\"] = $TaxReceiptAndBills\n            m[\"government_price\"] = $GovernmentPrice\n            m[\"market_price\"] = $MarketPrice\n            m[\"modification_date\"] = $block_time\n            m[\"status\"] = status\n            DBUpdate(\"land_registry\", $ObjectId, m)\n                        \n            // closing all opened role notifications\n            var opened map i int\n            opened = DBFind(\"@1notifications\").Where({\"recipient->role_id\": $depart3_role, \"page_params->object_id\": $ObjectId, \"closed\": 0, \"ecosystem\": $ecosystem_id})\n\n            while i < Len(opened){\n                var current map current_id int\n                current = opened[i]\n                current_id = Int(current[\"id\"])\n                @1NotificationsProcess(\"notific_id\", current_id)\n                @1NotificationsClose(\"notific_id\", current_id)\n                i = i + 1\n            }\n        }\n\n        // checking if the object is ready for sale\n        object = DBFind(\"land_registry\").WhereId($ObjectId).Row()\n        if Money(object[\"price\"]) > 0 && Money(object[\"market_price\"]) > 0 && Money(object[\"government_price\"]) > 0 && object[\"deleted\"] != 1 {\n            var status_map map\n            status_map = JSONDecode(object[\"status\"])\n            if status_map[\"legal_status\"] == 1 && status_map[\"encumbrance_certificate\"] == 1 && status_map[\"tax_receipt_and_bills\"] == 1 {\n                \n                // notification to the object owner\n                var n params map\n                n[\"sender\"] = 1\n                n[\"page_name\"] = \"lr_view\"\n                n[\"icon_name\"] = \"fa fa-bell-o\"\n                n[\"popup\"] = \"true\"\n                n[\"member_id\"] = object[\"owner_id\"]\n                n[\"text_header\"] = LangRes(\"lr_object_status\", \"en\")\n                n[\"text_body\"] = LangRes(\"lr_checks_successfull\", \"en\")\n                params[\"object_id\"] = $ObjectId\n                params[\"info_message\"] = 1\n                params[\"info_status\"] = \"success\"\n                n[\"params_map\"] = params\n                CallContract(\"@1NotificationsSend\", n)\n            }\n        }\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "LrDepartRequest",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract LrDepartRequest {\n    data {\n        ObjectId int\n        DepartNumber int\n    }\n\n    conditions {\n        $app_id = DBFind(\"@1applications\").Where({ecosystem: $ecosystem_id, name: \"Land registry\"}).One(\"id\")\n        var requests_flag int\n        if $DepartNumber == 2 {\n            requests_flag = DBFind(\"@1notifications\").Where({\"ecosystem\": $ecosystem_id, \"page_params->object_id\": $ObjectId, \"page_params->depart2_requests\": 2}).One(\"id\")\n            if requests_flag {\n                warning LangRes(\"lr_requests_limit_reached\", \"en\")\n            }\n        } elif $DepartNumber == 3 {\n            requests_flag = DBFind(\"@1notifications\").Where({\"ecosystem\": $ecosystem_id, \"page_params->object_id\": $ObjectId, \"page_params->depart3_requests\": 2}).One(\"id\")\n            if requests_flag {\n                warning LangRes(\"lr_requests_limit_reached\", \"en\")\n            }\n        }\n    }\n    \n    action {\n        var request params map\n        request[\"sender\"] = 1\n        request[\"page_name\"] = \"lr_view\"\n        request[\"text_header\"] = LangRes(\"lr_additional_request\", \"en\")\n        request[\"text_body\"] = LangRes(\"lr_need_processing\", \"en\")\n        request[\"icon_name\"] = \"fa fa-bell-o\"\n        request[\"closure_type\"] = 1\n        request[\"popup\"] = \"true\"\n        params[\"object_id\"] = $ObjectId\n        \n        if $DepartNumber == 2 {\n            request[\"rid\"] = Int(AppParam(Int($app_id), \"lr_depart2_role\", $ecosystem_id))\n            params[\"depart2_requests\"] = 2\n            request[\"params_map\"] = params\n        } elif $DepartNumber == 3 {\n            request[\"rid\"] = Int(AppParam(Int($app_id), \"lr_depart3_role\", $ecosystem_id))\n            params[\"depart3_requests\"] = 2\n            request[\"params_map\"] = params\n        }\n\n        CallContract(\"@1NotificationsSend\", request)\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "LrEdit",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract LrEdit {\n    data {\n        ObjectId int\n        LandUse int \"optional\"\n        LandType int \"optional\"\n        LandAuthority int \"optional\"\n        BuildingsUseClass int \"optional\"\n        RegistrationDate string \"optional\"\n        Price money \"optional\"\n        DeleteObject int \"optional\"\n        RoleId int\n    }\n\n    func log(property, value string) {\n        var history map\n        if property == \"land_use\" || property ==  \"land_type\" || property ==  \"land_authority\" || property ==  \"buildings_class\" {\n            if Int(value) != Int($old_specifications[property]) {\n                history[\"old_value\"] = Int($old_specifications[property])\n                history[\"object_id\"] = $ObjectId\n                history[\"attribute_name\"] = property\n                history[\"new_value\"] = value\n                history[\"member_id\"] = $key_id\n                history[\"date\"] = $block_time\n                DBInsert(\"land_registry_history\", history)\n            }\n        } elif value != $object[property] {\n            history[\"old_value\"] = Str($object[property])\n            history[\"object_id\"] = $ObjectId\n            history[\"attribute_name\"] = property\n            history[\"new_value\"] = value\n            history[\"member_id\"] = $key_id\n            history[\"date\"] = $block_time\n            DBInsert(\"land_registry_history\", history)\n        }\n    }\n\n    conditions {\n        $app_id = DBFind(\"@1applications\").Where({ecosystem: $ecosystem_id, name: \"Land registry\"}).One(\"id\")\n        $object = DBFind(\"land_registry\").WhereId($ObjectId).Row()\n        $admin_role = Int(AppParam(Int($app_id), \"lr_admin_role\", $ecosystem_id))\n\n        if $app_id > 0 {\n            if $admin_role == 0 || AppParam(Int($app_id), \"lr_bank_role\", $ecosystem_id) == 0 || AppParam(Int($app_id), \"lr_depart2_role\", $ecosystem_id) == 0 || AppParam(Int($app_id), \"lr_depart3_role\", $ecosystem_id) == 0 {\n                info LangRes(\"lr_all_roles_needed\", \"en\")\n            }\n        } else {\n            warning LangRes(\"@1app_not_found\", \"en\")\n        }\n    }\n    \n    action {\n        if $DeleteObject != 1 {\n            if $RoleId == $admin_role {\n                var specifications m map unixRegDate int\n                unixRegDate = UnixDateTime(Sprintf(\"%s %s\", $RegistrationDate, \"00:00:00\"))\n                $old_specifications = JSONDecode($object[\"specifications\"])\n\n                specifications[\"address\"] = $old_specifications[\"address\"]\n                specifications[\"area\"] = $old_specifications[\"area\"]\n                specifications[\"map_coords\"] = $old_specifications[\"map_coords\"]\n                specifications[\"land_use\"] = $LandUse\n                specifications[\"land_type\"] = $LandType\n                specifications[\"land_authority\"] = $LandAuthority\n                specifications[\"buildings_class\"] = $BuildingsUseClass\n\n                m[\"registration_date\"] = unixRegDate\n                m[\"specifications\"] = specifications\n                DBUpdate(\"land_registry\", $ObjectId, m)\n\n                log(\"land_use\", Str($LandUse))\n                log(\"land_type\", Str($LandType))\n                log(\"land_authority\", Str($LandAuthority))\n                log(\"buildings_class\", Str($BuildingsUseClass))\n                log(\"registration_date\", Str(unixRegDate))\n            }\n            if $object[\"owner_id\"] == $key_id {\n                DBUpdate(\"land_registry\", $ObjectId, {\"price\": $Price})\n                log(\"price\", Str($Price))\n            }\n        } else {\n            if $object[\"owner_id\"] == $key_id || $RoleId == $admin_role {\n                DBUpdate(\"land_registry\", $ObjectId, {\"deleted\": 1})\n                log(\"deleted\", Str($DeleteObject))\n            }\n        }\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "LrPurchaseSteps",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract LrPurchaseSteps {\n    data {\n        ObjectId int\n        Step int\n        Decision string \"optional\"\n        RoleId int \"optional\"\n    }\n\n    conditions {\n        $app_id = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Land registry\"}).One(\"id\")\n        $object = DBFind(\"land_registry\").WhereId($ObjectId).Row()\n        $bank_role = Int(AppParam(Int($app_id), \"lr_bank_role\", $ecosystem_id))\n        \n        var bank_id int\n        bank_id = DBFind(\"@1roles_participants\").Where({\"role->id\": $bank_role, \"deleted\": 0, \"ecosystem\": $ecosystem_id}).One(\"member->member_id\")\n        if !bank_id {\n            warning LangRes(\"lr_bank_account_not_found\", \"en\")\n        }\n    }\n\n    action {\n        var owner buyer int\n        owner = $object[\"owner_id\"]\n        buyer = $object[\"buyer_id\"]\n\n        var m params map\n        m[\"sender\"] = 1\n        m[\"text_header\"] = LangRes(\"lr_deal_status\", \"en\")\n        m[\"text_body\"] = LangRes(\"lr_need_processing\", \"en\")\n        m[\"page_name\"] = \"lr_view\"\n        m[\"icon_name\"] = \"fa fa-bell-o\"\n        m[\"popup\"] = \"true\"\n        params[\"object_id\"] = $ObjectId\n\n        if $Step == -1 {\n            DBUpdate(\"land_registry\", $ObjectId, {\"buyer_id\": $key_id, \"step\": 0})\n            \n            // notification to the object owner\n            m[\"member_id\"] = owner\n            m[\"text_header\"] = LangRes(\"lr_new_offer\", \"en\")\n            m[\"params_map\"] = params\n            CallContract(\"@1NotificationsSend\", m)\n\n        } elif $Step == 0 && $key_id == Int(owner) {\n            if $Decision == \"accept\" {\n                DBUpdate(\"land_registry\", $ObjectId, {\"step\": 1})\n                m[\"text_body\"] = LangRes(\"lr_purchase_accepted\", \"en\")\n            } elif $Decision == \"reject\" {\n                DBUpdate(\"land_registry\", $ObjectId, {\"buyer_id\": owner, \"step\": \"-1\"})\n                m[\"text_body\"] = LangRes(\"lr_purchase_rejected\", \"en\")\n                params[\"info_message\"] = 1\n                params[\"info_status\"] = \"fail\"\n            }\n            \n            // notification to the object buyer\n            m[\"member_id\"] = buyer\n            m[\"params_map\"] = params\n            CallContract(\"@1NotificationsSend\", m)\n\n        } elif $Step == 1 && $key_id == Int(buyer) {\n            if $Decision == \"deposit\" {\n                DBUpdate(\"land_registry\", $ObjectId, {\"step\": 2})\n\n                // notification to the land bank\n                m[\"rid\"] = Int(AppParam(Int($app_id), \"lr_bank_role\", $ecosystem_id))\n                m[\"text_header\"] = LangRes(\"lr_new_object\", \"en\")\n                m[\"closure_type\"] = 1\n                m[\"params_map\"] = params\n                CallContract(\"@1NotificationsSend\", m)\n\n                // notification to the object owner\n                var n map\n                n[\"sender\"] = 1\n                n[\"page_name\"] = \"lr_view\"\n                n[\"icon_name\"] = \"fa fa-bell-o\"\n                n[\"popup\"] = \"true\"\n                n[\"member_id\"] = owner\n                n[\"text_header\"] = LangRes(\"lr_deal_status\", \"en\")\n                n[\"text_body\"] = LangRes(\"lr_buyer_made_deposit\", \"en\")\n                params[\"info_message\"] = 1\n                params[\"info_status\"] = \"success\"\n                n[\"params_map\"] = params\n                CallContract(\"@1NotificationsSend\", n)\n\n            } elif $Decision == \"cancel\" {\n                DBUpdate(\"land_registry\", $ObjectId, {\"buyer_id\": owner, \"step\": \"-1\"})\n\n                if $key_id == Int(owner) {\n                    // notification to the object buyer\n                    m[\"member_id\"] = buyer\n                    m[\"text_body\"] = LangRes(\"lr_owner_cancelled_purchase\", \"en\")\n                } else {\n                    // notification to the object owner\n                    m[\"member_id\"] = owner\n                    m[\"text_body\"] = LangRes(\"lr_buyer_cancelled_purchase\", \"en\")\n                }\n                \n                params[\"info_message\"] = 1\n                params[\"info_status\"] = \"fail\"\n                m[\"params_map\"] = params\n                CallContract(\"@1NotificationsSend\", m)\n            }\n\n        } elif $Step == 2 && $RoleId == $bank_role {\n            var n status_map map\n            status_map[\"legal_status\"] = 0\n            status_map[\"encumbrance_certificate\"] = 0\n            status_map[\"tax_receipt_and_bills\"] = 0\n\n            if $Decision == \"finalize\" {\n                DBUpdate(\"land_registry\", $ObjectId, {\"owner_id\": buyer, \"buyer_id\": buyer, \"step\": \"-1\", \"status\": status_map})\n                params[\"info_message\"] = 1\n                params[\"info_status\"] = \"success\"\n                m[\"text_body\"] = LangRes(\"lr_deal_successful\", \"en\")\n                n[\"text_body\"] = LangRes(\"lr_deal_successful\", \"en\")\n            } elif $Decision == \"cancel\" {\n                DBUpdate(\"land_registry\", $ObjectId, {\"owner_id\": owner, \"buyer_id\": owner, \"step\": \"-1\", \"status\": status_map})\n                params[\"info_message\"] = 1\n                params[\"info_status\"] = \"fail\"\n                m[\"text_body\"] = LangRes(\"lr_deal_cancelled_by_bank\", \"en\")\n                n[\"text_body\"] = LangRes(\"lr_deal_cancelled_by_bank\", \"en\")\n            }\n\n            // notification to the old object owner\n            m[\"member_id\"] = owner\n            m[\"params_map\"] = params\n            CallContract(\"@1NotificationsSend\", m)\n\n            // notification to the new object owner\n            n[\"sender\"] = 1\n            n[\"page_name\"] = \"lr_view\"\n            n[\"icon_name\"] = \"fa fa-bell-o\"\n            n[\"popup\"] = \"true\"\n            n[\"member_id\"] = buyer\n            n[\"text_header\"] = LangRes(\"lr_deal_status\", \"en\")\n            n[\"params_map\"] = params\n            CallContract(\"@1NotificationsSend\", n)\n        }\n\n        // closing all opened notifications\n        var opened map i int\n        if $Step == 2 && $RoleId == $bank_role {\n            opened = DBFind(\"@1notifications\").Where({\"recipient->role_id\": $bank_role, \"page_params->object_id\": $ObjectId, \"closed\": 0, \"ecosystem\": $ecosystem_id})\n        } else {\n            opened = DBFind(\"@1notifications\").Where({\"recipient->member_id\": $key_id, \"page_params->object_id\": $ObjectId, \"closed\": 0, \"ecosystem\": $ecosystem_id})\n        }\n\n        while i < Len(opened){\n            var current map current_id int\n            current = opened[i]\n            current_id = Int(current[\"id\"])\n            if $Step == 2 && $RoleId == $bank_role {\n                @1NotificationsProcess(\"notific_id\", current_id)\n            }\n            @1NotificationsClose(\"notific_id\", current_id)\n            i = i + 1\n        }\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "LrSettings",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract LrSettings {\n    data {\n        RoleAdmin int\n        RoleBank int\n        RoleDepart2 int\n        RoleDepart3 int\n    }\n\n    conditions{\n        AdminCondition()\n    }\n\n    func updateParam(name string, id int) {\n        if id > 0 {\n            var param paramsNew map app_id int\n            app_id = DBFind(\"@1applications\").Where({ecosystem: $ecosystem_id, name: \"Land registry\"}).One(\"id\")\n            if app_id > 0 {\n                param = DBFind(\"@1app_params\").Where({ecosystem: $ecosystem_id, app_id: app_id, name: name}).Row()\n                paramsNew[\"Value\"] = Str(id)\n                if param {\n                    paramsNew[\"Id\"] = Int(param[\"id\"])\n                    paramsNew[\"Conditions\"] = param[\"conditions\"]\n                    CallContract(\"@1EditAppParam\", paramsNew)\n                } else {\n                    paramsNew[\"App\"] = Str(app_id)\n                    paramsNew[\"Name\"] = name\n                    paramsNew[\"Conditions\"] = \"ContractConditions(\\\"AdminCondition\\\")\"\n                    CallContract(\"@1NewAppParam\", paramsNew)\n                }\n            } else {\n                warning LangRes(\"@1app_not_found\", \"en\")\n            }\n        }\n    }\n\n    action {\n        updateParam(\"lr_admin_role\", $RoleAdmin)\n        updateParam(\"lr_bank_role\", $RoleBank)\n        updateParam(\"lr_depart2_role\", $RoleDepart2)\n        updateParam(\"lr_depart3_role\", $RoleDepart3)\n    }\n}",
            "Type": "contracts"
        }
    ]
}