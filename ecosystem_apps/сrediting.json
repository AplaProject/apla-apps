{
    "name": "Сrediting",
    "conditions": "ContractConditions(\"AdminCondition\")",
    "data": [
        {
            "Name": "admin_menu",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "MenuItem(Title:$crediting_settings$, Page:crediting_settings, Icon: \"icon-wrench\")",
            "Type": "menu"
        },
        {
            "Name": "default_menu",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "MenuItem(Title: \"$crediting$\", Page: crediting_list, Icon: \"icon-calculator\")",
            "Type": "menu"
        },
        {
            "Name": "crediting",
            "Trans": "{\"en\": \"Crediting\", \"ru\": \"Кредитование\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_add",
            "Trans": "{\"en\": \"Add a request\", \"ru\": \"Добавить заявку\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_auction",
            "Trans": "{\"en\": \"Auction\", \"ru\": \"Аукцион\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_blocked",
            "Trans": "{\"en\": \"Blocked\", \"ru\": \"Заблокировано\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_borrower",
            "Trans": "{\"en\": \"Borrower\", \"ru\": \"Заемщик\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_desc",
            "Trans": "{\"en\": \"This page is used to manage your crediting\", \"ru\": \"Эта страница используется для управления вашим кредитованием\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_edit",
            "Trans": "{\"en\": \"Edit a request\", \"ru\": \"Редактировать заявку\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_finished",
            "Trans": "{\"en\": \"Finished\", \"ru\": \"Завершено\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_rejected",
            "Trans": "{\"en\": \"Rejected\", \"ru\": \"Отклонено\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_removed",
            "Trans": "{\"en\": \"Removed\", \"ru\": \"Удалено\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_settings",
            "Trans": "{\"en\": \"Crediting settings\", \"ru\": \"Настройки Кридитования\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_settings_description",
            "Trans": "{\"en\": \"Correspondence of Crediting application roles to ecosystem roles\", \"ru\": \"Соответствие ролей приложения Кредитования ролям экосистемы\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_signing",
            "Trans": "{\"en\": \"Signing\", \"ru\": \"Подписание\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_term",
            "Trans": "{\"en\": \"Loan term\", \"ru\": \"Срок займа\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_waiting",
            "Trans": "{\"en\": \"Waiting\", \"ru\": \"Ожидание\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_offers",
            "Columns": "[\r\n    {\r\n        \"name\":\"creditor\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"rate\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"request_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "crediting_requests",
            "Columns": "[\r\n    {\r\n        \"name\":\"amount\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"money\"\r\n    },\r\n    {\r\n        \"name\":\"borrower\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"creditor\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"date_created\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_ended\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"date_started\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"deleted\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"rate\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"sign_borrower\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"sign_creditor\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"status\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"term\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    },\r\n    {\r\n        \"name\":\"description\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"text\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "crediting_subs",
            "Columns": "[\r\n    {\r\n        \"name\":\"creditor\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"varchar\"\r\n    },\r\n    {\r\n        \"name\":\"deleted\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    },\r\n    {\r\n        \"name\":\"request_id\",\r\n        \"conditions\":\"true\",\r\n        \"type\":\"number\"\r\n    }\r\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "crediting_admin_role",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "crediting_borrower_role",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "crediting_commission_wallet",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "crediting_creditor_role",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "crediting_add",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(@1applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Сrediting\"}).Columns(\"name,id\").Vars(application)\r\n\r\nIf(#Id#>0){\r\n    DBFind(crediting_requests).Where({\"id\": #Id#}).Vars(request)\r\n}\r\n\r\nForm(){\r\n    Div(list-group-item){\r\n        Div(row){\r\n            Div(col-md-3 mt-sm text-right){\r\n                Label(){\r\n                    LangRes(crediting_borrower)\r\n                    Span(*,text-danger)\r\n                }\r\n            }\r\n            Div(col-md-9 text-left){\r\n                SetVar(borrower, Address(#key_id#))\r\n                Input(Name: Borrower, Disabled: 1, Value: #borrower#)\r\n            }\r\n        }\r\n        Div(row mt-sm){\r\n            Div(col-md-3 mt-sm text-right){\r\n                Label(){\r\n                    LangRes(@1amount)\r\n                    Span(*,text-danger)\r\n                }\r\n            }\r\n            Div(col-md-9 text-left){\r\n                If(#request_amount#){\r\n                    SetVar(request_amount, Money(#request_amount#))\r\n                    Input(Name: Amount, Type: number, Value: #request_amount#)\r\n                }.Else{\r\n                    Input(Name: Amount, Type: number)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(list-group-item){\r\n        Div(row){\r\n            Div(col-md-3 mt text-right){\r\n                Label(){\r\n                    LangRes(crediting_term)\r\n                    Span(*,text-danger)\r\n                }\r\n            }\r\n            Div(col-md-9 text-left){\r\n                AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: type_term, Source: src_term)\r\n                If(#request_term#){\r\n                    RadioGroup(Name: Term, Source: src_term, NameColumn: name, ValueColumn: name, Value: #request_term#)\r\n                }.Else{\r\n                    RadioGroup(Name: Term, Source: src_term, NameColumn: name, ValueColumn: name)\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n    Div(list-group-item){\r\n        Div(row){\r\n            Div(col-md-3 mt-sm text-right){\r\n                Label(){\r\n                    LangRes(@1date_start)\r\n                    Span(*,text-danger)\r\n                }\r\n            }\r\n            Div(col-md-9 text-left){\r\n                Div(row){\r\n                    If(#request_date_started#){\r\n                        SetVar(st_d, DateTime(DateTime: #request_date_started#, Format: \"YYYY-MM-DD\"))\r\n                        SetVar(st_t, DateTime(DateTime: #request_date_started#, Format: \"HH:MI\"))\r\n                        Div(col-md-6){\r\n                            Input(Name: StartDate, Type: date, Value: #st_d#)\r\n                        }\r\n                        Div(col-md-6){\r\n                            Input(Name: StartTime, Type: time, Value: #st_t#)\r\n                        }\r\n                    }.Else{\r\n                        Div(col-md-6){\r\n                            Input(Name: StartDate, Type: date)\r\n                        }\r\n                        Div(col-md-6){\r\n                            Input(Name: StartTime, Type: time, Value: \"00:00\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        Div(row mt-sm){\r\n            Div(col-md-3 mt-sm text-right){\r\n                Label(){\r\n                    LangRes(@1date_end)\r\n                    Span(*,text-danger)\r\n                }\r\n            }\r\n            Div(col-md-9 text-left){\r\n                Div(row){\r\n                    If(#request_date_ended#){\r\n                        SetVar(ed_d, DateTime(DateTime: #request_date_ended#, Format: \"YYYY-MM-DD\"))\r\n                        SetVar(ed_t, DateTime(DateTime: #request_date_ended#, Format: \"HH:MI\"))\r\n                        Div(col-md-6){\r\n                            Input(Name: EndDate, Type: date, Value: #ed_d#)\r\n                        }\r\n                        Div(col-md-6){\r\n                            Input(Name: EndTime, Type: time, Value: #ed_t#)\r\n                        }\r\n                    }.Else{\r\n                        Div(col-md-6){\r\n                            Input(Name: EndDate, Type: date)\r\n                        }\r\n                        Div(col-md-6){\r\n                            Input(Name: EndTime, Type: time, Value: \"00:00\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Div(list-group-item){\r\n        Div(row){\r\n            Div(col-md-3 mt-sm text-right){\r\n                Label(){\r\n                    LangRes(@1description)\r\n                }\r\n            }\r\n            Div(col-md-9 text-left){\r\n                If(#request_description#){\r\n                    Input(Name: Description, Type: textarea, Value: #request_description#).Style(resize:vertical)\r\n                }.Else{\r\n                    Input(Name: Description, Type: textarea).Style(resize:vertical)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    If(#Id#>0){\r\n        Button(Body: LangRes(@1edit), Class: btn btn-primary pull-right mt, Page: crediting_list, Contract: CreditingAdd, Params: \"Id=#Id#\")\r\n    }.Else{\r\n        Button(Body: LangRes(@1create), Class: btn btn-primary pull-right mt, Page: crediting_list, Contract: CreditingAdd)\r\n    }\r\n    Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: crediting_list)\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "crediting_filter",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Data(type_status, \"value,name\"){\r\n    0,$@1document$\r\n    1,$@1contract_run$\r\n    2,$@1document$\r\n    3,$@1contract_run$\r\n    4,$@1contract_run$\r\n}\r\n\r\nForm(){\r\n    Div(row){\r\n        Div(col-sm-12){\r\n            Label(Class: m0){\r\n                Span(Body: LangRes(@1catalog_ecosystems_payment))\r\n            }\r\n            RadioGroup(Name: Filter, Source: type_status, NameColumn: name, ValueColumn: value)\r\n        }\r\n    }\r\n    Button(Body: LangRes(@1filter), Class: btn btn-primary pull-right, Page: crediting_list, PageParams: \"page_par=Val(Filter),search=#search#\")\r\n    Button(Body: LangRes(@1clear), Class: btn btn-default pull-right, Page: crediting_list, PageParams: \"page_par=NULL,search=#search#\")\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "crediting_list",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "SetVar(this_page, crediting_list).(this_table, crediting_requests)\r\nInclude(@1pager_header)\r\n\r\nSetTitle(\"$crediting$\")\r\nSpan(Class: text-muted h5 m0 mb ml-lg, Body: Span(Class: ml-sm, Body: \"$crediting_desc$\"))\r\nAddToolButton(Title: $@1create$, Page: crediting_add, Icon: icon-plus).Popup(60, $crediting_add$)\r\n\r\nIf(#page_par#==0){\r\n    SetVar(type_filter, {\"status\":0})\r\n}.ElseIf(#page_par#==1){\r\n    SetVar(type_filter, {\"status\":1})\r\n}.ElseIf(#page_par#==2){\r\n    SetVar(type_filter, {\"status\":2})\r\n}.ElseIf(#page_par#==3){\r\n    SetVar(type_filter, {\"status\":3})\r\n}.ElseIf(#page_par#==4){\r\n    SetVar(type_filter, {\"status\":4})\r\n}\r\n\r\nIf(#search#){\r\n    SetVar(where, {\"$and\": [#type_filter#, {\"borrower\": {\"$ilike\": \"#search#\"}}]})\r\n}.Else{\r\n    SetVar(where, {\"$and\": [#type_filter#]})\r\n}\r\n\r\nDiv(mr-lg text-right){\r\n    Button(Page: crediting_filter, Class: btn bg-gray-lighter mr-sm, PageParams: \"page_par=#page_par#,search=#search#,current_page=#current_page#\", Body: Em(Class: fa fa-filter) $@1filter$).Popup(Header: $@1filter$, Width: \"30\")\r\n    If(#type_filter#){\r\n        Button(Page: #this_page#, PageParams: \"page_par=NULL,search=#search#\", Class: btn bg-gray-lighter mr-sm, Body: Em(Class: fa fa-close))\r\n    }\r\n}.Style(margin-top: -28px; z-index: 1001;)\r\n\r\nDiv(list-group-item ml-lg mr-lg pt-lg){\r\n    SetVar(search_name, LangRes(crediting_borrower))\r\n    Include(@1search)\r\n}\r\n\r\nDBFind(@1applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Сrediting\"}).Columns(\"name,id\").Vars(application)\r\n\r\nDBFind(#this_table#, src).Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(custom_id){\r\n    If(#deleted# == 0){\r\n        SetVar(Name: style_text, Value: \"text-normal\")\r\n        SetVar(Name: style_link, Value: \"text-primary\")\r\n    }.Else{\r\n        SetVar(Name: style_text, Value: \"text-muted\")\r\n        SetVar(Name: style_link, Value: \"text-muted\")\r\n    }\r\n    SetVar(borrower_id, AddressToId(#borrower#))\r\n    Span(Class: #style_text#, Body: #id#)\r\n}.Custom(custom_borrower){\r\n    DBFind(@1members).Where({\"ecosystem\": #ecosystem_id#, \"id\": #borrower_id#}).Columns(\"id,image_id,member_name\").Vars(member)\r\n    LinkPage(Class: #style_link# h5 text-bold, Page: @1profile_view, PageParams: \"v_key_id=#member_id#\"){\r\n        If(#member_image_id#>0){\r\n            Image(Src: Binary().ById(#member_image_id#), Class: img-circle).Style(width: 30px; border: 1px solid #5A5D63; margin-right: 10px;)\r\n            Span(#member_member_name#)\r\n        }.Else{\r\n            Div(){\r\n                Span(Em(Class: fa icon-user fa-2x)).Style(margin-right:10px;)\r\n                Span(#member_member_name#)\r\n            }.Style(display:flex; align-items:center;)\r\n        }\r\n    }\r\n}.Custom(custom_amount){\r\n    Span(Class: #style_text#, Body: Money(#amount#))\r\n}.Custom(custom_term){\r\n    Span(Class: #style_text#, Body: #term#)\r\n}.Custom(custom_date){\r\n    P(Class: #style_text# h6 m0, Body: DateTime(DateTime: #date_started#, Format: \"DD.MM.YYYY HH:MI\"))\r\n    P(Class: #style_text# h6 m0, Body: DateTime(DateTime: #date_ended#, Format: \"DD.MM.YYYY HH:MI\"))\r\n}.Custom(custom_created){\r\n    P(Class: #style_text# h6 m0, Body: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\"))\r\n}.Custom(custom_status){\r\n    If(#status#==-2){\r\n        Span(Class: text-muted, Body: LangRes(crediting_blocked))\r\n    }.ElseIf(#status#==-1){\r\n        Span(Class: text-muted, Body: LangRes(crediting_removed))\r\n    }.ElseIf(#status#==0){\r\n        Span(Class: text-warning, Body: LangRes(crediting_waiting))\r\n    }.ElseIf(#status#==1){\r\n        Span(Class:  text-success, Body: LangRes(crediting_auction))\r\n    }.ElseIf(#status#==2){\r\n        Span(Class: text-primary, Body: LangRes(crediting_signing))\r\n    }.ElseIf(#status#==3){\r\n        Span(Class: text-danger, Body: LangRes(crediting_rejected))\r\n    }.ElseIf(#status#==4){\r\n        Span(Class: text-normal, Body: LangRes(crediting_finished))\r\n    }\r\n}.Custom(actions){\r\n    Div(text-right button-group text-nowrap){\r\n        If(And(#deleted#==0,#status#==0,#borrower_id#==#key_id#)){\r\n            Button(Class: btn bg-gray-lighter, Contract: CreditingDel, Params: \"Id=#id#\", Page: #this_page#){\r\n                Em(Class: text-danger fa fa-1x fa-trash)\r\n            }.Alert(Text: \"$@1sure_want_delete$\", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)\r\n            Button(Class: btn bg-gray-lighter mh-sm, PageParams: \"Id=#id#\", Page: crediting_add){\r\n                Em(Class: text-default fa fa-1x fa-edit)\r\n            }.Popup(60, $crediting_edit$)\r\n        }\r\n    }\r\n}.Count(count)\r\n\r\nDiv(fullscreen){\r\n    Div(table-responsive ml-lg mr-lg){\r\n        Div(list-group-item){\r\n            If(#count# > 0){\r\n                Table(src, \"$@1id$=custom_id,$crediting_borrower$=custom_borrower,$amount$=custom_amount,$crediting_term$=custom_term,$@1date_start$ / $@1date_end$=custom_date,$created$=custom_created,$status$=custom_status,=actions\")\r\n            }.Else{\r\n                Div(Class: text-center h4 text-muted, Body: \"$@1ecosystems$ $@1not_founded$\")\r\n            }\r\n        }.Style(\r\n            margin-top:-15px;\r\n            tbody > tr:nth-of-type(odd) {\r\n                background-color: #f8f9fc;\r\n            }\r\n        )\r\n    }\r\n}\r\nDiv(mt-sm ml-lg mr-sm mb-sm){\r\n    Include(@1pager)\r\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "crediting_settings",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Сrediting\"}).Vars(\"app\")\r\n\r\nSetVar(this_page, \"crediting_settings\").(role_admin,0).(role_borrower,0).(role_creditor,0).(commission_wallet,0)\r\nSetVar(role_admin, AppParam(App: #app_id#, Name: \"crediting_admin_role\"))\r\nSetVar(role_borrower, AppParam(App: #app_id#, Name: \"crediting_borrower_role\"))\r\nSetVar(role_creditor, AppParam(App: #app_id#, Name: \"crediting_creditor_role\"))\r\nSetVar(commission_wallet, AppParam(App: #app_id#, Name: \"crediting_commission_wallet\"))\r\n\r\nDBFind(\"@1roles\", src_roles).Where({\"ecosystem\": #ecosystem_id#, \"deleted\": 0}).Columns(\"role_name,id\").Limit(100)\r\n\r\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 text-right mt-sm\").(col_right,\"col-sm-8 text-left\")\r\n\r\nDiv(content-wrapper){\r\n    Div(row){\r\n        Div(col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1){\r\n            Form(panel panel-primary){\r\n                Div(panel-body){\r\n                    Div(text-center text-bold h4 m0){\r\n                        LangRes(@1crediting_settings)\r\n                    }\r\n                    Div(text-center text-muted){\r\n                        LangRes(@1crediting_settings_description)\r\n                    }\r\n                    Div(row mt-lg){\r\n                        Div(#col_left#){\r\n                            Label(){\r\n                                \"Admin\"\r\n                            }\r\n                        }\r\n                        Div(#col_right#){\r\n                            Select(Name: RoleAdmin, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #role_admin#)\r\n                            Div(m0 h6 text-muted){\r\n                                SetVar(r_name, $@1role_not_found$)\r\n                                If(#role_admin# > 0){\r\n                                    DBFind(\"@1roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_admin#}).Columns(\"role_name\").Vars(r)\r\n                                    SetVar(r_name, #r_role_name#)\r\n                                }\r\n                                LangRes(@1current_value): #r_name#\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(#row#){\r\n                        Div(#col_left#){\r\n                            Label(){\r\n                                \"Borrower\"\r\n                            }\r\n                        }\r\n                        Div(#col_right#){\r\n                            Select(Name: RoleBorrower, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #role_borrower#)\r\n                            Div(m0 h6 text-muted){\r\n                                SetVar(r_name, $@1role_not_found$)\r\n                                If(#role_borrower# > 0){\r\n                                    DBFind(\"@1roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_borrower#}).Columns(\"role_name\").Vars(r)\r\n                                    SetVar(r_name, #r_role_name#)\r\n                                }\r\n                                LangRes(@1current_value): #r_name#\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(#row#){\r\n                        Div(#col_left#){\r\n                            Label(){\r\n                                \"Creditor\"\r\n                            }\r\n                        }\r\n                        Div(#col_right#){\r\n                            Select(Name: RoleCreditor, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #role_creditor#)\r\n                            Div(m0 h6 text-muted){\r\n                                SetVar(r_name, $@1role_not_found$)\r\n                                If(#role_creditor# > 0){\r\n                                    DBFind(\"@1roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_creditor#}).Columns(\"role_name\").Vars(r)\r\n                                    SetVar(r_name, #r_role_name#)\r\n                                }\r\n                                LangRes(@1current_value): #r_name#\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(#row#){\r\n                        Div(#col_left#){\r\n                            Label(){\r\n                                \"Commission wallet\"\r\n                            }\r\n                        }\r\n                        Div(#col_right#){\r\n                            Input(Name: CommissionWallet, Placeholder: \"xxxx-xxxx-xxxx-xxxx-xxxx\", Value: #commission_wallet#)\r\n                            Div(m0 h6 text-muted){\r\n                                LangRes(@1current_value): #commission_wallet#\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                Div(panel-footer text-right){\r\n                    Button(Body: $@1apply_settings$, Class: btn btn-primary, Page: #this_page#, Contract: CreditingSettings)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Name": "CreditingAdd",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract CreditingAdd {\r\n    data {\r\n        Id int \"optional\"\r\n        Amount money\r\n        Term string\r\n        StartDate string\r\n        StartTime string\r\n        EndDate string\r\n        EndTime string\r\n        Description string \"optional\"\r\n    }\r\n\r\n    func trimZeroTime(s string) string {\r\n        if Contains(s, \"T00:00:00Z\") {\r\n            s = Replace(s, \"T00:00:00Z\", \"\")\r\n        }\r\n        return s\r\n    }\r\n\r\n    func dateAddTime(d, t string) string {\r\n        var dt string\r\n        if Size(t) == 5 {\r\n            dt = Sprintf(\"%v %v:00\", trimZeroTime(d), t)\r\n        }\r\n        return dt\r\n    }\r\n\r\n    func fixDatetimes() {\r\n        $date_started = UnixDateTime(dateAddTime($StartDate, $StartTime))\r\n        $date_ended = UnixDateTime(dateAddTime($EndDate, $EndTime))\r\n\r\n        if $date_started == 0 || $date_ended == 0 { // invalid datetimes\r\n            var errs array\r\n            if Size($StartDate) < 10 {\r\n                errs = Append(errs, \"starting date\")\r\n            }\r\n            if Size($StartTime) < 5 {\r\n                errs = Append(errs, \"starting time\")\r\n            }\r\n            if Size($EndDate) < 10 {\r\n                errs = Append(errs, \"ending date\")\r\n            }\r\n            if Size($EndTime) < 5 {\r\n                errs = Append(errs, \"ending time\")\r\n            }\r\n            warning Sprintf(LangRes(\"@1voting_creation_error_x_unspecified\", \"en\"), Join(errs, \", \"))\r\n        }\r\n        if $date_started < $block_time {\r\n            warning LangRes(\"@1starting_date_invalid\", \"en\")\r\n        }\r\n        if $date_started >= $date_ended {\r\n            warning LangRes(\"@1ending_date_invalid\", \"en\")\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        fixDatetimes()\r\n    }\r\n\r\n    action {\r\n        var m map\r\n        if Int($Id) == 0 {\r\n            m[\"borrower\"] = IdToAddress($key_id)\r\n            m[\"status\"] = 0\r\n            m[\"deleted\"] = 0\r\n            m[\"date_created\"] = $block_time       \r\n        }\r\n\r\n        m[\"amount\"] = $Amount\r\n        m[\"term\"] = $Term\r\n        m[\"date_started\"] = $date_started\r\n        m[\"date_ended\"] = $date_ended\r\n        m[\"description\"] = $Description\r\n\r\n        if Int($Id) == 0 {\r\n            DBInsert(\"crediting_requests\", m)\r\n        } else {\r\n            DBUpdate(\"crediting_requests\", Int($Id), m)\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "CreditingDel",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract CreditingDel {\r\n    data {\r\n        Id int\r\n    }\r\n\r\n    conditions {\r\n    }\r\n\r\n    action {\r\n        var m map\r\n\t\tm[\"status\"] = -1\r\n\t\tm[\"deleted\"] = $block_time    \r\n\r\n        DBUpdate(\"crediting_requests\", Int($Id), m)\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "CreditingSettings",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract CreditingSettings {\r\n    data {\r\n        RoleAdmin int\r\n        RoleBorrower int\r\n        RoleCreditor int\r\n        CommissionWallet string\r\n    }\r\n\r\n    conditions {\r\n        MainCondition()\r\n    }\r\n\r\n    func updateParam(name string, value string) {\r\n        var param paramsNew map\r\n        if $app_id > 0 {\r\n            param = DBFind(\"@1app_params\").Where({\"ecosystem\": $ecosystem_id, \"app_id\": $app_id, \"name\": name}).Row()\r\n            if param {\r\n                paramsNew[\"Id\"] = Int(param[\"id\"])\r\n                paramsNew[\"Value\"] = Str(value)\r\n                paramsNew[\"Conditions\"] = param[\"conditions\"]\r\n                CallContract(\"@1EditAppParam\", paramsNew)\r\n            } else {\r\n                paramsNew[\"ApplicationId\"] = $app_id\r\n                paramsNew[\"Name\"] = name\r\n                paramsNew[\"Value\"] = Str(value)\r\n                paramsNew[\"Conditions\"] = \"ContractConditions(\\\"AdminCondition\\\")\"\r\n                CallContract(\"@1NewAppParam\", paramsNew)\r\n            }\r\n        } else {\r\n            warning LangRes(\"@1app_not_found\", \"en\")\r\n        }\r\n    }\r\n\r\n    action {\r\n        $app_id = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Сrediting\"}).One(\"id\")\r\n        updateParam(\"crediting_admin_role\", Str($RoleAdmin))\r\n        updateParam(\"crediting_borrower_role\", Str($RoleBorrower))\r\n        updateParam(\"crediting_creditor_role\", Str($RoleCreditor))\r\n        updateParam(\"crediting_commission_wallet\", $CommissionWallet)\r\n    }\r\n}",
            "Type": "contracts"
        }
    ]
}