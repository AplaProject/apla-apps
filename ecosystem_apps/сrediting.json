{
    "name": "Сrediting",
    "conditions": "ContractConditions(\"AdminCondition\")",
    "data": [
        {
            "Name": "admin_menu",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "MenuItem(Title:$crediting_settings$, Page:crediting_settings, Icon: \"icon-wrench\")",
            "Type": "menu"
        },
        {
            "Name": "default_menu",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "MenuItem(Title: \"$crediting$\", Page: crediting_list, Icon: \"icon-calculator\")",
            "Type": "menu"
        },
        {
            "Name": "crediting",
            "Trans": "{\"en\": \"Crediting\", \"ru\": \"Кредитование\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_add",
            "Trans": "{\"en\": \"Add a request\", \"ru\": \"Добавить заявку\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_auction",
            "Trans": "{\"en\": \"Auction\", \"ru\": \"Аукцион\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_blocked",
            "Trans": "{\"en\": \"Blocked\", \"ru\": \"Заблокировано\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_borrower",
            "Trans": "{\"en\": \"Borrower\", \"ru\": \"Заемщик\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_desc",
            "Trans": "{\"en\": \"This page is used to manage your crediting\", \"ru\": \"Эта страница используется для управления вашим кредитованием\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_edit",
            "Trans": "{\"en\": \"Edit a request\", \"ru\": \"Редактировать заявку\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_filter_desc",
            "Trans": "{\"en\": \"Select the status of the requests you want to see\", \"ru\": \"Выберите статус заявок, которые вы хотите увидеть\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_finished",
            "Trans": "{\"en\": \"Finished\", \"ru\": \"Завершено\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_rejected",
            "Trans": "{\"en\": \"Rejected\", \"ru\": \"Отклонено\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_removed",
            "Trans": "{\"en\": \"Removed\", \"ru\": \"Удалено\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_settings",
            "Trans": "{\"en\": \"Crediting settings\", \"ru\": \"Настройки Кридитования\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_settings_description",
            "Trans": "{\"en\": \"Correspondence of Crediting application roles to ecosystem roles\", \"ru\": \"Соответствие ролей приложения Кредитования ролям экосистемы\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_signing",
            "Trans": "{\"en\": \"Signing\", \"ru\": \"Подписание\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_term",
            "Trans": "{\"en\": \"Loan term\", \"ru\": \"Срок займа\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_waiting",
            "Trans": "{\"en\": \"Waiting\", \"ru\": \"Ожидание\"}",
            "Type": "languages"
        },
        {
            "Name": "crediting_offers",
            "Columns": "[\n    {\n        \"name\":\"creditor\",\n        \"conditions\":\"true\",\n        \"type\":\"varchar\"\n    },\n    {\n        \"name\":\"date_created\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    },\n    {\n        \"name\":\"rate\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    },\n    {\n        \"name\":\"request_id\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    }\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "crediting_requests",
            "Columns": "[\n    {\n        \"name\":\"amount\",\n        \"conditions\":\"true\",\n        \"type\":\"money\"\n    },\n    {\n        \"name\":\"borrower\",\n        \"conditions\":\"true\",\n        \"type\":\"varchar\"\n    },\n    {\n        \"name\":\"creditor\",\n        \"conditions\":\"true\",\n        \"type\":\"varchar\"\n    },\n    {\n        \"name\":\"date_created\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    },\n    {\n        \"name\":\"date_ended\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    },\n    {\n        \"name\":\"date_started\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    },\n    {\n        \"name\":\"deleted\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    },\n    {\n        \"name\":\"rate\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    },\n    {\n        \"name\":\"sign_borrower\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    },\n    {\n        \"name\":\"sign_creditor\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    },\n    {\n        \"name\":\"status\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    },\n    {\n        \"name\":\"term\",\n        \"conditions\":\"true\",\n        \"type\":\"text\"\n    },\n    {\n        \"name\":\"description\",\n        \"conditions\":\"true\",\n        \"type\":\"text\"\n    }\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "crediting_subs",
            "Columns": "[\n    {\n        \"name\":\"creditor\",\n        \"conditions\":\"true\",\n        \"type\":\"varchar\"\n    },\n    {\n        \"name\":\"deleted\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    },\n    {\n        \"name\":\"request_id\",\n        \"conditions\":\"true\",\n        \"type\":\"number\"\n    }\n]",
            "Permissions": "{\"read\": \"true\", \"insert\": \"true\", \"update\": \"true\", \"new_column\": \"true\"}",
            "Type": "tables"
        },
        {
            "Name": "crediting_admin_role",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "crediting_borrower_role",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "crediting_commission_wallet",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "crediting_creditor_role",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "0",
            "Type": "app_params"
        },
        {
            "Name": "crediting_add",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(@1applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Сrediting\"}).Columns(\"name,id\").Vars(application)\nIf(#Id#>0){\n    DBFind(crediting_requests).Where({\"id\": #Id#}).Vars(request)\n}\nForm(){\n    Div(list-group-item){\n        Div(row){\n            Div(col-md-3 mt-sm text-right){\n                Label(){\n                    LangRes(crediting_borrower)\n                    Span(*,text-danger)\n                }\n            }\n            Div(col-md-9 text-left){\n                SetVar(borrower, Address(#key_id#))\n                Input(Name: Borrower, Disabled: 1, Value: #borrower#)\n            }\n        }\n        Div(row mt-sm){\n            Div(col-md-3 mt-sm text-right){\n                Label(){\n                    LangRes(@1amount)\n                    Span(*,text-danger)\n                }\n            }\n            Div(col-md-9 text-left){\n                If(#request_amount#){\n                    SetVar(request_amount, Money(#request_amount#))\n                    Input(Name: Amount, Type: number, Value: #request_amount#)\n                }.Else{\n                    Input(Name: Amount, Type: number)\n                }\n            }\n        }\n    }\n    Div(list-group-item){\n        Div(row){\n            Div(col-md-3 mt text-right){\n                Label(){\n                    LangRes(crediting_term)\n                    Span(*,text-danger)\n                }\n            }\n            Div(col-md-9 text-left){\n                AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: type_term, Source: src_term)\n                If(#request_term#){\n                    RadioGroup(Name: Term, Source: src_term, NameColumn: name, ValueColumn: name, Value: #request_term#)\n                }.Else{\n                    RadioGroup(Name: Term, Source: src_term, NameColumn: name, ValueColumn: name)\n                }\n                \n            }\n        }\n    }\n    Div(list-group-item){\n        Div(row){\n            Div(col-md-3 mt-sm text-right){\n                Label(){\n                    LangRes(@1date_start)\n                    Span(*,text-danger)\n                }\n            }\n            Div(col-md-9 text-left){\n                Div(row){\n                    If(#request_date_started#){\n                        SetVar(st_d, DateTime(DateTime: #request_date_started#, Format: \"YYYY-MM-DD\"))\n                        SetVar(st_t, DateTime(DateTime: #request_date_started#, Format: \"HH:MI\"))\n                        Div(col-md-6){\n                            Input(Name: StartDate, Type: date, Value: #st_d#)\n                        }\n                        Div(col-md-6){\n                            Input(Name: StartTime, Type: time, Value: #st_t#)\n                        }\n                    }.Else{\n                        Div(col-md-6){\n                            Input(Name: StartDate, Type: date)\n                        }\n                        Div(col-md-6){\n                            Input(Name: StartTime, Type: time, Value: \"00:00\")\n                        }\n                    }\n                }\n            }\n        }\n        Div(row mt-sm){\n            Div(col-md-3 mt-sm text-right){\n                Label(){\n                    LangRes(@1date_end)\n                    Span(*,text-danger)\n                }\n            }\n            Div(col-md-9 text-left){\n                Div(row){\n                    If(#request_date_ended#){\n                        SetVar(ed_d, DateTime(DateTime: #request_date_ended#, Format: \"YYYY-MM-DD\"))\n                        SetVar(ed_t, DateTime(DateTime: #request_date_ended#, Format: \"HH:MI\"))\n                        Div(col-md-6){\n                            Input(Name: EndDate, Type: date, Value: #ed_d#)\n                        }\n                        Div(col-md-6){\n                            Input(Name: EndTime, Type: time, Value: #ed_t#)\n                        }\n                    }.Else{\n                        Div(col-md-6){\n                            Input(Name: EndDate, Type: date)\n                        }\n                        Div(col-md-6){\n                            Input(Name: EndTime, Type: time, Value: \"00:00\")\n                        }\n                    }\n                }\n            }\n        }\n    }\n    Div(list-group-item){\n        Div(row){\n            Div(col-md-3 mt-sm text-right){\n                Label(){\n                    LangRes(@1description)\n                }\n            }\n            Div(col-md-9 text-left){\n                If(#request_description#){\n                    Input(Name: Description, Type: textarea, Value: #request_description#).Style(resize:vertical)\n                }.Else{\n                    Input(Name: Description, Type: textarea).Style(resize:vertical)\n                }\n            }\n        }\n    }\n    If(#Id#>0){\n        Button(Body: LangRes(@1edit), Class: btn btn-primary pull-right mt, Page: crediting_list, Contract: CreditingAdd, Params: \"Id=#Id#\")\n    }.Else{\n        Button(Body: LangRes(@1add), Class: btn btn-primary pull-right mt, Page: crediting_list, Contract: CreditingAdd)\n    }\n    Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: crediting_list)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "crediting_filter",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "Data(type_status, \"value,name\"){\n    0,$crediting_waiting$\n    1,$crediting_auction$\n    2,$crediting_signing$\n    3,$crediting_rejected$\n    4,$crediting_finished$\n}\nForm(text-center){\n    Label(Class: m0){\n        Span(Body: LangRes(crediting_filter_desc))\n    }\n    Div(row text-left){\n        Div(col-md-5){}\n        Div(col-md-7){\n            RadioGroup(Name: Filter, Source: type_status, NameColumn: name, ValueColumn: value)\n        }\n    }\n    Button(Body: LangRes(@1filter), Class: btn btn-primary pull-right, Page: crediting_list, PageParams: \"page_par=Val(Filter),search=#search#\")\n    Button(Body: LangRes(@1clear), Class: btn btn-default pull-right, Page: crediting_list, PageParams: \"page_par=NULL,search=#search#\")\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "crediting_list",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "SetVar(this_page, crediting_list).(this_table, crediting_requests)\nInclude(@1pager_header)\n\nSetTitle(\"$crediting$\")\nSpan(Class: text-muted h5 m0 mb ml-lg, Body: Span(Class: ml-sm, Body: \"$crediting_desc$\"))\nAddToolButton(Title: $@1add$, Page: crediting_add, Icon: icon-plus).Popup(60, $crediting_add$)\n\nIf(#page_par#==0){\n    SetVar(type_filter, {\"status\": 0})\n}.ElseIf(#page_par#==1){\n    SetVar(type_filter, {\"status\": 1})\n}.ElseIf(#page_par#==2){\n    SetVar(type_filter, {\"status\": 2})\n}.ElseIf(#page_par#==3){\n    SetVar(type_filter, {\"status\": 3})\n}.ElseIf(#page_par#==4){\n    SetVar(type_filter, {\"status\": 4})\n}\n\nIf(#search#){\n    SetVar(where, {\"$and\": [#type_filter#, {\"borrower\": {\"$ilike\": \"#search#\"}}]})\n}.Else{\n    SetVar(where, {\"$and\": [#type_filter#]})\n}\n\nDiv(mr-lg text-right){\n    Button(Page: crediting_filter, Class: btn bg-gray-lighter mr-sm, PageParams: \"page_par=#page_par#,search=#search#,current_page=#current_page#\", Body: Em(Class: fa fa-filter) $@1filter$).Popup(Header: $@1filter$, Width: \"30\")\n    If(#type_filter#){\n        Button(Page: #this_page#, PageParams: \"page_par=NULL,search=#search#\", Class: btn bg-gray-lighter mr-sm, Body: Em(Class: fa fa-close))\n    }\n}.Style(margin-top: -28px; z-index: 1001;)\n\nDiv(list-group-item ml-lg mr-lg pt-lg){\n    SetVar(search_name, LangRes(crediting_borrower))\n    Include(@1search)\n}\n\nDBFind(@1applications).Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Сrediting\"}).Columns(\"name,id\").Vars(application)\n\nDBFind(#this_table#, src).Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Custom(custom_id){\n    If(#deleted# == 0){\n        SetVar(Name: style_text, Value: \"text-normal\")\n        SetVar(Name: style_link, Value: \"text-primary\")\n    }.Else{\n        SetVar(Name: style_text, Value: \"text-muted\")\n        SetVar(Name: style_link, Value: \"text-muted\")\n    }\n    SetVar(borrower_id, AddressToId(#borrower#))\n    Span(Class: #style_text#, Body: #id#)\n}.Custom(custom_borrower){\n    DBFind(@1members).Where({\"ecosystem\": #ecosystem_id#, \"id\": #borrower_id#}).Columns(\"member_info->information\").Vars(member)\n    LinkPage(Class: #style_link# h5 text-bold, Page: @1profile_view, PageParams: \"v_key_id=#member_id#\"){\n        Div(){\n            Span(Em(Class: fa icon-user fa-2x)).Style(margin-right:10px;)\n            Span(){\n                P(Class: h5 m0 text-bold, Body: #borrower#)\n                P(Class: h6 m0, Body: #member_member_info_information#)\n            }\n        }.Style(display:flex; align-items:center;)\n    }\n}.Custom(custom_amount){\n    Span(Class: #style_text#, Body: Money(#amount#))\n}.Custom(custom_term){\n    Span(Class: #style_text#, Body: #term#)\n}.Custom(custom_date){\n    P(Class: #style_text# h6 m0, Body: DateTime(DateTime: #date_started#, Format: \"DD.MM.YYYY HH:MI\"))\n    P(Class: #style_text# h6 m0, Body: DateTime(DateTime: #date_ended#, Format: \"DD.MM.YYYY HH:MI\"))\n}.Custom(custom_created){\n    P(Class: #style_text# h6 m0, Body: DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\"))\n}.Custom(custom_status){\n    If(#status#==-2){\n        Span(Class: text-muted, Body: LangRes(crediting_blocked))\n    }.ElseIf(#status#==-1){\n        Span(Class: text-muted, Body: LangRes(crediting_removed))\n    }.ElseIf(#status#==0){\n        Span(Class: text-warning, Body: LangRes(crediting_waiting))\n    }.ElseIf(#status#==1){\n        Span(Class:  text-success, Body: LangRes(crediting_auction))\n    }.ElseIf(#status#==2){\n        Span(Class: text-primary, Body: LangRes(crediting_signing))\n    }.ElseIf(#status#==3){\n        Span(Class: text-danger, Body: LangRes(crediting_rejected))\n    }.ElseIf(#status#==4){\n        Span(Class: text-normal, Body: LangRes(crediting_finished))\n    }\n}.Custom(actions){\n    Div(text-right button-group text-nowrap){\n        If(And(#deleted#==0,#status#==0,#borrower_id#==#key_id#)){\n            Button(Class: btn bg-gray-lighter, Contract: CreditingDel, Params: \"Id=#id#\", Page: #this_page#){\n                Em(Class: text-danger fa fa-1x fa-trash)\n            }.Alert(Text: \"$@1sure_want_delete$\", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)\n            Button(Class: btn bg-gray-lighter mh-sm, PageParams: \"Id=#id#\", Page: crediting_add){\n                Em(Class: text-default fa fa-1x fa-edit)\n            }.Popup(60, $crediting_edit$)\n        }\n    }\n}.Count(count)\n\nDiv(fullscreen){\n    Div(table-responsive ml-lg mr-lg){\n        Div(list-group-item){\n            If(#count# > 0){\n                Table(src, \"$@1id$=custom_id,$crediting_borrower$=custom_borrower,$amount$=custom_amount,$crediting_term$=custom_term,$@1date_start$ / $@1date_end$=custom_date,$created$=custom_created,$status$=custom_status,=actions\")\n            }.Else{\n                Div(Class: text-center h4 text-muted, Body: \"$crediting$ $@1not_founded$\")\n            }\n        }.Style(\n            margin-top:-15px;\n            tbody > tr:nth-of-type(odd) {\n                background-color: #f8f9fc;\n            }\n        )\n    }\n}\nDiv(mt-sm ml-lg mr-sm mb-sm){\n    Include(@1pager)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "crediting_settings",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "DBFind(\"@1applications\").Where({\"ecosystem\": #ecosystem_id#, \"name\": \"Сrediting\"}).Vars(\"app\")\nDBFind(\"@1roles\", src_roles).Where({\"ecosystem\": #ecosystem_id#, \"deleted\": 0}).Columns(\"role_name,id\").Limit(100)\nSetVar(row,\"row mt-sm\").(col_left,\"col-sm-4 text-right mt-sm\").(col_right,\"col-sm-8 text-left\")\n\nSetVar(this_page, \"crediting_settings\").(role_admin,0).(role_borrower,0).(role_creditor,0).(commission_wallet,0)\nSetVar(role_admin, AppParam(App: #app_id#, Name: \"crediting_admin_role\"))\nSetVar(role_borrower, AppParam(App: #app_id#, Name: \"crediting_borrower_role\"))\nSetVar(role_creditor, AppParam(App: #app_id#, Name: \"crediting_creditor_role\"))\nSetVar(commission_wallet, AppParam(App: #app_id#, Name: \"crediting_commission_wallet\"))\n\nDiv(content-wrapper){\n    Div(row){\n        Div(col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1){\n            Form(panel panel-primary){\n                Div(panel-body){\n                    Div(text-center text-bold h4 m0){\n                        LangRes(@1crediting_settings)\n                    }\n                    Div(text-center text-muted){\n                        LangRes(@1crediting_settings_description)\n                    }\n                    Div(row mt-lg){\n                        Div(#col_left#){\n                            Label(){\n                                \"Admin\"\n                            }\n                        }\n                        Div(#col_right#){\n                            Select(Name: RoleAdmin, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #role_admin#)\n                            Div(m0 h6 text-muted){\n                                SetVar(r_name, $@1role_not_found$)\n                                If(#role_admin# > 0){\n                                    DBFind(\"@1roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_admin#}).Columns(\"role_name\").Vars(r)\n                                    SetVar(r_name, #r_role_name#)\n                                }\n                                LangRes(@1current_value): #r_name#\n                            }\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            Label(){\n                                \"Borrower\"\n                            }\n                        }\n                        Div(#col_right#){\n                            Select(Name: RoleBorrower, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #role_borrower#)\n                            Div(m0 h6 text-muted){\n                                SetVar(r_name, $@1role_not_found$)\n                                If(#role_borrower# > 0){\n                                    DBFind(\"@1roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_borrower#}).Columns(\"role_name\").Vars(r)\n                                    SetVar(r_name, #r_role_name#)\n                                }\n                                LangRes(@1current_value): #r_name#\n                            }\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            Label(){\n                                \"Creditor\"\n                            }\n                        }\n                        Div(#col_right#){\n                            Select(Name: RoleCreditor, Source: src_roles, NameColumn: role_name, ValueColumn: id, Value: #role_creditor#)\n                            Div(m0 h6 text-muted){\n                                SetVar(r_name, $@1role_not_found$)\n                                If(#role_creditor# > 0){\n                                    DBFind(\"@1roles\").Where({\"ecosystem\": #ecosystem_id#, \"id\": #role_creditor#}).Columns(\"role_name\").Vars(r)\n                                    SetVar(r_name, #r_role_name#)\n                                }\n                                LangRes(@1current_value): #r_name#\n                            }\n                        }\n                    }\n                    Div(#row#){\n                        Div(#col_left#){\n                            Label(){\n                                \"Commission wallet\"\n                            }\n                        }\n                        Div(#col_right#){\n                            Input(Name: CommissionWallet, Placeholder: \"xxxx-xxxx-xxxx-xxxx-xxxx\", Value: #commission_wallet#)\n                            Div(m0 h6 text-muted){\n                                LangRes(@1current_value): #commission_wallet#\n                            }\n                        }\n                    }\n                }\n                Div(panel-footer text-right){\n                    Button(Body: $@1apply_settings$, Class: btn btn-primary, Page: #this_page#, Contract: CreditingSettings)\n                }\n            }\n        }\n    }\n}",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Name": "CreditingAdd",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract CreditingAdd {\n    data {\n        Id int \"optional\"\n        Amount money\n        Term string\n        StartDate string\n        StartTime string\n        EndDate string\n        EndTime string\n        Description string \"optional\"\n    }\n\n    func trimZeroTime(s string) string {\n        if Contains(s, \"T00:00:00Z\") {\n            s = Replace(s, \"T00:00:00Z\", \"\")\n        }\n        return s\n    }\n\n    func dateAddTime(d, t string) string {\n        var dt string\n        if Size(t) == 5 {\n            dt = Sprintf(\"%v %v:00\", trimZeroTime(d), t)\n        }\n        return dt\n    }\n\n    func fixDatetimes() {\n        $date_started = UnixDateTime(dateAddTime($StartDate, $StartTime))\n        $date_ended = UnixDateTime(dateAddTime($EndDate, $EndTime))\n\n        if $date_started == 0 || $date_ended == 0 { // invalid datetimes\n            var errs array\n            if Size($StartDate) < 10 {\n                errs = Append(errs, \"starting date\")\n            }\n            if Size($StartTime) < 5 {\n                errs = Append(errs, \"starting time\")\n            }\n            if Size($EndDate) < 10 {\n                errs = Append(errs, \"ending date\")\n            }\n            if Size($EndTime) < 5 {\n                errs = Append(errs, \"ending time\")\n            }\n            warning Sprintf(LangRes(\"@1voting_creation_error_x_unspecified\", \"en\"), Join(errs, \", \"))\n        }\n        if $date_started < $block_time {\n            warning LangRes(\"@1starting_date_invalid\", \"en\")\n        }\n        if $date_started >= $date_ended {\n            warning LangRes(\"@1ending_date_invalid\", \"en\")\n        }\n    }\n\n    conditions {\n        fixDatetimes()\n    }\n\n    action {\n        var m map\n        if Int($Id) == 0 {\n            m[\"borrower\"] = IdToAddress($key_id)\n            m[\"status\"] = 0\n            m[\"deleted\"] = 0\n            m[\"date_created\"] = $block_time       \n        }\n\n        m[\"amount\"] = $Amount\n        m[\"term\"] = $Term\n        m[\"date_started\"] = $date_started\n        m[\"date_ended\"] = $date_ended\n        m[\"description\"] = $Description\n\n        if Int($Id) == 0 {\n            DBInsert(\"crediting_requests\", m)\n        } else {\n            DBUpdate(\"crediting_requests\", Int($Id), m)\n        }\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "CreditingDel",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract CreditingDel {\n    data {\n        Id int\n    }\n\n    conditions {\n    }\n\n    action {\n        var m map\n\t\tm[\"status\"] = -1\n\t\tm[\"deleted\"] = $block_time    \n\n        DBUpdate(\"crediting_requests\", Int($Id), m)\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "CreditingSettings",
            "Conditions": "ContractConditions(\"AdminCondition\")",
            "Value": "contract CreditingSettings {\n    data {\n        RoleAdmin int\n        RoleBorrower int\n        RoleCreditor int\n        CommissionWallet string\n    }\n\n    conditions {\n        MainCondition()\n    }\n\n    func updateParam(name string, value string) {\n        var param paramsNew map\n        if $app_id > 0 {\n            param = DBFind(\"@1app_params\").Where({\"ecosystem\": $ecosystem_id, \"app_id\": $app_id, \"name\": name}).Row()\n            if param {\n                paramsNew[\"Id\"] = Int(param[\"id\"])\n                paramsNew[\"Value\"] = Str(value)\n                paramsNew[\"Conditions\"] = param[\"conditions\"]\n                CallContract(\"@1EditAppParam\", paramsNew)\n            } else {\n                paramsNew[\"ApplicationId\"] = $app_id\n                paramsNew[\"Name\"] = name\n                paramsNew[\"Value\"] = Str(value)\n                paramsNew[\"Conditions\"] = \"ContractConditions(\\\"AdminCondition\\\")\"\n                CallContract(\"@1NewAppParam\", paramsNew)\n            }\n        } else {\n            warning LangRes(\"@1app_not_found\", \"en\")\n        }\n    }\n\n    action {\n        $app_id = DBFind(\"@1applications\").Where({\"ecosystem\": $ecosystem_id, \"name\": \"Сrediting\"}).One(\"id\")\n        updateParam(\"crediting_admin_role\", Str($RoleAdmin))\n        updateParam(\"crediting_borrower_role\", Str($RoleBorrower))\n        updateParam(\"crediting_creditor_role\", Str($RoleCreditor))\n        updateParam(\"crediting_commission_wallet\", $CommissionWallet)\n    }\n}",
            "Type": "contracts"
        }
    ]
}