{
    "name": "Events",
    "conditions": "ContractConditions(\"DeveloperCondition\")",
    "data": [
        {
            "Name": "default_menu",
            "Conditions": "ContractConditions(\"DeveloperCondition\")",
            "Value": "MenuItem(Title:$e_events$, Page:e_events, Icon:\"icon-credit-card\")",
            "Type": "menu"
        },
        {
            "Name": "e_create_event",
            "Trans": "{\"en\": \"Create event\", \"ru\": \"Создать мероприятие\"}",
            "Type": "languages"
        },
        {
            "Name": "e_distribution_flyers",
            "Trans": "{\"en\": \"Distribution flyers\", \"ru\": \"Распространение листовок\"}",
            "Type": "languages"
        },
        {
            "Name": "e_edit_event",
            "Trans": "{\"en\": \"Edit event\", \"ru\": \"Редактировать мероприятие\"}",
            "Type": "languages"
        },
        {
            "Name": "e_event_address",
            "Trans": "{\"en\": \"Event address\", \"ru\": \"Адрес мероприятия\"}",
            "Type": "languages"
        },
        {
            "Name": "e_event_name",
            "Trans": "{\"en\": \"Event title\", \"ru\": \"Название мероприятия\"}",
            "Type": "languages"
        },
        {
            "Name": "e_events",
            "Trans": "{\"en\": \"Events\", \"ru\": \"Мероприятия\"}",
            "Type": "languages"
        },
        {
            "Name": "e_events_filter",
            "Trans": "{\"en\": \"Filter\", \"ru\": \"Фильтровать\"}",
            "Type": "languages"
        },
        {
            "Name": "e_map",
            "Trans": "{\"en\": \"Map\", \"ru\": \"Карта\"}",
            "Type": "languages"
        },
        {
            "Name": "e_meeting",
            "Trans": "{\"en\": \"Meeting\", \"ru\": \"Митинг\"}",
            "Type": "languages"
        },
        {
            "Name": "e_moskow",
            "Trans": "{\"en\": \"Moskow\", \"ru\": \"Москва\"}",
            "Type": "languages"
        },
        {
            "Name": "e_picket",
            "Trans": "{\"en\": \"Picket\", \"ru\": \"Пикет\"}",
            "Type": "languages"
        },
        {
            "Name": "e_region",
            "Trans": "{\"en\": \"Region\", \"ru\": \"Регион\"}",
            "Type": "languages"
        },
        {
            "Name": "e_reset",
            "Trans": "{\"en\": \"Reset\", \"ru\": \"Сбросить\"}",
            "Type": "languages"
        },
        {
            "Name": "e_responsible",
            "Trans": "{\"en\": \"Responsible\", \"ru\": \"Ответственный\"}",
            "Type": "languages"
        },
        {
            "Name": "e_spb",
            "Trans": "{\"en\": \"Saint-Petersburg\", \"ru\": \"Санкт-Петербург\"}",
            "Type": "languages"
        },
        {
            "Name": "e_starting_date",
            "Trans": "{\"en\": \"Starting date\", \"ru\": \"Дата начала\"}",
            "Type": "languages"
        },
        {
            "Name": "e_type",
            "Trans": "{\"en\": \"Type\", \"ru\": \"Тип\"}",
            "Type": "languages"
        },
        {
            "Name": "e_events",
            "Columns": "[\n    {\n        \"conditions\": \"ContractAccess(\\\"EEvent\\\")\",\n        \"name\": \"name\",\n        \"type\": \"varchar\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"EEvent\\\")\",\n        \"name\": \"description\",\n        \"type\": \"text\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"EEvent\\\")\",\n        \"name\": \"type\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"EEvent\\\")\",\n        \"name\": \"starting_date\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"EEvent\\\")\",\n        \"name\": \"region\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"EEvent\\\")\",\n        \"name\": \"event_address_json\",\n        \"type\": \"json\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"EEvent\\\")\",\n        \"name\": \"responsible\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"false\",\n        \"name\": \"created_at\",\n        \"type\": \"number\"\n    },\n    {\n        \"conditions\": \"ContractAccess(\\\"EEvent\\\")\",\n        \"name\": \"deleted_at\",\n        \"type\": \"number\"\n    }\n]",
            "Permissions": "{\"insert\":\"ContractAccess(\\\"EEvent\\\")\",\"update\":\"ContractAccess(\\\"EEvent\\\")\",\"new_column\":\"ContractConditions(\\\"AdminCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Name": "e_regions",
            "Conditions": "ContractConditions(\"DeveloperCondition\")",
            "Value": "e_moskow,e_spb",
            "Type": "app_params"
        },
        {
            "Name": "e_types",
            "Conditions": "ContractConditions(\"DeveloperCondition\")",
            "Value": "e_meeting,e_picket,e_distribution_flyers",
            "Type": "app_params"
        },
        {
            "Name": "e_event_form",
            "Conditions": "ContractConditions(\"DeveloperCondition\")",
            "Value": "SetVar(this_page, e_event_form).(back_page, e_events)\nDBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Events\"}).Columns(\"name,id\").Vars(application)\nAppParam(App: #application_id#, Name:e_regions, Source:regions)\nAppParam(App: #application_id#, Name:e_types, Source:types)\n\nSetTitle(\"$e_events$\")\nDiv(breadcrumb text-muted){\n    LinkPage(Body:$e_events$, Page: e_events)\n    Span(/,mh)\n    If(#Id#>0){\n        $e_edit_event$\n    }.Else{\n        $e_create_event$\n    }\n}\n\nSetVar(event_name,).(event_description,).(event_event_address_json,{\"type\":\"point\",\"coords\":[[37.620558583362,55.75364730329732]],\"area\":0, \"zoom\":10})\n\nDiv(row){\n    Div(col-sm-6 col-sm-offset-3){\n        Form(mt-lg panel panel-primary){\n            Div(panel-body){\n                If(#Id#>0){\n                    Input(Name: Id, Type: hidden, Value: #Id#)\n                    DBFind(\"e_events\").WhereId(#Id#).Vars(event)\n                    If(GetVar(MemberId)==\"\"){\n                        SetVar(MemberId, #event_responsible#)\n                    }\n                    If(GetVar(Type)==\"\"){\n                        SetVar(Type, #event_type#)\n                    }\n                    If(GetVar(Region)==\"\"){\n                        SetVar(Region, #event_region#)\n                    }\n                }.Else{\n                    SetVar(Id,)\n                }\n                Div(row mb-sm){\n                    Div(col-sm-4 mt text-bold text-right){\n                        LangRes(e_responsible)\n                    }\n                    Div(col-sm-8 text-left){\n                        Div(input-group){\n                            Div(text-muted mt){\n                                If(GetVar(MemberId)!=\"\"){\n                                    SetVar(AddressMemberId, Address(#MemberId#))\n                                    Div(list-group-item){\n                                        #AddressMemberId#\n                                    }.Style(height: 35px; top: -5px;)\n                                }.Else{\n                                    Div(list-group-item){\n                                        xxxx-xxxx-xxxx-xxxx-xxxx\n                                    }.Style(height: 35px; top: -5px;)\n                                }\n                            }\n                            Div(input-group-btn){\n                                Button(Class: btn bg-gray-lighter fa fa-caret-down buttons, Page: @1select_wallet, PageParams:\"back_page=#this_page#,EcosystemId=#ecosystem_id#,Id=#Id#\").Popup(Header: $@1member$, Width: \"50\")\n                            }.Style(\n                                .buttons {\n                                    border: 1px solid #dde6e9;\n                                    padding: 6px 16px;\n                                }\n                            )\n                        }\n                    }\n                }\n                If(GetVar(MemberId)!=\"\"){\n                    Div(row mb-sm){\n                        Div(col-md-4 mt-sm text-right text-bold){\n                            LangRes(e_event_name)\n                        }\n                        Div(col-md-8 text-left){\n                            Input(Name: Name, Value: #event_name#)\n                        }\n                    }\n                    Div(row mb-sm){\n                        Div(col-sm-4 mt text-bold text-right){\n                            LangRes(@1description)\n                        }\n                        Div(col-sm-8 text-left){\n                            Input(Name: Description, Type: textarea, Value: #event_description#)\n                        }\n                    }\n                    Div(row mb-sm){\n                        Div(col-sm-4 mt-sm text-right text-bold){\n                            LangRes(e_type)\n                        }\n                        Div(col-sm-8 text-left){\n                            Select(Name: Type, Source: types, NameColumn: name, ValueColumn: id, Value: #Type#)\n                        }\n                    }\n                    Div(row mb-sm){\n                        Div(col-sm-4 mt-sm text-right text-bold){\n                            LangRes(e_region)\n                        }\n                        Div(col-sm-8 text-left){\n                            Select(Name: Region, Source: regions, NameColumn: name, ValueColumn: id, Value: #Region#)\n                        }\n                    }\n                    Div(row mb-sm){\n                        Div(col-sm-4 mt text-bold text-right){\n                            LangRes(e_event_address)\n                        }\n                        Div(col-sm-8 text-left){\n                            InputMap(Name: EventAddress, Type: point, MapType: streets, Value: #event_event_address_json#)\n                        }\n                    }\n\n                    Div(row mb-sm){\n                        Div(col-sm-4 mt-sm text-right text-bold){\n                            LangRes(e_starting_date)\n                        }\n                        Div(col-sm-8 text-left){\n                            Div(row){\n                                If(#Id#>0){\n                                    Div(col-sm-6){\n                                        SetVar(date, DateTime(#event_starting_date#, Format: YYYY-MM-DD))\n                                        Input(Name:StartingDate, Type:date, Value: #date#)\n                                    }\n                                    Div(col-sm-6){\n                                        SetVar(time, DateTime(#event_starting_date#, Format: HH:MI))\n                                        Input(Name:StartingTime, Type:time, Value: #time#)\n                                    }\n                                }.Else{\n                                    Div(col-sm-6){\n                                        Input(Name:StartingDate, Type:date)\n                                    }\n                                    Div(col-sm-6){\n                                        Input(Name:StartingTime, Type:time, Value: \"00:00\")\n                                    }    \n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            Div(panel-footer text-right){\n                Button(Body: LangRes(@1back), Class: btn btn-default, Page: #back_page#)\n                If(GetVar(MemberId)!=\"\"){\n                    Button(Body: $@1send$, Class: btn btn-primary pull-right, Page: #back_page#, Contract: EEvent, Params: \"Responsible=#MemberId#\")\n                }\n            }\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "e_events",
            "Conditions": "ContractConditions(\"DeveloperCondition\")",
            "Value": "SetVar(this_page, e_events).(this_table, e_events)\nDBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Events\"}).Columns(\"name,id\").Vars(application)\nInclude(@1pager_header)\n\nSetTitle(\"$e_events$\")\nSetVar(isManager,0)\nSetVar(admin_role_id, EcosysParam(Name:role_admin))\nIf(#role_id#>0){\n    If(#admin_role_id#==#role_id#){\n        SetVar(isManager,1)\n    }\n}\nIf(#isManager#==1){\n    AddToolButton(Title:$@1create$, Page: e_event_form, Icon: icon-calendar)\n}\n\nAppParam(App: #application_id#, Name:e_regions, Source:regions, Ecosystem:#ecosystem_id#)\nAppParam(App: #application_id#, Name:e_types, Source:types, Ecosystem:#ecosystem_id#)\nSetVar(where_type,).(where_region,)\nIf(GetVar(search)!=\"\"){\n    SetVar(where, {\"name\": {\"$like\": #search#}})\n}.ElseIf(Or(GetVar(Type)>0,GetVar(Region)>0)){\n    If(#Type#>0){\n        SetVar(where_type, {type:#Type#})\n    }\n    If(#Region#>0){\n        SetVar(where_region, {region:#Region#})\n    }\n    SetVar(where, {$or:[#where_type#, #where_region#]})\n}.Else{\n    SetVar(where, {id:{$neq:0}}).(Type,0).(Region,0).(search,)\n}\n\nDiv(mr-lg text-right){\n    Button(Page: e_events_filter, Class: btn bg-gray-lighter mr-sm, PageParams: \"sort=#sort#,page_par=#page_par#,search=#search#,current_page=#current_page#\", Body: Em(Class: fa fa-filter) $@1filter$).Popup(Header: $@1filter$, Width: \"50\")\n}\n\nDiv(list-group-item ml-lg mr-lg pt-lg){\n    SetVar(search_name, LangRes(@1name))\n    Include(@1search)\n}\n\nDBFind(#this_table#, src).Where(#where#).Order({starting_date: -1, id:1}).Limit(#pager_limit#).Offset(#pager_offset#).Columns(\"id,name,description,starting_date,type,region,event_address_json,event_address_json->address,responsible\").Custom(_responsible){\n    Address(#responsible#)\n}.Custom(_type){\n    AppParam(App: #application_id#, Name:e_types, Index:#type#, Ecosystem:#ecosystem_id#)\n}.Custom(_region){\n    AppParam(App: #application_id#, Name:e_regions, Index:#region#, Ecosystem:#ecosystem_id#)\n}.Custom(_date){\n    If(#starting_date#>0){\n        Span(Class:text-muted, Body:DateTime(#starting_date#, Format: YYYY-MM-DD HH:MI))\n    }\n}.Custom(_address){\n    Button(Body:#event_address_json.address#, Page:e_map, Class: btn btn-link p0 m0, PageParams: \"Coords=#event_address_json#\").Popup(50, $e_map$)\n}.Custom(_actions){\n    Button(Page: e_event_form, Class: btn btn-default fa fa-pencil, PageParams: \"Id=#id#\")\n}.Count(count)\n\nDiv(fullscreen){\n    Div(table-responsive ml-lg mr-lg){\n        Div(list-group-item){\n            If(#count# > 0){\n                Table(src, \"$@1id$=id,$@1name$=name,$@1description$=description,$e_starting_date$=_date,$@1type$=_type,$e_region$=_region,$@1address$=_address,$e_responsible$=_responsible,=_actions\")\n            }.Else{\n                Div(Class: text-center h4 text-muted, Body: \"$e_events$ $@1not_founded$\")\n            }                       \n        }.Style(\n            margin-top:-15px;\n            tbody > tr:nth-of-type(odd) {\n                background-color: #f8f9fc;\n            }\n        )\n    }\n}\nDiv(mt-sm ml-lg mr-sm mb-sm){\n    Include(@1pager)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "e_events_filter",
            "Conditions": "ContractConditions(\"DeveloperCondition\")",
            "Value": "SetVar(this_page, e_events_filter)\nIf(GetVar(back_page)==\"\"){\n    SetVar(back_page, e_events)\n}\n\nDBFind(@1applications).Where({ecosystem:#ecosystem_id#, name:\"Events\"}).Columns(\"name,id\").Vars(application)\nAppParam(App: #application_id#, Name:e_regions, Source:r, Ecosystem:#ecosystem_id#)\nAppParam(App: #application_id#, Name:e_types, Source:t, Ecosystem:#ecosystem_id#)\n\nSetVar(types_json,`\"0\":\"select type...\"`)\nForList(t){\n    SetVar(types_json,`#types_json#,\"#id#\":\"#name#\"`)\n}\nJsonToSource(types,{#types_json#})\n\nSetVar(regions_json,`\"0\":\"select region...\"`)\nForList(r){\n    SetVar(regions_json,`#regions_json#,\"#id#\":\"#name#\"`)\n}\nJsonToSource(regions,{#regions_json#})\n\nForm(){\n    Div(row mb-sm){\n        Div(col-md-3 mt-sm text-right text-bold){\n            Label($e_type$)\n        }\n        Div(col-md-9 text-left){\n            Select(Name: Type, Source: types, NameColumn: value, ValueColumn: key)\n        }\n    }\n    Div(row mb-sm){\n        Div(col-md-3 mt-sm text-right text-bold){\n            Label($e_region$)\n        }\n        Div(col-md-9 text-left){\n            Select(Name: Region, Source: regions, NameColumn: value, ValueColumn: key)\n        }\n    }\n    Div(mt pull-right){\n        Button(Class: btn btn-default, Page: #back_page#, Body:$e_reset$)\n        Button(Class: btn btn-primary, Page: #back_page#, PageParams: \"Type=Val(Type),Region=Val(Region)\", Body: $@1filter$)\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "e_map",
            "Conditions": "ContractConditions(\"DeveloperCondition\")",
            "Value": "If(GetVar(back_page)==\"\"){\n    SetVar(back_page, e_events)\n}\nJsonToSource(c, #Coords#)\nForList(c){\n    If(#key#==address){\n        Div(Class: mb text-center, Body: #value#)\n    }\n}\nMap(Type: point, Hmap:400, Value: #Coords#)\nDiv(mt text-center){\n    Button(Body: $@1back$, Class: btn btn-primary, Page: #back_page#)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "EEvent",
            "Conditions": "ContractConditions(\"DeveloperCondition\")",
            "Value": "contract EEvent {\n    data {\n        Id int \"optional\"\n        Name string\n        Description string\n        Type int\n        StartingDate string\n        StartingTime string\n        Region int\n        EventAddress string\n        Responsible int\n    }\n\n    func dateAddTime(d, t string) string {\n        var dt string\n        if Contains(d, \"T00:00:00Z\") {\n            d = Replace(d, \"T00:00:00Z\", \"\")\n        }\n        if Size(t) == 5 {\n            dt = Sprintf(\"%v %v:00\", d, t)\n        }\n        return dt\n    }\n    conditions{\n        var adminId int\n        adminId = Int(EcosysParam(\"role_admin\"))\n        if !RoleAccess(adminId){\n            warning LangRes(\"@1access_denied\", \"en\")\n        }\n        \n        if $Id > 0 {\n            var event map\n            event = DBFind(\"e_events\").WhereId($Id).Row()\n            if !event{\n                warning \"Event not founded\"\n            }\n            if event[\"starting_date\"] < $block_time {\n                warning \"Event not editable\"\n            }\n        }\n        $date = UnixDateTime(dateAddTime($StartingDate, $StartingTime))\n        if $date == 0 {\n            warning \"Invalid date\"\n        }\n\n        if !DBFind(\"@1keys\").Where({ecosystem:$ecosystem_id, id:$Responsible}).Row(){\n            warning \"Responsible not founded\"\n        }\n    }\n\n    action {\n        var m addr map encAddr string\n        addr = JSONDecode($EventAddress)\n        addr[\"zoom\"] = 11\n        encAddr = JSONEncode(addr)\n\n        m = {name:$Name, description:$Description, type:$Type, starting_date:$date, region:$Region, event_address_json:encAddr, responsible:$Responsible}\n        \n        if $Id > 0 {\n            DBUpdate(\"e_events\", $Id, m)\n        }else{\n            m[\"created_at\"] = $block_time\n            DBInsert(\"e_events\", m)\n        }\n    }\n}\n",
            "Type": "contracts"
        }
    ]
}