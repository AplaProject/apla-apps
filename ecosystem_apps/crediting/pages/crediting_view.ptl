DBFind(@1applications).Where({"ecosystem": #ecosystem_id#, "name": "Crediting"}).Columns("name,id").Vars(application)
SetVar(creditor_role, AppParam(Ecosystem: #ecosystem_id#, App: #application_id#, Name: crediting_creditor_role))
DBFind("@1roles_participants").Where({"ecosystem": #ecosystem_id#, "$and": ["role->id": {"$in": [#creditor_role#]}, "role->id": #role_id#], "member->member_id": #key_id#, "deleted": 0}).Vars(creditor_access)

If(#notific_id#>0){
    DBFind(@1notifications).Where({"ecosystem": #ecosystem_id#, "id": #notific_id#}).Columns("page_params->crediting_id,page_params->optional").Vars(notific)
    SetVar(Id, #notific_page_params_crediting_id#)
    SetVar(notific_optional, #notific_page_params_optional#)
}

If(#Id#>0){
    DBFind(crediting_requests).Where({"id": #Id#}).Vars(request)
    SetVar(borrower_id, AddressToId(#request_borrower#))
    SetVar(creditor_id, AddressToId(#request_creditor#))
}

Div(content-wrapper){
    If(#request_id# > 0){
        Div(row){
            Div(col-lg-10 col-lg-offset-1){
                Form(panel panel-primary){
                    Div(list-group-item text-center){
                        P(Class: h3 text-bold m0, Body: $crediting$)
                        Div(row){
                            Div(col-md-12){
                                Div(Class: t5 text-muted m0, Body: #request_description#)
                            }
                        }
                    }
                    Div(list-group-item text-center){
                        P(Class: h5 text-center text-bold m0 mb mt-sm, Body: $@1information$)
                        Div(row mb mt-lg t6){
                            Div(col-md-6 mt-sm text-right){
                                LangRes(crediting_borrower)
                            }
                            Div(col-md-6 text-left){
                                DBFind(@1members).Where({"ecosystem": #ecosystem_id#, "id": #borrower_id#}).Columns("member_info->information").Vars(borrower)
                                LinkPage(Class: text-primary h5 text-bold, Page: @1profile_view, PageParams: "v_key_id=#borrower_id#"){
                                    Div(){
                                        Span(Em(Class: fa icon-user fa-2x)).Style(margin-right:10px;)
                                        Span(){
                                            P(Class: h5 m0 text-bold, Body: #request_borrower#)
                                            P(Class: h6 m0, Body: #borrower_member_info_information#)
                                        }
                                    }.Style(display:flex; align-items:center;)
                                }
                            }
                        }
                        Div(row t6){
                            Div(col-md-6 text-right){
                                LangRes($@1r_rating$)
                            }
                            Div(col-md-6 text-left){
                                SetVar(rating_amount, 0)
                                DBFind(@1r_ratings, r).Where({"ecosystem": #ecosystem_id#, "member": #request_borrower#}).Vars(rating)
                                Span(#rating_amount#)
                            }
                        }
                        Div(row t6){
                            Div(col-md-6 text-right){
                                LangRes($@1amount$)
                            }
                            Div(col-md-6 text-left){
                                 Span(Body: Money(#request_amount#))
                            }
                        }
                        Div(row t6){
                            Div(col-md-6 text-right){
                                LangRes($crediting_term$)
                            }
                            Div(col-md-6 text-left){
                                Span(Body: #request_term#)
                            }
                        }
                        Div(row t6){
                            Div(col-md-6 text-right){
                                LangRes(@1date_start)
                            }
                            Div(col-md-6 text-left){
                                DateTime(DateTime: #request_date_started#, Format: "DD.MM.YYYY HH:MI")
                            }
                        }
                        Div(row t6){
                            Div(col-md-6 text-right){
                                LangRes(@1date_end)
                            }
                            Div(col-md-6 text-left){
                                DateTime(DateTime: #request_date_ended#, Format: "DD.MM.YYYY HH:MI")
                            }
                        }
                        Div(row t6){
                            Div(col-md-6 text-right){
                                LangRes(@1created)
                            }
                            Div(col-md-6 text-left){
                                DateTime(DateTime: #request_date_created#, Format: "DD.MM.YYYY HH:MI")
                            }
                        }
                        Div(row t6){
                            Div(col-md-6 text-right){
                                LangRes(@1status)
                            }
                            Div(col-md-6 text-left){
                                If(#request_status#==-2){
                                    Span(Class: text-muted, Body: LangRes(crediting_blocked))
                                }.ElseIf(#request_status#==-1){
                                    Span(Class: text-muted, Body: LangRes(crediting_removed))
                                }.ElseIf(#request_status#==0){
                                    Span(Class: text-warning, Body: LangRes(crediting_waiting))
                                }.ElseIf(#request_status#==1){
                                    Span(Class:  text-success, Body: LangRes(crediting_auction))
                                }.ElseIf(#request_status#==2){
                                    Span(Class: text-primary, Body: LangRes(crediting_signing))
                                }.ElseIf(#request_status#==3){
                                    Span(Class: text-danger, Body: LangRes(crediting_rejected))
                                }.ElseIf(#request_status#==4){
                                    Span(Class: text-normal, Body: LangRes(crediting_finished))
                                }
                            }
                        }
                    }
                    If(#request_status# == 1){
                        DBFind(crediting_offers, offers).Where({"request_id": #Id#}).Order({"rate": 1, "date_created": 1}).Custom(custom_creditor){
                            SetVar(creditor_id, AddressToId(#creditor#))
                            DBFind(@1members).Where({"ecosystem": #ecosystem_id#, "id": #creditor_id#}).Columns("member_info->information").Vars(c)
                            LinkPage(Class: text-primary h5 text-bold, Page: @1profile_view, PageParams: "v_key_id=#c_id#"){
                                Div(){
                                    Span(Em(Class: fa icon-user fa-2x)).Style(margin-right:10px;)
                                    Span(){
                                        P(Class: h5 m0 text-bold, Body: #creditor#)
                                        P(Class: h6 m0, Body: #c_member_info_information#)
                                    }
                                }.Style(display:flex; align-items:center;)
                            }
                        }.Custom(custom_date){
                            Span(Class: h6 text-muted, Body: DateTime(DateTime: #date_created#, Format: "DD.MM.YYYY HH:MI"))
                        }.Custom(custom_rate){
                            Span(Class: pull-right, Body: $crediting_rate$ - Strong(#rate# %))
                        }.Count(cnt)

                        If(Or(#creditor_access_id#>0,#cnt#>0)){
                            Div(list-group-item){
                                P(Class: h5 text-center text-bold m0 mb mt-sm, Body: $crediting_bid_list$)
                                If(#creditor_access_id# > 0){
                                    Div(row mt-lg){
                                        Div(col-lg-8 col-lg-offset-2){
                                            Div(input-group){
                                                Div(input-group-addon){
                                                    $crediting_rate$
                                                }
                                                Input(Name: Rate, Type: number)
                                                Div(input-group-btn){
                                                    Button(Class: btn btn-primary mtl buttons, Page: crediting_view, PageParams: "Id=#Id#", Body: Em(Class: fa fa-search) $crediting_bid$, Contract: CreditingBid, Params: "RequestId=#Id#")
                                                }
                                            }
                                        }.Style(
                                            .buttons{border: 1px solid #dde6e9;}
                                        )
                                    }
                                }
                                Div(row mt){
                                    Div(col-lg-8 col-lg-offset-2){
                                        Table(offers, "$crediting_creditor$=custom_creditor,$crediting_bid_date$=custom_date,=custom_rate")
                                    }
                                }
                            }
                        }
                    }
                    If(Or(#request_status#==2,#request_status#==4)){
                        If(Or(And(#creditor_id#==#key_id#,#request_sign_borrower#>0,#request_sign_creditor#==0),And(#borrower_id#==#key_id#,#request_sign_borrower#==0,#request_sign_creditor#==0))){
                            SetVar(hh, 210)
                        }.Else{
                             SetVar(hh, 160)  
                        }
                        Div(list-group-item){
                            P(Class: h5 text-center text-bold m0 mb mt-sm, Body: $crediting_offer$)
                            Div(row t6){
                                Div(col-md-6 text-right){
                                    LangRes($crediting_rate$)
                                }
                                Div(col-md-6 text-left){
                                    Span(Body: #request_rate# % )
                                }
                            }
                            Div(row t6){
                                Div(col-md-6 text-right){
                                    LangRes(crediting_offer_date)
                                }
                                Div(col-md-6 text-left){
                                    DateTime(DateTime: #request_offer_date#, Format: "DD.MM.YYYY HH:MI")
                                }
                            }
                            Div(row t6){
                                Div(col-md-12 text-center){
                                    Button(Class: btn btn-link, Page: crediting_history, PageParams: "Id=#Id#"){
                                        Div(Class: h5 m0, Body: LangRes(crediting_bid_list))
                                    }.Popup(Header: $crediting_bid_list$, Width: 50)
                                }
                            }
                            Div(row){
                                Div(col-md-6){
                                    P(Class: h5 text-center text-bold m0 mb mt-sm, Body: $crediting_borrower$)
                                    Div(list-group-item text-center mb-lg ml-lg){
                                        Div(row mb mt-sm t6){
                                            Div(col-sm-8 col-sm-offset-4 text-left){
                                                DBFind(@1members).Where({"ecosystem": #ecosystem_id#, "id": #borrower_id#}).Columns("member_info->information").Vars(borrower)
                                                LinkPage(Class: text-primary h5 text-bold, Page: @1profile_view, PageParams: "v_key_id=#borrower_id#"){
                                                    Div(){
                                                        Span(Em(Class: fa icon-user fa-2x)).Style(margin-right:10px;)
                                                        Span(){
                                                            P(Class: h5 m0 text-bold, Body: #request_borrower#)
                                                            P(Class: h6 m0, Body: #borrower_member_info_information#)
                                                        }
                                                    }.Style(display:flex; align-items:center;)
                                                }
                                                
                                            }
                                        }
                                        Div(row t6 mt-lg){
                                            Div(col-md-12 text-center){
                                                Div(Class: text-bold, Body: LangRes(crediting_signature))
                                                If(#request_pub_borrower# != ""){
                                                    Div(Class: preview, Body: #request_pub_borrower#)
                                                }.Else{
                                                     Div(Class: preview, Body: LangRes(crediting_waiting))
                                                }
                                            }
                                        }
                                        Div(row t6 mt){
                                            Div(col-md-12 text-center){
                                                Div(Class: text-bold, Body: LangRes(@1signed_at))
                                                If(#request_sign_borrower# != 0){
                                                    Div(Body: DateTime(DateTime: #request_sign_borrower#, Format: "DD.MM.YYYY HH:MI")) 
                                                }.Else{
                                                     Div(Class: preview, Body: LangRes(crediting_waiting))
                                                }
                                            }
                                        }
                                        If(#request_status#==2){
                                            If(And(#borrower_id#==#key_id#,#request_sign_borrower#==0,#request_sign_creditor#==0)){
                                                Div(row mt-lg){
                                                    Div(col-sm-6 col-sm-offset-3 col-lg-6 col-lg-offset-3){
                                                        Button(Body: LangRes(@1reject), Class: btn btn-danger pull-left, Contract: CreditingSignReject, Params: "Id=#Id#", Page: crediting_view, PageParams: "Id=#Id#")
                                                        Button(Body: LangRes(@1accept), Class: btn btn-success pull-right, Contract: CreditingSignAccept, Params: "Id=#Id#", Page: crediting_view, PageParams: "Id=#Id#")
                                                    }
                                                }
                                            }
                                        }
                                    }.Style(
                                        height: #hh#px;
                                    )
                                }
                                Div(col-md-6){
                                    P(Class: h5 text-center text-bold m0 mb mt-sm, Body: $crediting_creditor$)
                                    Div(list-group-item text-center mb-lg ml-lg){
                                        Div(row mb mt-sm t6){
                                            Div(col-sm-8 col-sm-offset-4 text-left){
                                                DBFind(@1members).Where({"ecosystem": #ecosystem_id#, "id": #creditor_id#}).Columns("member_info->information").Vars(creditor)
                                                LinkPage(Class: text-primary h5 text-bold, Page: @1profile_view, PageParams: "v_key_id=#creditor_id#"){
                                                    Div(){
                                                        Span(Em(Class: fa icon-user fa-2x)).Style(margin-right:10px;)
                                                        Span(){
                                                            P(Class: h5 m0 text-bold, Body: #request_creditor#)
                                                            P(Class: h6 m0, Body: #creditor_member_info_information#)
                                                        }
                                                    }.Style(display:flex; align-items:center;)
                                                }
                                            }
                                        }
                                        Div(row t6 mt-lg){
                                            Div(col-md-12 text-center){
                                                Div(Class: text-bold, Body: LangRes(crediting_signature))
                                                If(#request_pub_creditor# != ""){
                                                    Div(Class: preview, Body: #request_pub_creditor#)
                                                }.Else{
                                                    Div(Class: preview, Body: LangRes(crediting_waiting))
                                                }
                                            }
                                        }
                                        Div(row t6 mt){
                                            Div(col-md-12 text-center){
                                                Div(Class: text-bold, Body: LangRes(@1signed_at))
                                                If(#request_sign_creditor# != 0){
                                                    Div(Body: DateTime(DateTime: #request_sign_creditor#, Format: "DD.MM.YYYY HH:MI"))
                                                }.Else{
                                                    Div(Class: preview, Body: LangRes(crediting_waiting))
                                                }
                                            }
                                        }
                                        If(#request_status#==2){
                                            If(And(#creditor_id#==#key_id#,#request_sign_borrower#>0,#request_sign_creditor#==0)){
                                                Div(row mt-lg){
                                                    Div(col-sm-6 col-sm-offset-3 col-lg-6 col-lg-offset-3){
                                                        Button(Body: LangRes(@1reject), Class: btn btn-danger pull-left, Contract: CreditingSignReject, Params: "Id=#Id#", Page: crediting_view, PageParams: "Id=#Id#")
                                                        Button(Body: LangRes(@1accept), Class: btn btn-success pull-right, Contract: CreditingSignAccept, Params: "Id=#Id#", Page: crediting_view, PageParams: "Id=#Id#")
                                                    }
                                                }
                                            }
                                        }
                                    }.Style(
                                        height: #hh#px;
                                    )
                                }
                            }
                        }
                    }
                    Div(list-group-item){
                        Button(Class: btn bg-gray-lighter ml-sm buttons, Page: crediting_list){
                            Span(Em(Class: fa fa-chevron-left fa-1x)
                            Span(Class: ml-sm, Body: LangRes(@1back))
                        }
                        If(#notific_optional# == 1){
                            Button(Class: btn bg-gray-lighter ml-sm buttons pull-right, Contract: @1NotificationsClose, Params: "NotificId=#notific_id#", Page: crediting_view, PageParams: "Id=#Id#"){
                                Span(Em(Class: fa fa-flag fa-1x)
                                Span(Class: ml-sm, Body: LangRes(@1mark_read))
                            }
                        }
                        If(#creditor_access_id# > 0){
                            SetVar(current_address, Address(#key_id#))
                            DBFind("crediting_subs", fsdf).Where({"request_id": #Id#, "creditor": #current_address#, "deleted": 0}).Vars(sub)
                            If(#sub_id#>0){
                                Button(Class: btn bg-gray-lighter ml-sm buttons pull-right, Page: crediting_view, PageParams: "Id=#Id#", Contract: CreditingSubscribe, Params: "Id=#Id#"){
                                    Span(Em(Class: fa fa-close fa-1x)
                                    Span(Class: ml-sm, Body: LangRes(crediting_unsubscribe))
                                }
                            }.Else{
                                Button(Class: btn bg-gray-lighter ml-sm buttons pull-right, Page: crediting_view, PageParams: "Id=#Id#", Contract: CreditingSubscribe, Params: "Id=#Id#"){
                                    Span(Em(Class: fa fa-check fa-1x)
                                    Span(Class: ml-sm, Body: LangRes(crediting_subscribe))
                                }
                            }
                        } 
                    }
                }.Style(
                    .buttons{border: 1px solid #dde6e9;}
                )
            }
        }
    }.Else{
        Div(col-md-12 alert alert-danger text-center){
            LangRes(@1attention)
        }
    }
}.Style(
    .preview {
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
    }
    .t3 {font-size:24px;}
    .t4 {font-size:18px;}
    .t5 {font-size:14px;}
    .t6 {font-size:12px;}
    .break {word-break: break-all;}
)