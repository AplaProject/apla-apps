{
    "name": "Block cron",
    "data": [
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "MenuItem(Title:\"Blockcron\", Page: blockcron_list, Icon:\"icon-folder\")",
            "Name": "admin_menu",
            "Type": "menu"
        },
        {
            "Name": "back",
            "Trans": "{\"en\":\"Back\"}",
            "Type": "languages"
        },
        {
            "Name": "block_timer",
            "Trans": "{\"en\":\"Delayed contract\"}",
            "Type": "languages"
        },
        {
            "Name": "blockcron_list",
            "Trans": "{\"en\":\"Delayed contracts\"}",
            "Type": "languages"
        },
        {
            "Name": "cancel",
            "Trans": "{\"en\":\"Cancel\"}",
            "Type": "languages"
        },
        {
            "Name": "contract",
            "Trans": "{\"en\":\"Contract\"}",
            "Type": "languages"
        },
        {
            "Name": "count",
            "Trans": "{\"en\":\"Count\"}",
            "Type": "languages"
        },
        {
            "Name": "create",
            "Trans": "{\"en\":\"Create\"}",
            "Type": "languages"
        },
        {
            "Name": "done",
            "Trans": "{\"en\":\"Done\"}",
            "Type": "languages"
        },
        {
            "Name": "edit",
            "Trans": "{\"en\":\"Edit\"}",
            "Type": "languages"
        },
        {
            "Name": "interval",
            "Trans": "{\"en\":\"Interval\"}",
            "Type": "languages"
        },
        {
            "Name": "limit",
            "Trans": "{\"en\":\"Limit\"}",
            "Type": "languages"
        },
        {
            "Name": "next_block",
            "Trans": "{\"en\":\"Next block\"}",
            "Type": "languages"
        },
        {
            "Name": "save",
            "Trans": "{\"en\":\"Save\"}",
            "Type": "languages"
        },
        {
            "Name": "start_block",
            "Trans": "{\"en\":\"Start block\"}",
            "Type": "languages"
        },
        {
            "Name": "want_delete_block_timer",
            "Trans": "{\"en\":\"Delete delayed contract?\"}",
            "Type": "languages"
        },
        {
            "Name": "yes",
            "Trans": "{\"en\":\"Yes\"}",
            "Type": "languages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetTitle($block_timer$)\r\n\r\nSetVar(contracts_limit, 200)\r\nDBFind(contracts, src_contracts).Limit(#contracts_limit#)\r\n\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        LinkPage(Body: $blockcron_list$, Page: blockcron_list)\r\n        Span(/, mh-sm)\r\n        Span($create$, text-muted)\r\n    }\r\n    Div(container){\r\n        Div(row){\r\n            Div(col-md-8 col-md-offset-2){\r\n                Form(panel panel-primary){\r\n                    Div(panel-heading){\r\n                        $create$\r\n                    }\r\n                    Div(panel-body){\r\n                        Div(form-group){\r\n                            Div(row){\r\n                                Div(col-md-3 text-right mt-sm){\r\n                                    Label(For: contract_name){\r\n                                        LangRes($contract$)\r\n                                    }\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Select(Name: contract_name, Source: src_contracts, NameColumn: name, ValueColumn: name)\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(form-group){\r\n                            Div(row){\r\n                                Div(col-md-3 text-right mt-sm){\r\n                                    Label(For: start_block){\r\n                                        LangRes($start_block$)\r\n                                    }\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Input(Name: start_block, Type: number)\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(form-group){\r\n                            Div(row){\r\n                                Div(col-md-3 text-right mt-sm){\r\n                                    Label(For: every_block){\r\n                                        LangRes($interval$)\r\n                                    }\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Input(Name: every_block, Type: number)\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(form-group){\r\n                            Div(row){\r\n                                Div(col-md-3 text-right mt-sm){\r\n                                    Label(For: limit){\r\n                                        LangRes($limit$)\r\n                                    }\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Input(Name: limit, Type: number)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(panel-footer text-right){\r\n                        Button(Page: blockcron_list, Body: $back$, Class: btn btn-default pull-left)\r\n                        Button(Contract: BlockCronCreate, Body: $create$, Class: btn btn-primary, Page: blockcron_list)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "blockcron_create",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "SetTitle($block_timer$)\r\n\r\nIf(#id# > 0){\r\n    DBFind(Name: delayed_contracts).WhereId(#id#).Vars(delayed_contract)\r\n}.Else{\r\n    SetVar(#delayed_contract_contract#, )\r\n    SetVar(#delayed_contract_every_block#, )\r\n}\r\n\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        LinkPage(Body: $blockcron_list$, Page: blockcron_list)\r\n        Span(/, mh-sm)\r\n        Span($edit$, text-muted)\r\n    }\r\n    Div(container){\r\n        Div(row){\r\n            Div(col-md-8 col-md-offset-2){\r\n                Form(panel panel-primary){\r\n                    Div(panel-heading){\r\n                        $edit$\r\n                    }\r\n                    Div(panel-body){\r\n                        Div(form-group){\r\n                            Div(row){\r\n                                Div(col-md-3 text-right mt-sm){\r\n                                    Label(For: contract){\r\n                                        LangRes($contract$)\r\n                                    }\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Span(#delayed_contract_contract#)\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(form-group){\r\n                            Div(row){\r\n                                Div(col-md-3 text-right mt-sm){\r\n                                    Label(For: start_block){\r\n                                        LangRes($start_block$)\r\n                                    }\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Input(Name: start_block, Type: number, Value: #delayed_contract_block_id#)\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(form-group){\r\n                            Div(row){\r\n                                Div(col-md-3 text-right mt-sm){\r\n                                    Label(For: every_block){\r\n                                        LangRes($interval$)\r\n                                    }\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Input(Name: every_block, Type: number, Value: #delayed_contract_every_block#)\r\n                                }\r\n                            }\r\n                        }\r\n                        Div(form-group){\r\n                            Div(row){\r\n                                Div(col-md-3 text-right mt-sm){\r\n                                    Label(For: limit){\r\n                                        LangRes($limit$)\r\n                                    }\r\n                                }\r\n                                Div(col-md-9 text-left){\r\n                                    Input(Name: limit, Type: number, Value: #delayed_contract_limit#)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(panel-footer text-right){\r\n                        Button(Page: blockcron_list, Body: $back$, Class: btn btn-default pull-left)\r\n                        Button(Contract: BlockCronEdit, Params: \"id=#id#\", Body: $save$, Class: btn btn-primary, Page: blockcron_list)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Name": "blockcron_edit",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "SetTitle($blockcron_list$)\r\nAddToolButton(Title: $create$, Icon:\"icon icon-clock\", Page: blockcron_create)\r\n\r\nIf(GetVar(query)!=\"\"){\r\n    SetVar(cron_where, \"key_id=#key_id# and contract = '#query#' and not deleted\")\r\n}.Else{\r\n    SetVar(cron_where, \"key_id=#key_id# and not deleted\")\r\n    SetVar(query,)\r\n}\r\n\r\nDiv(content-wrapper){\r\n    Div(panel panel-primary){\r\n        Div(panel panel-body){\r\n            Div(row){\r\n                Div(col-md-12){\r\n                    Form(input-group){\r\n                        Div(Class: input-group-addon){\r\n                            $contract$\r\n                        }\r\n                        Input(Name: query_input, Value: #query#)\r\n                        Div(input-group-btn){\r\n                            Button(Class: btn btn-default fa fa-search, Page: blockcron_list, PageParams: \"query=Val(query_input)\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            DBFind(delayed_contracts,src_cron).Columns(contract,block_id,every_block,counter,limit,deleted::int,id).Where(#cron_where#).Order(id desc).Custom(_actions){\r\n                Div(text-right){\r\n                    Div(input-group-btn){\r\n                        Button(Contract: BlockCronEdit, Class: btn btn-danger icon-trash, Params:\"id=#id#,deleted=1\", Page:blockcron_list).Alert(Text: $want_delete_block_timer$,ConfirmButton:$yes$, CancelButton: $cancel$)\r\n                        Button(Class:btn btn-primary fa fa-edit, Page:blockcron_edit, PageParams: \"id=#id#\")\r\n                    }\r\n                }\r\n            }.Custom(_next_block){\r\n                If(Or(#counter# < #limit#, #limit# == 0)){\r\n                    Span(Class: text-warning, Body: #block_id#)\r\n                }.Else{\r\n                    Span(Class: text-success, Body: $done$)\r\n                }\r\n            }\r\n            Table(src_cron, \"$contract$=contract,$interval$=every_block,$next_block$=_next_block,$count$=counter,$limit$=limit,=_actions\")\r\n        }\r\n    }\r\n}",
            "Name": "blockcron_list",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Conditions": "true",
            "Value": "contract BlockCronCreate {\r\n    data {\r\n        contract_name string\r\n        limit int\r\n        start_block int\r\n        every_block int\r\n    }\r\n    conditions {\r\n        if $start_block < $block {\r\n            $start_block = $block + 1\r\n        }\r\n    }\r\n    action {\r\n        NewDelayedContract(\"Contract,EveryBlock,Conditions,BlockID,Limit\", $contract_name, $every_block, ``, $start_block, $limit)\r\n    }\r\n}",
            "Name": "BlockCronCreate",
            "Type": "contracts"
        },
        {
            "Conditions": "true",
            "Value": "contract BlockCronEdit {\r\n    data {\r\n        id int\r\n        contract_name string \"optional\"\r\n        every_block int \"optional\"\r\n        limit int \"optional\"\r\n        start_block int \"optional\"\r\n        deleted int \"optional\"\r\n    }\r\n    conditions {\r\n        var original_cron map\r\n        original_cron = DBFind(\"delayed_contracts\").Where(\"id = ? and key_id = ?\", $id, $key_id).Row()\r\n\r\n        if !original_cron {\r\n            warning Sprintf(\"Delayed contract #%v not found\", $id)\r\n        }\r\n\r\n        if !$contract_name {\r\n            $contract_name = original_cron[\"contract\"]\r\n        }\r\n        if !$every_block {\r\n            $every_block = Int(original_cron[\"every_block\"])\r\n        }\r\n        if !$limit {\r\n            $limit = Int(original_cron[\"limit\"])\r\n        }\r\n        if !$start_block {\r\n            $start_block = Int(original_cron[\"start_block\"])\r\n        }\r\n        if !$deleted {\r\n            $deleted = 0\r\n        }\r\n        $conditions = Str(original_cron[\"conditions\"])\r\n        if $start_block < $block {\r\n            $start_block = $block + 1\r\n        }\r\n    }\r\n    action {\r\n        EditDelayedContract(\"Id,Contract,EveryBlock,Conditions,BlockID,Limit,Deleted\", $id, $contract_name, $every_block, $conditions, $start_block, $limit, $deleted)\r\n    }\r\n}",
            "Name": "BlockCronEdit",
            "Type": "contracts"
        }
    ]
}