{
    "name": "Power of attorney",
    "conditions": "ContractConditions(\"@1DeveloperCondition\")",
    "data": [
        {
            "Name": "default_menu",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "MenuItem(Title:$@1poa_list$, Page:@1poa_list, Icon:\"icon-user-following\")",
            "Type": "menu"
        },
        {
            "Name": "poa",
            "Columns": "[\n    {\n        \"name\":\"poa_sender\",\n        \"type\":\"json\",\n        \"conditions\":\"false\"\n    },\n    {\n        \"name\":\"date_created\",\n        \"type\":\"number\",\n        \"conditions\":\"false\"\n    },\n    {\n        \"name\":\"date_expiration\",\n        \"type\":\"number\",\n        \"conditions\":\"false\"\n    },\n    {\n        \"name\":\"deleted\",\n        \"type\":\"number\",\n        \"conditions\":\"ContractAccess(\\\"@1PoaDelete\\\")\"\n    },\n    {\n        \"name\":\"contract\",\n        \"type\":\"text\",\n        \"conditions\":\"false\"\n    },\n    {\n        \"name\":\"ecosystem\",\n        \"type\":\"number\",\n        \"conditions\":\"false\"\n    },\n    {\n        \"name\":\"params\",\n        \"type\":\"json\",\n        \"conditions\":\"ContractAccess(\\\"@1PoaUpdateParams\\\")\"\n    },\n    {\n        \"name\":\"template_id\",\n        \"type\":\"number\",\n        \"conditions\":\"false\"\n    },\n    {\n        \"name\":\"poa_recipient\",\n        \"type\":\"json\",\n        \"conditions\":\"false\"\n    },\n    {\n        \"name\":\"date_deleted\",\n        \"type\":\"number\",\n        \"conditions\":\"ContractAccess(\\\"@1PoaDelete\\\")\"\n    }\n]",
            "Permissions": "{\"insert\": \"ContractAccess(\\\"@1PoaAdd\\\")\", \"update\": \"ContractAccess(\\\"@1PoaDelete\\\",\\\"@1PoaUpdateParams\\\")\", \"new_column\": \"ContractConditions(\\\"@1AdminCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Name": "poa_templates",
            "Columns": "[\n    {\n        \"name\":\"deleted\",\n        \"type\":\"number\",\n        \"conditions\":\"ContractAccess(\\\"@1PoaTemplateDelete\\\")\"\n    },\n    {\n        \"name\":\"contract\",\n        \"type\":\"text\",\n        \"conditions\":\"false\"\n    },\n    {\n        \"name\":\"ecosystem\",\n        \"type\":\"number\",\n        \"conditions\":\"false\"\n    },\n    {\n        \"name\":\"date_created\",\n        \"type\":\"number\",\n        \"conditions\":\"false\"\n    },\n    {\n        \"name\":\"params\",\n        \"type\":\"json\",\n        \"conditions\":\"ContractAccess(\\\"@1PoaTemplateEdit\\\")\"\n    },\n    {\n        \"name\":\"creator\",\n        \"type\":\"json\",\n        \"conditions\":\"false\"\n    },\n    {\n        \"name\":\"date_deleted\",\n        \"type\":\"number\",\n        \"conditions\":\"ContractAccess(\\\"@1PoaTemplateDelete\\\")\"\n    }\n]",
            "Permissions": "{\"insert\": \"ContractAccess(\\\"@1PoaTemplateAdd\\\")\", \"update\": \"ContractAccess(\\\"@1PoaTemplateDelete\\\",\\\"@1PoaTemplateEdit\\\")\", \"new_column\": \"ContractConditions(\\\"@1AdminCondition\\\")\"}",
            "Type": "tables"
        },
        {
            "Name": "poa_add",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Form(){\n    Input(Name:TemplateId, Class: hidden, Value: #template_id#)\n    DBFind(@1poa_templates).Vars(pre).Where({id:#template_id#,ecosystem:#ecosystem_id#})\n    Div(row){\n        Div(col-md-3 mt-sm text-right){\n            Label(){\n                LangRes(@1recipient)\n            }\n        }\n        Div(col-md-9){\n            Input(Name: Recipient, Placeholder: \"xxxx-xxxx-xxxx-xxxx-xxxx\")\n        }\n    }\n    Div(row mt-sm){\n        Div(col-md-3 mt-sm text-right){\n            Label(){\n                LangRes(@1expiration_date)\n            }\n        }\n        Div(col-md-9){\n            Div(row){\n                Div(col-md-6){\n                    Input(Name: DateExpiration, Type: date)\n                }\n                \n                Div(col-md-6){\n                    Input(Name: TimeExpiration, Type: time)\n                }\n            }\n        }\n    }\n    Div(row mt-lg){\n        Div(col-md-3 mt-sm text-right){\n            Label(){\n                LangRes(@1contract)\n            }\n        }\n        Div(col-md-9){\n            Input(Name:ContractName, Disabled: \"true\", Value: #pre_contract#)\n        }\n    }\n    Div(row mt){\n        Div(col-md-3){}\n        Div(col-md-9){\n            Div(row){\n                Div(col-md-12){\n                    Div(row){\n                        Div(col-md-6){\n                            Span(Class: h6 m0 text-muted, Body: $@1parameter$)\n                        }\n                        Div(col-md-6){\n                            Span(Class: h6 m0 text-muted, Body: $@1value$)\n                        }\n                    }\n                    JsonToSource(pv, #pre_params#)\n                    ForList(Source: pv){\n                        Div(row mt-sm){\n                            Div(col-md-6){\n                                Input(Name: ParamArr, Value: `#key#`, Disabled: 1)\n                            }\n                            Div(col-md-6){\n                                Input(Name: ValueArr)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    Button(Body: LangRes(@1add), Class: btn btn-primary pull-right mt, Page: @1poa_list, Contract: @1PoaAdd)\n    Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: @1poa_template_list)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_list",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "SetVar(this_page, @1poa_list).(this_table, @1poa)\nInclude(@1pager_header)\n\nSetTitle(\"$@1poa_list$\")\nAddToolButton(Page: @1poa_template_list, Title:$@1poa_template_list$)\n\nIf(GetVar(search)){\n    SetVar(where, {ecosystem:#ecosystem_id#, contract:{\"$like\":#search#}, deleted:0})\n}.Else{\n    SetVar(where, {ecosystem:#ecosystem_id#, deleted:0}).(search,)\n}\n\nDiv(list-group-item ml-lg mr-lg pt-lg){\n    SetVar(search_name, LangRes(@1contract))\n    Include(@1search)\n}\n\nDBFind(#this_table#, src).Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Columns(\"id,contract,params,date_created,date_expiration,poa_recipient->member_id,poa_recipient->member_name,poa_recipient->image_id,poa_sender->member_id,poa_sender->member_name,poa_sender->image_id,deleted\").Count(poa_count).Custom(_contract){\n    Span(Class: h5 text-bold, Body: #contract#)\n}.Custom(_creator){\n    If(And(#creator.member_name#!=NULL,#creator.member_name#!=\"\")){\n        LinkPage(Class: #style_link# text-bold, Page: @1profile_view, PageParams: \"v_key_id=#creator.member_id#\"){\n            #creator.member_name#\n        }\n    }\n}.Custom(_date_created){\n    Div(h6){\n        Div(text-nowrap){DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\")}\n    }\n}.Custom(_date_expiration){\n    Div(h6){\n        Div(text-nowrap){DateTime(DateTime: #date_expiration#, Format: \"DD.MM.YYYY HH:MI\")}\n    }\n}.Custom(custom_recipient){\n    LinkPage(Class: text-primary h5 text-bold, Page: @1profile_view, PageParams: \"v_key_id=#poa_recipient.member_id#\"){\n        If(#poa_recipient.image_id#>0){\n            Image(Src: Binary().ById(#poa_recipient.image_id#), Class: img-circle).Style(width: 30px; border: 1px solid #5A5D63; margin-right: 10px;)\n            Span(#poa_recipient.member_name#)\n        }.Else{\n            Div(){\n                Span(Em(Class: fa icon-user fa-2x)).Style(margin-right:10px;)\n                Span(#poa_recipient.member_name#)\n            }.Style(display:flex; align-items:center;)\n        }\n    }\n}.Custom(custom_arrow){\n    Em(Class: fa fa-long-arrow-right fa-1x #style_text#)\n}.Custom(custom_sender){\n    LinkPage(Class: text-primary h5 text-bold, Page: @1profile_view, PageParams: \"v_key_id=#poa_sender.member_id#\"){\n        If(#poa_sender.image_id#>0){\n            Image(Src: Binary().ById(#poa_sender.image_id#), Class: img-circle).Style(width: 30px; border: 1px solid #5A5D63; margin-right: 10px;)\n            Span(#poa_sender.member_name#)\n        }.Else{\n            Div(){\n                Span(Em(Class: fa icon-user fa-2x)).Style(margin-right:10px;)\n                Span(#poa_sender.member_name#)\n            }.Style(display:flex; align-items:center;)\n        }\n    }\n}.Custom(_params){\n    Span(Class: text-muted h6){\n        JsonToSource(pv, #params#)\n        ForList(Source: pv, Index:s_ind){\n            If(#s_ind#>1){\n                Span(\",\").Style(margin-right: 5px;)\n            }\n            \"#key#\"\n        }\n    }\n}.Custom(_action){\n    Div(text-right button-group text-nowrap){\n        If(#poa_sender.member_id#==#key_id#){\n            If(#deleted# == 0){\n                Button(Class: fa fa-trash btn btn-danger mh-sm, Contract: @1PoaDelete, Params: \"PoaeId=#id#\", Page: #this_page#).Alert(Text: \"$@1sure_want_delete$\", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)\n            }\n        }\n        Button(Class: icon-eye btn btn-default mh-sm, PageParams: \"poa_id=#id#\", Page: @1poa_view).Popup(50, $@1poa_list$)\n    }\n}.Count(count)\n\nDiv(fullscreen){\n    Div(table-responsive ml-lg mr-lg){\n        Div(list-group-item){\n            If(#count# > 0){\n                Table(src, \"$@1contract$=_contract,$@1sender$=custom_sender,=custom_arrow,$@1recipient$=custom_recipient,$@1params$=_params,$@1date_created$=_date_created,$@1expiration_date$=_date_expiration,=_action\")\n            }.Else{\n                Div(Class: text-center h4 text-muted, Body: \"$@1poa_list$ $@1not_founded$\")\n            }                       \n        }.Style(\n            margin-top:-15px;\n            tbody > tr:nth-of-type(odd) {\n                background-color: #f8f9fc;\n            }\n        )\n    }\n}\nDiv(mt-sm ml-lg mr-sm mb-sm){\n    Include(@1pager)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_template_add",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Form(){\n    Div(row){\n        Div(col-md-3 mt-sm text-right){\n            Label(){\n                LangRes(@1contract)\n            }\n        }\n        Div(col-md-9){\n            Input(Name:ContractName)\n        }\n    }\n    Div(row mt-sm){\n        Div(col-md-3 mt text-right){\n            Label(){\n                LangRes(@1params)\n            }\n        }\n        Div(col-md-9){\n            If(GetVar(cs)==\"\"){\n                SetVar(cs,0)\n            }\n            If(#del# == 1){\n                SetVar(cs,Calculate(#cs# - 1))\n            }.Else{\n                SetVar(cs,Calculate(#cs# + 1))\n            }\n            \n            Range(params_range, 0, #cs#)\n            ForList(Source: params_range){\n                Div(row mt-sm){\n                    Div(col-md-10){\n                        Input(Name:ParamArr)\n                    }\n                    Div(col-md-2 text-center){\n                        If(#cs#==#params_range_index#){\n                            Button(Class:fa fa-trash btn btn-default, PageParams: \"cs=#cs#,del=1\", Page: @1poa_template_add).Popup(Header: $@1template_add$, Width: \"50\")\n                        }\n                    }\n                }\n            }\n            Button(Class: btn-xs btn-link mt, Page: @1poa_template_add, PageParams:\"cs=#cs#\"){\n                Span(Class: h5, Body: $@1add_parameter$)\n            }.Popup(Header: $@1template_add$, Width: \"50\")\n        }\n    }\n    Button(Body: LangRes(@1add), Class: btn btn-primary pull-right mt-sm, Page: @1poa_template_list, Contract: @1PoaTemplateAdd)\n    Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt-sm, Page: @1poa_template_list)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_template_edit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Form(){\n    Input(Name:TemplateId, Class: hidden, Value: #template_id#)\n    DBFind(@1poa_templates).Vars(pre).Where({id:#template_id#,ecosystem:#ecosystem_id#})\n    Div(row){\n        Div(col-md-3 mt-sm text-right){\n            Label(){\n                LangRes(@1contract)\n            }\n        }\n        Div(col-md-9){\n            Input(Name:ContractName, Disabled: \"true\", Value: #pre_contract#)\n        }\n    }\n    Div(row mt-sm){\n        Div(col-md-3 mt text-right){\n            Label(){\n                LangRes(@1params)\n            }\n        }\n        Div(col-md-9){\n            JsonToSource(pv, #pre_params#)\n            ForList(Source: pv, Index:s_ind){\n                SetVar(max_sec, #s_ind#)\n            }\n            If(GetVar(cs)==\"\"){\n                SetVar(cs, #max_sec#)\n            }\n            If(Or(#del_flag#==1,#del_data#>0)){\n                SetVar(cs, Calculate(Exp:#cs#-1, Type: int))\n            }\n            \n            SetVar(next_sec, Calculate(Exp:#cs#+1, Type: int))\n            SetVar(data_sec, Calculate(Exp:#cs#-#max_sec#, Type: int))\n\n            ForList(Source: pv, Index:s_ind){\n                If(#s_ind#>#cs#){\n                }.Else{\n                    Div(row mt-sm){\n                        Div(col-md-10){\n                            Input(Name: ParamArr, Value: `#key#`)\n                        }\n                        Div(col-md-2 text-center){\n                            If(#s_ind#==#cs#){\n                                Button(Body: Em(Class: fa fa-trash), Class: btn btn-default, PageParams: \"template_id=#template_id#,cs=#cs#,del_data=#s_ind#\", Page: @1poa_template_edit).Popup(Header: $@1template_edit$, Width: \"50\")\n                            }\n                        }\n                    }\n                }\n            }\n            Range(params_range, #max_sec#, #cs#)\n            ForList(Source: params_range, Index:s_ind){\n                Div(row mt-sm){\n                    Div(col-md-10){\n                        Input(Name:ParamArr)\n                    }\n                    Div(col-md-2 text-center){\n                        If(#s_ind#==#data_sec#){\n                            Button(Body: Em(Class: fa fa-trash), Class: btn btn-default, PageParams: \"template_id=#template_id#,cs=#cs#,del_flag=1\", Page: @1poa_template_edit).Popup(Header: $@1template_edit$, Width: \"50\")\n                        }\n                    }\n                }\n            }\n            Button(Class: btn-xs btn-link mt, Page: @1poa_template_edit, PageParams: \"template_id=#template_id#,cs=#next_sec#\"){\n                Span(Class: h5, Body: $@1add_parameter$)\n            }.Popup(Header: $@1ecosystem$, Width: \"50\")\n        }\n    }\n    Button(Body: LangRes(@1save), Class: btn btn-primary pull-right mt-sm, Page: @1poa_template_list, Contract: @1PoaTemplateEdit)\n    Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt-sm, Page: @1poa_template_list)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_template_list",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "SetVar(this_page, @1poa_template_list).(this_table, @1poa_templates)\nInclude(@1pager_header)\n\nSetTitle(\"$@1poa_template_list$\")\nSpan(Class: h5 m0 mb ml-lg){\n    LinkPage(Class: ml-sm, Body: $@1poa_list$, Page: @1poa_list)\n    Span(Class: text-muted mh-sm, Body: /)\n    Span(Class: text-muted, Body: $@1poa_template_list$)\n}.Style(\n    display: inline-block;\n)\nSetVar(admin_role_id, EcosysParam(Name:role_admin))\nIf(And(#admin_role_id#>0,#role_id#==#admin_role_id#)){\n    AddToolButton(Page: @1poa_template_add, Title: $@1template_add$).Popup(Header: $@1template_add$, Width: \"50\")\n}\n\nIf(GetVar(search)){\n    SetVar(where, {ecosystem:#ecosystem_id#, contract:{\"$like\":#search#}, deleted:0})\n}.Else{\n    SetVar(where, {ecosystem:#ecosystem_id#, deleted:0}).(search,)\n}\n\nDiv(list-group-item ml-lg mr-lg pt-lg){\n    SetVar(search_name, LangRes(@1contract))\n    Include(@1search)\n}\n\nDBFind(#this_table#, src).Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Columns(\"id,contract,params,creator->member_id,creator->member_name,date_created,deleted\").Count(templates_count).Custom(_contract){\n    Button(Class: btn-xs btn-link, PageParams: \"template_id=#id#\", Page: @1poa_add){\n        Span(Class: h5 text-bold, Body: #contract#)\n    }.Popup(50, $@1poa_add$)\n}.Custom(_creator){\n    If(And(#creator.member_name#!=NULL,#creator.member_name#!=\"\")){\n        LinkPage(Class: text-primary, Page: @1profile_view, PageParams: \"v_key_id=#creator.member_id#\"){\n            #creator.member_name#\n        }\n    }\n}.Custom(_date){\n    Div(h6){\n        Div(text-nowrap){DateTime(DateTime: #date_created#, Format: \"DD.MM.YYYY HH:MI\")}\n    }\n}.Custom(_params){\n    Span(Class: text-muted h6){\n        JsonToSource(pv, #params#)\n        ForList(Source: pv, Index:s_ind){\n            If(#s_ind#>1){\n                Span(\",\").Style(margin-right: 5px;)\n            }\n            \"#key#\"\n        }\n    }\n}.Custom(_action){\n    If(#creator.member_id#==#key_id#){\n        Div(text-right button-group text-nowrap){\n            If(#deleted# == 0){\n                Button(Class: fa fa-trash btn btn-danger mh-sm, Contract: @1PoaTemplateDelete, Params: \"TemplateId=#id#\", Page: #this_page#).Alert(Text: \"$@1sure_want_delete$\", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)\n            }\n            Button(Class: fa fa-edit btn btn-default mh-sm, PageParams: \"template_id=#id#\", Page: @1poa_template_edit).Popup(50, $@1template_edit$)\n        }\n    }\n}.Count(count)\n\nDiv(fullscreen){\n    Div(table-responsive ml-lg mr-lg){\n        Div(list-group-item){\n            If(#count# > 0){\n                Table(src, \"$@1contract$=_contract,$@1date_created$=_date,$@1creator$=_creator,$@1params$=_params,=_action\")\n            }.Else{\n                Div(Class: text-center h4 text-muted, Body: \"$@1poa_template_list$ $@1not_founded$\")\n            }                       \n        }.Style(\n            margin-top:-15px;\n            tbody > tr:nth-of-type(odd) {\n                background-color: #f8f9fc;\n            }\n        )\n    }\n}\nDiv(mt-sm ml-lg mr-sm mb-sm){\n    Include(@1pager)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "poa_view",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "Form(){\n    Input(Name:TemplateId, Class: hidden, Value: #template_id#)\n    DBFind(@1poa).Vars(pre).Where({id:#poa_id#,ecosystem:#ecosystem_id#}).Columns(\"poa_sender->member_id,poa_recipient->member_id,contract,params,date_expiration\")\n    Div(row){\n        Div(col-md-3 mt-sm text-right){\n            Label(){\n                LangRes(@1sender)\n            }\n        }\n        Div(col-md-9){\n            SetVar(sender_id, Address(#pre_poa_sender_member_id#))\n            Input(Name: Recipient, Disabled: \"true\", Value: #sender_id#)\n        }\n    }\n    Div(row mt-sm){\n        Div(col-md-3 mt-sm text-right){\n            Label(){\n                LangRes(@1recipient)\n            }\n        }\n        Div(col-md-9){\n            SetVar(recipient_id, Address(#pre_poa_recipient_member_id#))\n            Input(Name: Recipient, Disabled: \"true\", Value: #recipient_id#)\n        }\n    }\n    Div(row mt-sm){\n        Div(col-md-3 mt-sm text-right){\n            Label(){\n                LangRes(@1expiration_date)\n            }\n        }\n        Div(col-md-9){\n            SetVar(date_expiration, DateTime(DateTime: #pre_date_expiration#, Format: \"DD.MM.YYYY HH:MI\"))\n            Input(Name: DateExpiration, Disabled: \"true\", Value: #date_expiration#)\n        }\n    }\n    Div(row mt-lg){\n        Div(col-md-3 mt-sm text-right){\n            Label(){\n                LangRes(@1contract)\n            }\n        }\n        Div(col-md-9){\n            Input(Name:ContractName, Disabled: \"true\", Value: #pre_contract#)\n        }\n    }\n    Div(row mt){\n        Div(col-md-3){}\n        Div(col-md-9){\n            Div(row){\n                Div(col-md-12){\n                    Div(row){\n                        Div(col-md-6){\n                            Span(Class: h6 m0 text-muted, Body: $@1parameter$)\n                        }\n                        Div(col-md-6){\n                            Span(Class: h6 m0 text-muted, Body: $@1value$)\n                        }\n                    }\n                    JsonToSource(pv, #pre_params#)\n                    ForList(Source: pv){\n                        Div(row mt-sm){\n                            Div(col-md-6){\n                                Input(Name: ParamArr, Value: `#key#`, Disabled: 1)\n                            }\n                            Div(col-md-6){\n                                Input(Name: ValueArr, Value: `#value#`, Disabled: 1)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: @1poa_list)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "tokens_send",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(GetVar(back_page)==\"\"){\n    SetVar(Name: back_page, Value: \"@1members_list\")\n}\n\nForm(){\n    If(Or(#v_key_id#>0,#v_key_id#<0)){\n        SetVar(Name: v_address, Value: Address(#v_key_id#))\n    }.Else{\n        SetVar(Name: v_address, Value: \"\")\n    }\n    If(GetVar(v_amount)==\"\"){\n        SetVar(Name: v_amount, Value: \"\")\n    }\n\n    If(#poa# == 1){\n        Div(row){\n            Div(col-sm-3 mt-sm text-right){\n                Label($@1poa$)\n                Span(Class: text-danger, Body:*)\n            }\n            Div(col-sm-9){\n                Div(input-group){\n                    DBFind(@1poa, src_poa).Where({\"poa_recipient->member_id\":#key_id#, \"contract\":\"@1PoaTokensSend\", \"ecosystem\": #ecosystem_id#, \"deleted\":0}).Columns(\"id,poa_sender,poa_sender->member_id,params->amount_max\").Count(poa_count).Custom(_name){\n                        DBFind(@1keys).Where({id:#poa_sender.member_id#, \"ecosystem\": #ecosystem_id#}).Columns(\"amount\").Vars(k)\n                        Address(#poa_sender.member_id#) (Balance: Money(#k_amount#), Max: Money(#params.amount_max#))\n                    }.Custom(_id){\n                        #poa_sender.member_id#\n                    }\n                    If(#poa_count#>0){\n                        Select(Name: Sender, Source: src_poa, NameColumn: _name, ValueColumn: poa_sender.member_id)\n                    }.Else{\n                        Input(Name: SenderNF, Disabled: 1, Value: $@1poa_not_found$)\n                    }\n                    Div(input-group-btn){\n                        Button(Class: btn btn-primary fa fa-toggle-on, Page: @1tokens_send, PageParams: \"back_page=#back_page#,poa=0,v_key_id=#v_key_id#,v_amount=Val(Amount)\").Popup(Header: $@1tokens_send$, Width: \"50\")\n                    }\n                }\n                Div(Class: m0 h6 text-muted, Body: $@1send_tokens_by_poa$)\n            }\n        }\n    }.Else{\n        Div(row){\n            Div(col-sm-3 mt-sm text-right){\n                Label($@1sender$)\n                Span(Class: text-danger, Body:*)\n            }\n            Div(col-sm-9){\n                Div(input-group){\n                    SetVar(m_a, Address(#key_id#))\n                    Input(Name: Sender, Disabled: 1, Value: #m_a#)\n                    Div(input-group-btn){\n                        Button(Class: btn btn-primary fa fa-toggle-off, Page: @1tokens_send, PageParams: \"back_page=#back_page#,poa=1,v_key_id=#v_key_id#,v_amount=Val(Amount)\").Popup(Header: $@1tokens_send$, Width: \"50\")\n                    }\n                }\n                Div(Class: m0 h6 text-muted, Body: $@1send_tokens_my_balance$)\n            }\n        }\n    }\n    Div(row mt){\n        Div(col-sm-3 mt-sm text-right){\n            Label($@1recipient$)\n            Span(Class: text-danger, Body:*)\n        }\n        Div(col-sm-9){\n            Input(Name: Recipient, Placeholder: \"xxxx-xxxx-xxxx-xxxx-xxxx\", Value: #v_address#)\n        }\n    }\n    Div(row mt-sm){\n        Div(col-sm-3 mt-sm text-right){\n            Label($@1amount$)\n            Span(Class: text-danger, Body:*)\n        }\n        Div(col-sm-9){\n            Input(Name: Amount, Type: Number, Value: #v_amount#)\n        }\n    }\n    If(#poa# == 1){\n        If(#poa_count#>0){\n            Button(Body: LangRes(@1send), Class: btn btn-primary pull-right mt, Page: #back_page#, Contract: @1PoaTokensSend).Alert(Text: \"$@1want_send_tokens$\", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)\n        }\n    }.Else{\n        Button(Body: LangRes(@1send), Class: btn btn-primary pull-right mt, Page: #back_page#, Contract: @1TokensSend).Alert(Text: \"$@1want_send_tokens$\", ConfirmButton: $@1yes$, CancelButton: $@1no$, Icon: question)\n    }\n    Button(Body: LangRes(@1back), Class: btn btn-default pull-right mt, Page: #back_page#)\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "PoaAdd",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract PoaAdd {\n    data {\n        Recipient string\n        DateExpiration string \"optional\"\n        TimeExpiration string \"optional\"\n        TemplateId int\n        ParamArr array\n        ValueArr array\n    }\n\n    func getMemberInfo(kid int) map {\n        var res member map\n        member = DBFind(\"@1members\").Where({ecosystem:$ecosystem_id, id:kid}).Row()\n        if member {\n            res[\"member_id\"] = member[\"id\"]\n            res[\"member_name\"] = member[\"member_name\"]\n            res[\"image_id\"] = member[\"image_id\"]\n        } else {\n            member = DBFind(\"@1keys\").Where({ecosystem:$ecosystem_id, id:kid}).Row()\n            if member {\n                res[\"member_id\"] = member[\"id\"]\n                res[\"member_name\"] = IdToAddress(Int(member[\"id\"]))\n                res[\"image_id\"] = 0\n            }\n        }\n        return res\n    }\n\n    func trimZeroTime(s string) string {\n        if Contains(s, \"T00:00:00Z\") {\n            s = s Replace(s, \"T00:00:00Z\", \"\")\n        }\n        return s\n    }\n\n    func dateAddTime(d, t string) string {\n        var dt string\n        if Size(t) == 5 {\n            dt = Sprintf(\"%v %v:00\", trimZeroTime(d), t)\n        }\n        return dt\n    }\n\n    conditions {\n        //check date\n        $date_expiration = dateAddTime($DateExpiration, $TimeExpiration)\n        if UnixDateTime($date_expiration) == 0 {        // invalid datetimes\n            warning LangRes(\"@1invalid_expiration_date\", \"en\") \n        }\n\n        //check the recipient key\n        $recipient_id = AddressToId($Recipient)\n        if $recipient_id == 0 {\n            warning Sprintf(LangRes(\"@1recipient_x_invalid\", \"en\"), $Recipient)\n        }\n\n        //check template\n        $template_map = DBFind(\"@1poa_templates\").Where({ecosystem:$ecosystem_id, id:$TemplateId}).Row()\n        if !$template_map {\n            warning Sprintf(LangRes(\"@1poa_template_not_found\", \"en\"), $Recipient)\n        }\n    }\n    \n    action {\n        var i int params map\n        while i < Len($ParamArr) {\n            params[$ParamArr[i]] = $ValueArr[i]\n            i = i + 1\n        }\n        \n        var m map\n        m[\"contract\"] = $template_map[\"contract\"]\n        m[\"date_created\"] = $block_time \n        m[\"date_expiration\"] = UnixDateTime($date_expiration)\n        m[\"deleted\"] = 0\n        m[\"ecosystem\"] = $ecosystem_id\n        m[\"params\"] = params\n        m[\"poa_recipient\"] = getMemberInfo($recipient_id )\n        m[\"poa_sender\"] = getMemberInfo($key_id)\n        m[\"template_id\"] = $TemplateId\n        $result = DBInsert(\"@1poa\", m)\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "PoaDelete",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract PoaDelete {\n    data {\n        PoaeId int\n    }\n\n    conditions {\n        var poa_map map\n        poa_map = DBFind(\"@1poa\").Where({\"id\":$PoaeId, \"ecosystem\":$ecosystem_id}).Columns(\"id,poa_sender->member_id\").Row()\n        if !poa_map {\n            warning LangRes(\"@1poa_not_found\", \"en\") \n        }\n        if Int(poa_map[\"poa_sender.member_id\"]) != $key_id {\n            warning LangRes(\"@1poa_not_rights_to_delete\", \"en\") \n        }\n    }\n\n    action {\n        var m map\n        m[\"deleted\"] = 1\n        m[\"date_deleted\"] = $block_time\n        DBUpdate(\"@1poa\", $PoaeId, m)\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "PoaTemplateAdd",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract PoaTemplateAdd {\n    data {\n        ContractName string\n        ParamArr array\n    }\n\n    func getMemberInfo(kid int) map {\n        var res member map\n        member = DBFind(\"@1members\").Where({ecosystem:$ecosystem_id, id:kid}).Row()\n        if member {\n            res[\"member_id\"] = member[\"id\"]\n            res[\"member_name\"] = member[\"member_name\"]\n            res[\"image_id\"] = member[\"image_id\"]\n        } else {\n            member = DBFind(\"@1keys\").Where({ecosystem:$ecosystem_id, id:kid}).Row()\n            if member {\n                res[\"member_id\"] = member[\"id\"]\n                res[\"member_name\"] = IdToAddress(Int(member[\"id\"]))\n                res[\"image_id\"] = 0\n            }\n        }\n        return res\n    }\n\n    conditions {\n        var role_id_param string\n        role_id_param = EcosysParam(\"role_admin\")\n        if Size(role_id_param) == 0 {\n            warning LangRes(\"@1poa_not_rights_to_create\", \"en\") \n        }\n        var role_id int\n        role_id = Int(role_id_param)\n        \n        if !RoleAccess(role_id) {\n            warning LangRes(\"@1poa_not_rights_to_create\", \"en\") \n        }  \n    }\n    \n    action {\n        var i int params map\n        while i < Len($ParamArr) {\n            params[$ParamArr[i]] = \"\"\n            i = i + 1\n        }\n\n        var m map\n        m[\"creator\"] = getMemberInfo($key_id)\n        m[\"contract\"] = $ContractName\n        m[\"date_created\"] = $block_time\n        m[\"params\"] = params\n        m[\"deleted\"] = 0\n        m[\"ecosystem\"] = $ecosystem_id\n        $result = DBInsert(\"@1poa_templates\", m)\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "PoaTemplateDelete",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract PoaTemplateDelete {\n    data {\n        TemplateId int\n    }\n\n    conditions {\n        var poa_map map\n        poa_map = DBFind(\"@1poa_templates\").Where({\"id\":$TemplateId, \"ecosystem\":$ecosystem_id}).Columns(\"id,creator->member_id\").Row()\n        if !poa_map {\n            warning LangRes(\"@1poa_template_not_found\", \"en\") \n        }\n        if Int(poa_map[\"creator.member_id\"]) != $key_id {\n            warning LangRes(\"@1poa_not_rights_to_delete\", \"en\")\n        }\n    }\n\n    action {\n        var m map\n        m[\"deleted\"] = 1\n        m[\"date_deleted\"] = $block_time\n        DBUpdate(\"@1poa_templates\", $TemplateId, m)\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "PoaTemplateEdit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract PoaTemplateEdit {\n    data {\n        TemplateId int\n        ParamArr array\n    }\n\n    conditions {\n        var poa_template_map map\n        poa_template_map = DBFind(\"@1poa_templates\").Where({\"id\":$TemplateId, \"ecosystem\":$ecosystem_id}).Columns(\"id,creator->member_id\").Row()\n        if !poa_template_map {\n            warning LangRes(\"@1poa_template_not_found\", \"en\")\n        }\n        if Int(poa_template_map[\"creator.member_id\"]) != $key_id {\n            warning LangRes(\"@1poa_not_rights_to_edit\", \"en\") \n        }\n    }\n    \n    action {\n        var i int params map\n        while i < Len($ParamArr) {\n            params[$ParamArr[i]] = \"\"\n            i = i + 1\n        }\n\n        var m map \n        m[\"params\"] = params\n        DBUpdate(\"@1poa_templates\", $TemplateId, m)\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "PoaUpdateParams",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract PoaUpdateParams {\n    data {\n        PoaId int\n        ParamsStr string\n    }\n\n    func getPermission(cntr string) {\n        var prevContract string\n        prevContract = $stack[0]\n        if Len($stack) > 2 {\n            prevContract = $stack[Len($stack) - 2]\n        }\n        if cntr != prevContract {\n            warning LangRes(\"@1contract_chain_distorted\", \"en\")\n        }\n    }\n\n    conditions {\n        var poa_map map\n        poa_map = DBFind(\"@1poa\").Where({\"id\": $PoaId, \"ecosystem\":$ecosystem_id, \"deleted\": 0}).Columns(\"id,date_expiration,contract,poa_recipient->member_id\").Row()\n\n        if !poa_map {\n            warning LangRes(\"@1poa_not_found\", \"en\")\n        }\n\n        if Int(poa_map[\"poa_recipient.member_id\"]) != $key_id {\n            warning LangRes(\"@1poa_not_rights_to_change\", \"en\") \n        }\n\n        if UnixDateTime(BlockTime()) > Int(poa_map[\"date_expiration\"]) {\n            warning LangRes(\"@1poa_expired\", \"en\")\n        }\n\n        getPermission(Str(poa_map[\"contract\"]))\n    }\n    \n    action {\n        var m map\n        m = JSONDecode($ParamsStr)\n        DBUpdate(\"@1poa\", Int($PoaId), {\"params\": m})\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "PoaTokensSend",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract PoaTokensSend {\n    data {\n        Amount money\n        Sender string\n        Recipient string\n        Comment string \"optional\"\n    }\n\n    func getPermission() {\n        var array_permissions array result i int prevContract string\n        array_permissions = [\"@1PoaTokensSend\"]\n\n        prevContract = $stack[0]\n        if Len($stack) > 2 {\n            prevContract = $stack[Len($stack) - 2]\n        }\n        while i < Len(array_permissions) {\n            var contract_name string\n            contract_name = array_permissions[i]\n            if contract_name==prevContract {\n                result = 1\n            }\n            i = i + 1\n        }\n\n        if result == 0 {\n            warning LangRes(\"@1tokens_transfer_cannot_be_made\", \"en\")\n        }\n    }\n\n    func checkKeys() {\n        $sender_id = AddressToId($Sender)\n        $recipient_id = AddressToId($Recipient)\n\n        //check the sender key\n        if $sender_id == 0 {\n            warning Sprintf(LangRes(\"@1sender_x_invalid\", \"en\"), $Sender)\n        }\n        //check the recipient key\n        if $recipient_id == 0 {\n            warning Sprintf(LangRes(\"@1recipient_x_invalid\", \"en\"), $Recipient)\n        }\n    }\n\n    func checkPoa() {\n        var poa_map map\n        poa_map = DBFind(\"@1poa\").Where({\"contract\":\"@1PoaTokensSend\", \"poa_sender->member_id\": $sender_id, \"poa_recipient->member_id\":$key_id, \"ecosystem\":$ecosystem_id, \"deleted\": 0}).Columns(\"id,date_expiration,params->amount_max,params->amount_max_day,params->amount_max_month,params->amount_day,params->amount_month,params->date_day,params->date_month\").Row()\n        if !poa_map {\n            warning LangRes(\"@1poa_not_found\", \"en\")\n        }\n\n        if UnixDateTime(BlockTime()) > Int(poa_map[\"date_expiration\"]) {\n            warning LangRes(\"@1poa_expired\", \"en\")\n        }\n\n        $poa_id = poa_map[\"id\"]\n        $amount_max = poa_map[\"params.amount_max\"]\n        $amount_max_day = poa_map[\"params.amount_max_day\"]\n        $amount_max_month = poa_map[\"params.amount_max_month\"]\n        $amount_day = poa_map[\"params.amount_day\"]\n        $amount_month = poa_map[\"params.amount_month\"]\n        $date_day = poa_map[\"params.date_day\"]       // 2018-10-19 00:00:00\n        $date_month = poa_map[\"params.date_month\"]   // 2018-10-01 00:00:00\n\n        $cur_date_day = UnixDateTime(Substr(BlockTime(), 0, 10) + \" 00:00:00\")\n        $cur_date_month = UnixDateTime(Substr(BlockTime(), 0, 8) + \"01 00:00:00\")\n    }\n\n    func checkLimit() {\n        if Int($cur_date_day) > Int($date_day) {\n            $date_day = $cur_date_day\n            $amount_day = 0\n        }\n        if Int($cur_date_month) > Int($date_month) {\n            $date_month = $cur_date_month\n            $amount_month = 0\n        }\n\n        if Money($amount_max) < Money($Amount) {\n            warning LangRes(\"poa_exceeded_single_limit\", \"en\")\n        }\n        if Money($amount_max_day) < Money($amount_day) + Money($Amount) {\n            warning LangRes(\"poa_exceeded_daily_limit\", \"en\")\n        }\n        if Money($amount_max_month) < Money($amount_month) + Money($Amount) {\n            warning LangRes(\"poa_exceeded_monthly_limit\", \"en\")\n        }\n    }\n\n    func updateParams() {\n        $amount_day = Money($amount_day) + Money($Amount)\n        $amount_month = Money($amount_month) + Money($Amount)\n\n        var m map\n        m[\"amount_max\"] = Str($amount_max)\n        m[\"amount_max_day\"] = Str($amount_max_day)\n        m[\"amount_max_month\"] = Str($amount_max_month)\n        m[\"amount_day\"] = Str($amount_day)\n        m[\"amount_month\"] = Str($amount_month)\n        m[\"date_day\"] = Str($date_day)\n        m[\"date_month\"] = Str($date_month)\n\n        @1PoaUpdateParams(\"PoaId,ParamsStr\", Int($poa_id), JSONEncode(m))  \n    }\n\n    conditions {\n        getPermission()\n        checkKeys()\n        checkPoa()\n        checkLimit()\n    }\n\n    action {\n        @1TokensTransfer(\"Amount,SenderId,RecipientId,Comment\", $Amount, $sender_id, $recipient_id, $Comment)\n        updateParams()\n    }\n}",
            "Type": "contracts"
        }
    ]
}