contract MSCreate {
    data {
        BufferId int
        Limit int
        LimitDate string
        LimitTime string
        AmountMax money
        AmountMaxDay money
        AmountMaxMonth money
        Sign int
        TemplateId int
        PoaTemplateId int
    }

    func dateAddTime(d, t string) string {
        var dt string
        if Contains(d, "T00:00:00Z") {
            d = Replace(d, "T00:00:00Z", "")
        }
        if Size(t) == 5 {
            dt = Sprintf("%v %v:00", d, t)
        }
        return dt
    }

    conditions {
        $GROUP_SINGLE = 1
        $GROUP_VOTING = 2
        $ROLE_SINGLE = 3
        $ROLE_VOTING = 4
        $NO_LIMIT = 1
        $ONE_SIGN = 1

        $buf = DBFind("@1buffer_data").Where({id:$BufferId, ecosystem:$ecosystem_id}).Columns("value->type,value->units").Row()
        if !$buf {
            warning "not assigned group"
        }
        if Int($buf["value.type"]) == 0 {
            warning "not assigned group"
        }
        $units = JSONDecode($buf["value.units"])

        if $Limit != $NO_LIMIT{
            $limit = UnixDateTime(dateAddTime($LimitDate, $LimitTime))
            if $limit == 0 {
                warning "Invalid Date or Time"
            }
        }

        if $Sign != $ONE_SIGN{
            var templateId int
            templateId = Int(DBFind("@1voting_templates").Where({id:$TemplateId, ecosystem:$ecosystem_id}))
            if templateId == 0{
                warning "Voting template not founded"
            }
            // in the table 1_keys in the multi column is written the id of a template vote
            $multi = templateId
        }else{
            // -1 if the selected "one signature"
            $multi = -1
        }
        var amount_day amount_month date_day date_month int role_ids array
        if $buf["value.type"] == $ROLE_SINGLE || $buf["value.type"] == $ROLE_VOTING{
            role_ids = $units
            $isGroup = false
        }else{
            $isGroup = true
        }
        $PARAMS = ["amount_max", "amount_max_day", "amount_max_month", "amount_day", "amount_month", "date_day", "date_month", "voting_template_id", "role_ids"]
        $VALUES = [$AmountMax, $AmountMaxDay, $AmountMaxMonth, amount_day, amount_month, date_day, date_month, $TemplateId, role_ids]
    }

    action {
        var table string
        table = Sprintf("@%vkeys", $ecosystem_id)
        DBUpdate(table, $key_id, {multi:$multi})

        // users and roles recorded in the table of powers of attorney with these limits
        var params map i lenUnits kid int
        params["DateExpiration"] = $LimitDate
        params["TimeExpiration"] = $LimitTime
        params["TemplateId"] = $PoaTemplateId
        params["ParamArr"] = $PARAMS
        params["ValueArr"] = $VALUES
        if $isGroup{
            lenUnits = Len($units)
            while i < lenUnits{
                kid = Int($units[i])
                params["Recipient"] = IdToAddress(kid)
                CallContract("@1PoaAdd", params)
                i = i + 1
            }
        }else{
            params["Recipient"] = IdToAddress($key_id)
            CallContract("@1PoaAdd", params)
        }
    }
}
