{
    "name": "Tokens emission",
    "conditions": "ContractConditions(\"@1DeveloperCondition\")",
    "data": [
        {
            "Name": "admin_menu",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#ecosystem_id# > 1){\n    MenuItem(Title: $@1emission_tokens$, Page: @1te_edit, Icon: \"icon-chart\")\n}",
            "Type": "menu"
        },
        {
            "Name": "completed_stages",
            "Trans": "{\"en\": \"Completed stages\", \"ru\": \"Завершенные этапы\"}",
            "Type": "languages"
        },
        {
            "Name": "data_input",
            "Trans": "{\"en\": \"Data input\", \"ru\": \"Ввод данных\"}",
            "Type": "languages"
        },
        {
            "Name": "emission_date",
            "Trans": "{\"en\": \"Emission date\", \"ru\": \"Дата эмиссии\"}",
            "Type": "languages"
        },
        {
            "Name": "emission_new",
            "Trans": "{\"en\": \"New emission\", \"ru\": \"Новая эмиссия\"}",
            "Type": "languages"
        },
        {
            "Name": "emission_tokens",
            "Trans": "{\"en\": \"Tokens emission\", \"ru\": \"Эмиссия токенов\"}",
            "Type": "languages"
        },
        {
            "Name": "emission_view",
            "Trans": "{\"en\": \"View emission\", \"ru\": \"Просмотр эмиссии\"}",
            "Type": "languages"
        },
        {
            "Name": "multiple",
            "Trans": "{\"en\": \"multiple\", \"ru\": \"многоразовый\"}",
            "Type": "languages"
        },
        {
            "Name": "singletime",
            "Trans": "{\"en\": \"single-time\", \"ru\": \"одноразовый\"}",
            "Type": "languages"
        },
        {
            "Name": "template_creation_error_x_unspecified",
            "Trans": "{\"en\": \"Creation error: %v unspecified\", \"ru\": \"Ошибка создания: %v не определено\"}",
            "Type": "languages"
        },
        {
            "Name": "type_emission",
            "Trans": "{\"en\": \"Emission type\", \"ru\": \"Тип эмиссии\"}",
            "Type": "languages"
        },
        {
            "Name": "type_withdraw",
            "Trans": "{\"en\": \"Withdraw type\", \"ru\": \"Тип гашения\"}",
            "Type": "languages"
        },
        {
            "Name": "with_withdrawal",
            "Trans": "{\"en\": \"with withdrawal\", \"ru\": \"с гашением\"}",
            "Type": "languages"
        },
        {
            "Name": "withdraw",
            "Trans": "{\"en\": \"Withdraw\", \"ru\": \"Погасить\"}",
            "Type": "languages"
        },
        {
            "Name": "withdrawn",
            "Trans": "{\"en\": \"Withdrawn\", \"ru\": \"Погашено\"}",
            "Type": "languages"
        },
        {
            "Name": "without_withdrawal",
            "Trans": "{\"en\": \"without withdrawal\", \"ru\": \"без гашения\"}",
            "Type": "languages"
        },
        {
            "Name": "type_emission",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "@1singletime,@1multiple",
            "Type": "app_params"
        },
        {
            "Name": "type_withdraw",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "@1without_withdrawal,@1with_withdrawal",
            "Type": "app_params"
        },
        {
            "Name": "te_edit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(@1applications).Columns(\"id\").Where({name:\"Tokens emission\", deleted:0, ecosystem:1}).Vars(application)\nAppParam(App:#application_id#, Name:type_emission, Source:type_emission, Ecosystem:1)\nAppParam(App:#application_id#, Name:type_withdraw, Source:type_withdraw, Ecosystem:1)\nSetVar(item_type_emission,).(item_title,).(item_amount,).(item_ecosystem,).(item_type_withdraw,)\n\nSetVar(this_page,@1te_edit)\n\nSetVar(type,0)\nDBFind(@1ecosystems).WhereId(#ecosystem_id#).Vars(item)\nIf(#item_type_emission#>0){\n    SetVar(type,#item_type_emission#)\n}\nIf(GetVar(TypeEmission)==\"\"){\n    SetVar(TypeEmission,#item_type_emission#)\n}\nSetTitle($@1tokens$)\nDiv(fullscreen-wrapper){\n    Div(row){\n        Div(col-sm-8 col-sm-offset-2){\n            Form(panel panel-default){\n                Div(panel-body){\n                    Div(row mt-sm){\n                        Div(col-sm-4 mt-sm text-right){\n                            LangRes(@1type_emission)\n                            Span(*,text-danger)\n                        }\n                        Div(col-sm-8 text-left){\n                            If(#type#>0){\n                                Div(mt-sm){\n                                    AppParam(App:#application_id#, Name:type_emission, Index:#item_type_emission#, Ecosystem:1)\n                                    If(#item_type_emission#==2){\n                                        Button(Body: $@1change$, Page:#this_page#, PageParams: \"Id=#Id#\", Class: btn btn-default ml, Contract: @1TeTypeChange, Params: \"Id=#Id#\")\n                                    }\n                                }\n                            }.Else{\n                                ForList(type_emission){\n                                    If(#TypeEmission#==#id#){\n                                        Button(Body: #name#, Class: btn btn-default mr disabled)\n                                    }.Else{\n                                        Button(Body: #name#, Page:#this_page#, PageParams: \"TypeEmission=#id#,Id=#Id#\", Class: btn btn-default mr)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    Div(row mt-sm){\n                        Div(col-sm-4 mt-sm text-right){\n                            LangRes(@1title)\n                            Span(*,text-danger)\n                        }\n                        Div(col-sm-8 text-left){\n                            If(#type#>0){\n                                Div(mt-sm){\n                                    #item_token_title#\n                                }\n                            }.Else{\n                                Input(Name: Title)\n                            }\n                        }\n                    }\n                    Div(row mt-sm){\n                        Div(col-sm-4 mt-sm text-right){\n                            LangRes(@1type_withdraw)\n                            Span(*,text-danger)\n\n                        }\n                        Div(col-sm-8 text-left){\n                            If(Or(#item_type_withdraw#==1,#item_withdraw#==1)){\n                                Div(mt-sm){\n                                    AppParam(App:#application_id#, Name:type_withdraw, Index:#item_type_withdraw#, Ecosystem:1)\n                                }\n                            }.Else{\n                                Select(Name: TypeWithdraw, Source:type_withdraw, NameColumn: name, ValueColumn: id, Value: #item_type_withdraw#)\n                            }\n                        }\n                    }\n                    If(Or(#TypeEmission#==2,#type#==0)){\n                        Div(row mt-sm){\n                            Div(col-sm-4 mt-sm text-right){\n                                LangRes(@1amount) (APLA)\n                                Span(*,text-danger)\n                            }\n                            Div(col-sm-8 text-left){\n                                If(#item_withdraw#==1){\n                                    Div(mt-sm text-bold){\n                                        $@1withdrawn$\n                                    }\n                                }.Else{\n                                    Input(Name: Amount, Type:number, Value: 0)\n                                }\n                            }\n                        }\n                    }\n\n                    If(#type#>0){\n                        JsonToSource(amounts, #item_emission_amount#)\n                        Div(list-group-item mt-sm text-muted){\n                            Div(text-center){\n                                $@1completed_stages$\n                            }\n                            ForList(amounts){\n                                Div(row mt-sm){\n                                    Div(col-sm-4 text-right){\n                                        Money(#value#) (APLA)\n                                    }\n                                    Div(col-sm-8 text-left){\n                                        DateTime(#key#, Format: YYYY-MM-DD HH:MI:SS)\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                Div(panel-footer text-right){\n                    If(And(#item_withdraw#!=1,GetVar(TypeEmission)!=\"\",#item_type_emission#!=1)){\n                        Button(Body: $@1emission_new$, Page: #this_page#, Class: btn btn-primary, Contract: @1TeCreate, Params: \"TypeEmission=#TypeEmission#\")\n                    }\n                }\n            }\n        }\n    }\n}",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Name": "te_view",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(@1applications).Columns(\"id\").Where({name:\"Tokens emission\", deleted:0, ecosystem:1}).Vars(application)\n\nSetVar(type,0)\nDBFind(@1ecosystems).WhereId(#ecosystem_id#).Vars(item)\nIf(#item_type_emission#>0){\n    SetVar(type,#item_type_emission#)\n}\nSetVar(title,$@1emission_view$ ##Id#)\nSetTitle(#title#)\nDiv(content-wrapper){\n    Div(breadcrumb){\n        LinkPage(Body: $@1tokens$, Page: @1te_list)\n        Span(/, mh)\n        Span(#title#, text-muted)\n    }\n    If(#type#>0){\n        Div(row){\n            Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\n                Div(panel panel-default){\n                    Div(panel-body){\n                        Div(row mt-sm){\n                            Div(col-sm-4 text-right text-bold){\n                                LangRes(@1ecosystem)\n                            }\n                            Div(col-sm-8 text-left){\n                                #item_ecosystem#\n                            }\n                        }\n\n                        Div(row mt-sm){\n                            Div(col-sm-4 text-right text-bold){\n                                LangRes(@1type_withdraw)\n                            }\n                            Div(col-sm-8 text-left){\n                                AppParam(App:#application_id#, Name:type_withdraw, Index:#item_type_withdraw#, Ecosystem:1)\n                                If(#item_withdraw#==1){\n                                    Div(){\n                                        $@1withdrawn$\n                                    }\n                                }\n                            }\n                        }\n\n                        Div(row mt-sm){\n                            Div(col-sm-4 text-right text-bold){\n                                LangRes(@1type_emission)\n                            }\n                            Div(col-sm-8 text-left){\n                                AppParam(App:#application_id#, Name:type_emission, Index:#item_type_emission#, Ecosystem:1)\n                            }\n                        }\n\n                        Div(row mt-sm){\n                            Div(col-sm-4 text-right text-bold){\n                                LangRes(@1title)\n                            }\n                            Div(col-sm-8 text-left){\n                                #item_token_title#\n                            }\n                        }\n                        Div(row mt-sm){\n                            Div(col-sm-4 text-right text-bold){\n                                LangRes(@1amount)\n                            }\n                            Div(col-sm-8 text-left){\n                                JsonToSource(amounts, #item_emission_amount#)\n                                ForList(amounts){\n                                    Div(row md-sm){\n                                        Div(col-sm-6){\n                                            Money(#value#) (APLA)\n                                        }\n                                        Div(col-sm-6){\n                                            DateTime(#key#, Format: YYYY-MM-DD HH:MI:SS)\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    Div(panel-footer text-left){\n                        Button(Body: $@1back$, Page: @1te_list, Class: btn btn-default)\n                    }\n                }\n            }\n        }\n    }.Else{\n        Div(h3 text-center){\n            $@1tokens$ $@1item_not_founded$\n        }\n    }\n}",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Name": "TeCreate",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract TeCreate {\n    data {\n        Title string\n        Amount money\n        TypeWithdraw int\n        TypeEmission int\n    }\n\n    func getEmissionConditionContract() string{\n        var param map contractName string contractId int\n        param = DBFind(\"@1parameters\").Where({ecosystem:$ecosystem_id, name:\"emission_condition_contract\"}).Row()\n        if param{\n            contractName = param[\"value\"]\n            if Size(contractName) > 0{\n                contractId = GetContractByName(contractName)\n                if contractId == 0{\n                    warning \"Condition contract for extension emission not found\"\n                }elif param[\"conditions\"] != \"false\"{\n                    warning \"Condition parameter 'emission_condition_contract' for extension emission must be not editable\"\n                }\n            }\n        }\n        return contractName\n    }\n    func createEmissionConditionParam() {\n        if !DBFind(\"@1parameters\").Where({ecosystem:$ecosystem_id, name:\"emission_condition_contract\"}).Row(){\n            @1NewParameter(\"Name,Value,Conditions\", \"emission_condition_contract\", \"\", \"ContractConditions(\\\"MainCondition\\\")\")\n        }\n    }\n\n    conditions {\n        $item = DBFind(\"@1ecosystems\").WhereId($ecosystem_id).Row()\n        $EDIT_MODE = $item[\"type_emission\"] == 1 || $item[\"type_emission\"] == 2\n\n        if $item[\"type_emission\"] == 1 && $item[\"withdraw\"] == 0{\n            warning \"Emission are not editable\"\n        }else{\n            var name string\n            name = getEmissionConditionContract()\n            if name != \"\" {\n                ContractConditions(name)\n            }else{\n                MainCondition()\n            }\n        }\n        if !$EDIT_MODE {\n            if Size($Title) == 0{\n                warning Sprintf(LangRes(\"@1template_creation_error_x_unspecified\", \"en\"), \"token_title\")\n            }\n        }\n\n        if $item[\"type_withdraw\"] == $TypeWithdraw && $Amount <= 0{\n            warning Sprintf(LangRes(\"@1template_creation_error_x_unspecified\", \"en\"), \"emission_amount\")\n        }\n        $guest = 4544233900443112470\n        $founder = Int(EcosysParam(\"founder_account\"))\n    }\n    action {\n        createEmissionConditionParam()\n\n        var m amount map ecosystemKeys string\n        ecosystemKeys = Sprintf(\"@%vkeys\", $ecosystem_id)\n\n        if $EDIT_MODE {\n            if $item[\"type_emission\"] == 2{\n                amount = JSONDecode($item[\"emission_amount\"])\n                amount[Str($block_time)] = $Amount\n                m[\"emission_amount\"] = amount\n            }\n            if $item[\"type_withdraw\"] == 2{\n                m[\"type_withdraw\"] = $TypeWithdraw\n            }\n            DBUpdate(\"@1ecosystems\", $ecosystem_id, m)\n        }else{\n            amount[Str($block_time)] = $Amount\n            m = {type_emission:$TypeEmission, token_title:$Title, emission_amount:amount, type_withdraw:$TypeWithdraw}\n            $Id = DBUpdate(\"@1ecosystems\", $ecosystem_id, m)\n            if $TypeWithdraw == 2{\n                if DBFind(\"@1keys\").Where({ecosystem:$ecosystem_id, id:$guest}).Row(){\n                    DBUpdate(ecosystemKeys, $guest, {\"blocked\": 0})\n                }\n            }\n        }\n        if $Amount > 0{\n            DBUpdate(ecosystemKeys, $founder, {\"+amount\": $Amount})\n            var h map\n            h[\"sender_id\"] = 0\n            h[\"recipient_id\"] = $founder\n            h[\"amount\"] = $Amount\n            h[\"comment\"] = \"New emission\"\n            h[\"block_id\"] = $block\n            h[\"txhash\"] = $txhash\n            h[\"ecosystem\"] = $ecosystem_id\n            h[\"type\"] = 2\n            h[\"created_at\"] = $block_time\n            DBInsert(\"@1history\", h)\n        }\n    }\n}",
            "Type": "contracts"
        },
        {
            "Name": "TeTypeChange",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract TeTypeChange {\n    data {}\n    conditions {\n        MainCondition()\n        $item = DBFind(\"@1ecosystems\").WhereId($ecosystem_id).Row()\n        if !$item {\n            warning \"Emission not found\"\n        }\n        $SINGLETIME = 1\n        $MULTI = 2\n        if $item[\"type_emission\"] != $MULTI {\n            warning \"Emission type error\"\n        }\n    }\n    action {\n        DBUpdate(\"@1ecosystems\", $ecosystem_id, {type_emission:$SINGLETIME})\n    }\n}",
            "Type": "contracts"
        }
    ]
}