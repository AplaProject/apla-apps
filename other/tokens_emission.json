{
    "name": "Tokens emission",
    "conditions": "ContractConditions(\"@1DeveloperCondition\")",
    "data": [
        {
            "Name": "admin_menu",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "If(#ecosystem_id# > 1){\r\n    MenuItem(Title: $@1emission_tokens$, Page: @1te_edit, Icon: \"icon-chart\")\r\n}",
            "Type": "menu"
        },
        {
            "Name": "completed_stages",
            "Trans": "{\"en\": \"Completed stages\", \"ru\": \"Завершенные этапы\"}",
            "Type": "languages"
        },
        {
            "Name": "data_input",
            "Trans": "{\"en\": \"Data input\", \"ru\": \"Ввод данных\"}",
            "Type": "languages"
        },
        {
            "Name": "emission_date",
            "Trans": "{\"en\": \"Emission date\", \"ru\": \"Дата эмиссии\"}",
            "Type": "languages"
        },
        {
            "Name": "emission_new",
            "Trans": "{\"en\": \"New emission\", \"ru\": \"Новая эмиссия\"}",
            "Type": "languages"
        },
        {
            "Name": "emission_tokens",
            "Trans": "{\"en\": \"Tokens emission\", \"ru\": \"Эмиссия токенов\"}",
            "Type": "languages"
        },
        {
            "Name": "emission_view",
            "Trans": "{\"en\": \"View emission\", \"ru\": \"Просмотр эмиссии\"}",
            "Type": "languages"
        },
        {
            "Name": "multiple",
            "Trans": "{\"en\": \"multiple\", \"ru\": \"многоразовый\"}",
            "Type": "languages"
        },
        {
            "Name": "singletime",
            "Trans": "{\"en\": \"single-time\", \"ru\": \"одноразовый\"}",
            "Type": "languages"
        },
        {
            "Name": "template_creation_error_x_unspecified",
            "Trans": "{\"en\": \"Creation error: %v unspecified\", \"ru\": \"Ошибка создания: %v не определено\"}",
            "Type": "languages"
        },
        {
            "Name": "type_emission",
            "Trans": "{\"en\": \"Emission type\", \"ru\": \"Тип эмиссии\"}",
            "Type": "languages"
        },
        {
            "Name": "type_withdraw",
            "Trans": "{\"en\": \"Withdraw type\", \"ru\": \"Тип гашения\"}",
            "Type": "languages"
        },
        {
            "Name": "with_withdrawal",
            "Trans": "{\"en\": \"with withdrawal\", \"ru\": \"с гашением\"}",
            "Type": "languages"
        },
        {
            "Name": "withdraw",
            "Trans": "{\"en\": \"Withdraw\", \"ru\": \"Погасить\"}",
            "Type": "languages"
        },
        {
            "Name": "withdrawn",
            "Trans": "{\"en\": \"Withdrawn\", \"ru\": \"Погашено\"}",
            "Type": "languages"
        },
        {
            "Name": "without_withdrawal",
            "Trans": "{\"en\": \"without withdrawal\", \"ru\": \"без гашения\"}",
            "Type": "languages"
        },
        {
            "Name": "type_emission",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "@1singletime,@1multiple",
            "Type": "app_params"
        },
        {
            "Name": "type_withdraw",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "@1without_withdrawal,@1with_withdrawal",
            "Type": "app_params"
        },
        {
            "Name": "te_edit",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(@1applications).Columns(\"id\").Where({name:\"Tokens emission\", deleted:0, ecosystem:1}).Vars(application)\r\nAppParam(App:#application_id#, Name:type_emission, Source:type_emission, Ecosystem:1)\r\nAppParam(App:#application_id#, Name:type_withdraw, Source:type_withdraw, Ecosystem:1)\r\nSetVar(item_type_emission,).(item_title,).(item_amount,).(item_ecosystem,).(item_type_withdraw,)\r\n\r\nSetVar(this_page,@1te_edit)\r\n\r\nSetVar(type,0)\r\nDBFind(@1ecosystems).WhereId(#ecosystem_id#).Vars(item)\r\nIf(#item_type_emission#>0){\r\n    SetVar(type,#item_type_emission#)\r\n}\r\nIf(GetVar(TypeEmission)==\"\"){\r\n    SetVar(TypeEmission,#item_type_emission#)\r\n}\r\nSetTitle($@1tokens$)\r\nDiv(fullscreen-wrapper){\r\n    Div(row){\r\n        Div(col-sm-8 col-sm-offset-2){\r\n            Form(panel panel-default){\r\n                Div(panel-body){\r\n                    Div(row mt-sm){\r\n                        Div(col-sm-4 mt-sm text-right){\r\n                            LangRes(@1type_emission)\r\n                            Span(*,text-danger)\r\n                        }\r\n                        Div(col-sm-8 text-left){\r\n                            If(#type#>0){\r\n                                Div(mt-sm){\r\n                                    AppParam(App:#application_id#, Name:type_emission, Index:#item_type_emission#, Ecosystem:1)\r\n                                    If(#item_type_emission#==2){\r\n                                        Button(Body: $@1change$, Page:#this_page#, PageParams: \"Id=#Id#\", Class: btn btn-default ml, Contract: @1TeTypeChange, Params: \"Id=#Id#\")\r\n                                    }\r\n                                }\r\n                            }.Else{\r\n                                ForList(type_emission){\r\n                                    If(#TypeEmission#==#id#){\r\n                                        Button(Body: #name#, Class: btn btn-default mr disabled)\r\n                                    }.Else{\r\n                                        Button(Body: #name#, Page:#this_page#, PageParams: \"TypeEmission=#id#,Id=#Id#\", Class: btn btn-default mr)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(row mt-sm){\r\n                        Div(col-sm-4 mt-sm text-right){\r\n                            LangRes(@1title)\r\n                            Span(*,text-danger)\r\n                        }\r\n                        Div(col-sm-8 text-left){\r\n                            If(#type#>0){\r\n                                Div(mt-sm){\r\n                                    #item_token_title#\r\n                                }\r\n                            }.Else{\r\n                                Input(Name: Title)\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(row mt-sm){\r\n                        Div(col-sm-4 mt-sm text-right){\r\n                            LangRes(@1type_withdraw)\r\n                            Span(*,text-danger)\r\n\r\n                        }\r\n                        Div(col-sm-8 text-left){\r\n                            If(Or(#item_type_withdraw#==1,#item_withdraw#==1)){\r\n                                Div(mt-sm){\r\n                                    AppParam(App:#application_id#, Name:type_withdraw, Index:#item_type_withdraw#, Ecosystem:1)\r\n                                }\r\n                            }.Else{\r\n                                Select(Name: TypeWithdraw, Source:type_withdraw, NameColumn: name, ValueColumn: id, Value: #item_type_withdraw#)\r\n                            }\r\n                        }\r\n                    }\r\n                    If(Or(#TypeEmission#==2,#type#==0)){\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 mt-sm text-right){\r\n                                LangRes(@1amount) (APLA)\r\n                                Span(*,text-danger)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                If(#item_withdraw#==1){\r\n                                    Div(mt-sm text-bold){\r\n                                        $@1withdrawn$\r\n                                    }\r\n                                }.Else{\r\n                                    Input(Name: Amount, Type:number, Value: 0)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    If(#type#>0){\r\n                        JsonToSource(amounts, #item_emission_amount#)\r\n                        Div(list-group-item mt-sm text-muted){\r\n                            Div(text-center){\r\n                                $@1completed_stages$\r\n                            }\r\n                            ForList(amounts){\r\n                                Div(row mt-sm){\r\n                                    Div(col-sm-4 text-right){\r\n                                        Money(#value#) (APLA)\r\n                                    }\r\n                                    Div(col-sm-8 text-left){\r\n                                        DateTime(#key#, Format: YYYY-MM-DD HH:MI:SS)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                Div(panel-footer text-right){\r\n                    If(And(#item_withdraw#!=1,GetVar(TypeEmission)!=\"\",#item_type_emission#!=1)){\r\n                        Button(Body: $@1emission_new$, Page: #this_page#, Class: btn btn-primary, Contract: @1TeCreate, Params: \"TypeEmission=#TypeEmission#\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Name": "te_view",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(@1applications).Columns(\"id\").Where({name:\"Tokens emission\", deleted:0, ecosystem:1}).Vars(application)\r\n\r\nSetVar(type,0)\r\nDBFind(@1ecosystems).WhereId(#ecosystem_id#).Vars(item)\r\nIf(#item_type_emission#>0){\r\n    SetVar(type,#item_type_emission#)\r\n}\r\nSetVar(title,$@1emission_view$ ##Id#)\r\nSetTitle(#title#)\r\nDiv(content-wrapper){\r\n    Div(breadcrumb){\r\n        LinkPage(Body: $@1tokens$, Page: @1te_list)\r\n        Span(/, mh)\r\n        Span(#title#, text-muted)\r\n    }\r\n    If(#type#>0){\r\n        Div(row){\r\n            Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\r\n                Div(panel panel-default){\r\n                    Div(panel-body){\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(@1ecosystem)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                #item_ecosystem#\r\n                            }\r\n                        }\r\n\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(@1type_withdraw)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                AppParam(App:#application_id#, Name:type_withdraw, Index:#item_type_withdraw#, Ecosystem:1)\r\n                                If(#item_withdraw#==1){\r\n                                    Div(){\r\n                                        $@1withdrawn$\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(@1type_emission)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                AppParam(App:#application_id#, Name:type_emission, Index:#item_type_emission#, Ecosystem:1)\r\n                            }\r\n                        }\r\n\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(@1title)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                #item_token_title#\r\n                            }\r\n                        }\r\n                        Div(row mt-sm){\r\n                            Div(col-sm-4 text-right text-bold){\r\n                                LangRes(@1amount)\r\n                            }\r\n                            Div(col-sm-8 text-left){\r\n                                JsonToSource(amounts, #item_emission_amount#)\r\n                                ForList(amounts){\r\n                                    Div(row md-sm){\r\n                                        Div(col-sm-6){\r\n                                            Money(#value#) (APLA)\r\n                                        }\r\n                                        Div(col-sm-6){\r\n                                            DateTime(#key#, Format: YYYY-MM-DD HH:MI:SS)\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    Div(panel-footer text-left){\r\n                        Button(Body: $@1back$, Page: @1te_list, Class: btn btn-default)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }.Else{\r\n        Div(h3 text-center){\r\n            $@1tokens$ $@1item_not_founded$\r\n        }\r\n    }\r\n}",
            "Menu": "admin_menu",
            "Type": "pages"
        },
        {
            "Name": "TeCreate",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract TeCreate {\r\n    data {\r\n        Title string\r\n        Amount money\r\n        TypeWithdraw int\r\n        TypeEmission int\r\n    }\r\n\r\n    func getEmissionConditionContract() string{\r\n        var param map contractName string contractId int\r\n        param = DBFind(\"@1parameters\").Where({ecosystem:$ecosystem_id, name:\"emission_condition_contract\"}).Row()\r\n        if param{\r\n            contractName = param[\"value\"]\r\n            if Size(contractName) > 0{\r\n                contractId = GetContractByName(contractName)\r\n                if contractId == 0{\r\n                    warning \"Condition contract for extension emission not found\"\r\n                }elif param[\"conditions\"] != \"false\"{\r\n                    warning \"Condition parameter 'emission_condition_contract' for extension emission must be not editable\"\r\n                }\r\n            }\r\n        }\r\n        return contractName\r\n    }\r\n    func createEmissionConditionParam() {\r\n        if !DBFind(\"@1parameters\").Where({ecosystem:$ecosystem_id, name:\"emission_condition_contract\"}).Row(){\r\n            @1NewParameter(\"Name,Value,Conditions\", \"emission_condition_contract\", \"\", \"ContractConditions(\\\"MainCondition\\\")\")\r\n        }\r\n    }\r\n\r\n    conditions {\r\n        $item = DBFind(\"@1ecosystems\").WhereId($ecosystem_id).Row()\r\n        $EDIT_MODE = $item[\"type_emission\"] == 1 || $item[\"type_emission\"] == 2\r\n\r\n        if $item[\"type_emission\"] == 1 && $item[\"withdraw\"] == 0{\r\n            warning \"Emission are not editable\"\r\n        }else{\r\n            var name string\r\n            name = getEmissionConditionContract()\r\n            if name != \"\" {\r\n                ContractConditions(name)\r\n            }else{\r\n                MainCondition()\r\n            }\r\n        }\r\n        if !$EDIT_MODE {\r\n            if Size($Title) == 0{\r\n                warning Sprintf(LangRes(\"@1template_creation_error_x_unspecified\", \"en\"), \"token_title\")\r\n            }\r\n        }\r\n\r\n        if $item[\"type_withdraw\"] == $TypeWithdraw && $Amount <= 0{\r\n            warning Sprintf(LangRes(\"@1template_creation_error_x_unspecified\", \"en\"), \"emission_amount\")\r\n        }\r\n        $guest = 4544233900443112470\r\n        $founder = Int(EcosysParam(\"founder_account\"))\r\n    }\r\n    action {\r\n        createEmissionConditionParam()\r\n\r\n        var m amount map ecosystemKeys string\r\n        ecosystemKeys = Sprintf(\"@%vkeys\", $ecosystem_id)\r\n\r\n        if $EDIT_MODE {\r\n            if $item[\"type_emission\"] == 2{\r\n                amount = JSONDecode($item[\"emission_amount\"])\r\n                amount[Str($block_time)] = $Amount\r\n                m[\"emission_amount\"] = amount\r\n            }\r\n            if $item[\"type_withdraw\"] == 2{\r\n                m[\"type_withdraw\"] = $TypeWithdraw\r\n            }\r\n            DBUpdate(\"@1ecosystems\", $ecosystem_id, m)\r\n        }else{\r\n            amount[Str($block_time)] = $Amount\r\n            m = {type_emission:$TypeEmission, token_title:$Title, emission_amount:amount, type_withdraw:$TypeWithdraw}\r\n            $Id = DBUpdate(\"@1ecosystems\", $ecosystem_id, m)\r\n            if $TypeWithdraw == 2{\r\n                if DBFind(\"@1keys\").Where({ecosystem:$ecosystem_id, id:$guest}).Row(){\r\n                    DBUpdate(ecosystemKeys, $guest, {\"blocked\": 0})\r\n                }\r\n            }\r\n        }\r\n        if $Amount > 0{\r\n            DBUpdate(ecosystemKeys, $founder, {\"+amount\": $Amount})\r\n            var h map\r\n            h[\"sender_id\"] = 0\r\n            h[\"recipient_id\"] = $founder\r\n            h[\"amount\"] = $Amount\r\n            h[\"comment\"] = \"New emission\"\r\n            h[\"block_id\"] = $block\r\n            h[\"txhash\"] = $txhash\r\n            h[\"ecosystem\"] = $ecosystem_id\r\n            h[\"type\"] = 2\r\n            h[\"created_at\"] = $block_time\r\n            DBInsert(\"@1history\", h)\r\n        }\r\n    }\r\n}",
            "Type": "contracts"
        },
        {
            "Name": "TeTypeChange",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract TeTypeChange {\r\n    data {}\r\n    conditions {\r\n        MainCondition()\r\n        $item = DBFind(\"@1ecosystems\").WhereId($ecosystem_id).Row()\r\n        if !$item {\r\n            warning \"Emission not found\"\r\n        }\r\n        $SINGLETIME = 1\r\n        $MULTI = 2\r\n        if $item[\"type_emission\"] != $MULTI {\r\n            warning \"Emission type error\"\r\n        }\r\n    }\r\n    action {\r\n        DBUpdate(\"@1ecosystems\", $ecosystem_id, {type_emission:$SINGLETIME})\r\n    }\r\n}",
            "Type": "contracts"
        }
    ]
}