contract TeCreate {
    data {
        Title string
        Amount money
        TypeWithdraw int
        TypeEmission int
    }

    func getEmissionConditionContract() string{
        var param map contractName string contractId int
        param = DBFind("@1parameters").Where({ecosystem:$ecosystem_id, name:"emission_condition_contract"}).Row()
        if param{
            contractName = param["value"]
            if Size(contractName) > 0{
                contractId = GetContractByName(contractName)
                if contractId == 0{
                    warning "Condition contract for extension emission not found"
                }elif param["conditions"] != "false"{
                    warning "Condition parameter 'emission_condition_contract' for extension emission must be not editable"
                }
            }
        }
        return contractName
    }
    func createEmissionConditionParam() {
        if !DBFind("@1parameters").Where({ecosystem:$ecosystem_id, name:"emission_condition_contract"}).Row(){
            @1NewParameter("Name,Value,Conditions", "emission_condition_contract", "", "ContractConditions(\"MainCondition\")")
        }
    }

    conditions {
        $item = DBFind("@1ecosystems").WhereId($ecosystem_id).Row()
        $EDIT_MODE = $item["type_emission"] == 1 || $item["type_emission"] == 2

        if $item["type_emission"] == 1 && $item["withdraw"] == 0{
            warning "Emission are not editable"
        }else{
            var name string
            name = getEmissionConditionContract()
            if name != "" {
                ContractConditions(name)
            }else{
                MainCondition()
            }
        }
        if !$EDIT_MODE {
            if Size($Title) == 0{
                warning Sprintf(LangRes("@1template_creation_error_x_unspecified", "en"), "token_title")
            }
        }

        if $item["type_withdraw"] == $TypeWithdraw && $Amount <= 0{
            warning Sprintf(LangRes("@1template_creation_error_x_unspecified", "en"), "emission_amount")
        }
        $guest = 4544233900443112470
        $founder = Int(EcosysParam("founder_account"))
    }
    action {
        createEmissionConditionParam()

        var m amount map ecosystemKeys string
        ecosystemKeys = Sprintf("@%vkeys", $ecosystem_id)

        if $EDIT_MODE {
            if $item["type_emission"] == 2{
                amount = JSONDecode($item["emission_amount"])
                amount[Str($block_time)] = $Amount
                m["emission_amount"] = amount
            }
            if $item["type_withdraw"] == 2{
                m["type_withdraw"] = $TypeWithdraw
            }
            DBUpdate("@1ecosystems", $ecosystem_id, m)
        }else{
            amount[Str($block_time)] = $Amount
            m = {type_emission:$TypeEmission, token_title:$Title, emission_amount:amount, type_withdraw:$TypeWithdraw}
            $Id = DBUpdate("@1ecosystems", $ecosystem_id, m)
            if $TypeWithdraw == 2{
                if DBFind("@1keys").Where({ecosystem:$ecosystem_id, id:$guest}).Row(){
                    DBUpdate(ecosystemKeys, $guest, {"blocked": 0})
                }
            }
        }
        if $Amount > 0{
            DBUpdate(ecosystemKeys, $founder, {"+amount": $Amount})
            var h map
            h["sender_id"] = 0
            h["recipient_id"] = $founder
            h["amount"] = $Amount
            h["comment"] = "New emission"
            h["block_id"] = $block
            h["txhash"] = $txhash
            h["ecosystem"] = $ecosystem_id
            h["type"] = 2
            h["created_at"] = $block_time
            DBInsert("@1history", h)
        }
    }
}