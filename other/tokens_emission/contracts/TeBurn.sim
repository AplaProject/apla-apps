contract TeBurn {
    data {
        Amount money
    }

    func checkSender() {
        var sender_map map
        sender_map = DBFind("@1keys").Where({"id": $key_id, "ecosystem": $ecosystem_id}).Row()

        if !sender_map {
            warning Sprintf(LangRes("@1sender_x_invalid", "en"), $key_id)
        }
        if Int(sender_map["blocked"]) != 0 {
            warning LangRes("@1sender_blocked", "en")
        }
        if Int(sender_map["deleted"]) != 0 {
            warning LangRes("@1sender_deleted", "en")
        }
        if Money(sender_map["amount"]) < $Amount {
            warning LangRes("@1amount_less_than_needed", "en")
        }
    }

    conditions {
        checkSender()     //check the sender
        
        //check amount
        if $Amount == 0 {
            warning LangRes("@1amount_zero", "en")
        }
        if $Amount < 0 {
            warning LangRes("@1amount_less_zero", "en")
        }
    }

    action {
        DBUpdateExt("@1keys", {"id": $key_id, "ecosystem": $ecosystem_id}, {"-amount": $Amount})
        DBUpdateExt("@1keys", {"id": 4544233900443112470, "ecosystem": $ecosystem_id}, {"+amount": $Amount})

        var m map
        m["sender_id"] = $key_id
        m["recipient_id"] = 4544233900443112470
        m["amount"] = $Amount
        m["comment"] = "New burn"
        m["block_id"] = $block
        m["txhash"] = $txhash
        m["ecosystem"] = $ecosystem_id
        m["type"] = 4
        m["created_at"] = $block_time
        DBInsert("@1history", m)
    }
}