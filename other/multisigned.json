{
    "name": "Multisigned",
    "conditions": "ContractConditions(\"@1DeveloperCondition\")",
    "data": [
        {
            "Name": "ms_link",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(@1keys).WhereId(#key_id#).Columns(\"id,multi\").Vars(k)\nIf(#k_multi#==0){\n    AddToolButton(Title:$@1ms_create$, Icon:icon-wallet, Page:@1ms_multisigned).Popup(50, $@1ms_create$)\n}",
            "Type": "blocks"
        },
        {
            "Name": "ms_create",
            "Trans": "{\"en\": \"Create multisigned\", \"ru\": \"Создать мультиподпись\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_group_single",
            "Trans": "{\"en\": \"Any member of the group\", \"ru\": \"Любой участник группы\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_group_voting",
            "Trans": "{\"en\": \"The vote within the group\", \"ru\": \"Голосование внутри группы\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_limits",
            "Trans": "{\"en\": \"Limitations\", \"ru\": \"Ограничения\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_limits_date",
            "Trans": "{\"en\": \"The limitation of the power of attorney\", \"ru\": \"Ограничение срока доверенности\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_limits_sign",
            "Trans": "{\"en\": \"Limit transaction signature\", \"ru\": \"Ограничение подписи транзакций\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_no_limit",
            "Trans": "{\"en\": \"Not limited\", \"ru\": \"Не ограничено\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_one_sign_transfer",
            "Trans": "{\"en\": \"Transfer with one signature\", \"ru\": \"Перевод одной подписью\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_role_single",
            "Trans": "{\"en\": \"Any member of the role\", \"ru\": \"Любой участник роли\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_role_voting",
            "Trans": "{\"en\": \"The voting members of the role\", \"ru\": \"Голосование участников роли\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_select_type",
            "Trans": "{\"en\": \"The transfer of funds from multicausality\", \"ru\": \"Перевод средств с мультикошелька\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_set_date",
            "Trans": "{\"en\": \"To set the time\", \"ru\": \"Установить срок\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_voting_template",
            "Trans": "{\"en\": \"The template of voting\", \"ru\": \"Шаблон голосования\"}",
            "Type": "languages"
        },
        {
            "Name": "ms_types",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "ms_group_single,ms_group_voting,ms_role_single,ms_role_voting",
            "Type": "app_params"
        },
        {
            "Name": "ms_multisigned",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(@1applications).Columns(\"id\").Where({name:\"Multisigned\", ecosystem:1}).Vars(application)\nAppParam(App: #application_id#, Name:ms_types, Source:types)\nDBFind(@1keys).WhereId(#key_id#).Columns(\"multi\").Vars(k)\n\nSetVar(this_page,@1ms_multisigned).(back_page,@1profile_edit).(cols,2)\nDBFind(@1buffer_data).Where({member_id:#key_id#, key:multisigned_units, ecosystem:#ecosystem_id#}).Columns(\"id,value->type,value->units\").Vars(buf)\nDBFind(@1roles,src_roles).Where({ecosystem:#ecosystem_id#}).Columns(\"id,role_name\")\nIf(GetVar(TemplateId)==\"\"){\n    SetVar(TemplateId,0)\n}\nDiv(content-wrapper){\n    If(#k_multi#==0){\n        If(GetVar(Type)!=\"\"){\n            SetTitle($@1ms_create$)\n            Div(breadcrumb){\n                LinkPage(Body: $@1profile$, Page: #back_page#)\n                Span(/,mh)\n                Span($@1ms_create$,text-muted)\n            }\n\n            Div(row){\n                Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){\n                    Form(panel panel-primary){\n                        Div(panel-heading){\n                            AppParam(App: #application_id#, Name:ms_types, Index:#Type#)\n                        }\n                        Div(panel-body){\n                            Label($@1ms_limits$)\n                            Div(list-group-item){\n                                Label($@1ms_limits_date$)\n                                Data(limits, \"id,name\"){\n                                    1,$@1no_limit$\n                                    2,$@1set_date$\n                                }\n                                RadioGroup(Name:Limit, Source:limits, NameColumn: name, ValueColumn: id)\n                                Div(row){\n                                    Div(col-md-6){\n                                        Input(Name: LimitDate, Type: date)\n                                    }\n                                    Div(col-md-6){\n                                        Input(Name: LimitTime, Type: time, Value: \"00:00\")\n                                    }\n                                }.Show(Limit=2)\n                            }\n                            Div(list-group-item){\n                                Label($@1ms_limits_sign$)\n                                Data(limits, \"id,name\"){\n                                    1,$@1ms_one_sign_transfer$\n                                    2,$@1ms_voting_template$\n                                }\n                                RadioGroup(Name:Sign, Source:limits, NameColumn: name, ValueColumn: id)\n                                Div(input-group){\n                                    If(#TemplateId#>0){\n                                        #TemplateId#\n                                        Input(Name: TemplateId, Disabled: 1, Value: #TemplateId#)\n                                    }.Else{\n                                        Input(Name: TemplateId, Disabled: 1, Value: 0)\n                                    }\n                                    Div(input-group-btn){\n                                        Button(Class: btn bg-gray-lighter fa fa-caret-down buttons, Page: @1ms_select_template, PageParams:\"back_page=#this_page#,back_header=$@1select_voting_template$,Type=#Type#\").Popup(50, $@1ms_voting_template$)\n                                    }.Style(\n                                        .buttons {\n                                            border: 1px solid #dde6e9;\n                                            padding: 6px 16px;\n                                        }\n                                    )\n                                }.Show(Sign=2)\n                            }\n                            Div(list-group-item){\n                                Div(h4){\n                                    If(Or(#Type#==1,#Type#==2)){\n                                        The group\n                                        SetVar(button_title,$@1ms_assign_group$)\n                                    }.Else{\n                                        The roles\n                                        SetVar(button_title,$@1ms_assign_roles$)\n                                    }\n                                }\n                                Div(){\n                                    If(#buf_value_type#==#Type#){\n                                        ArrayToSource(buf_units, #buf_value_units#)\n                                        If(Or(#Type#==1,#Type#==2)){\n                                            ForList(buf_units){\n                                                Span(#value#, mr)\n                                            }\n                                        }.ElseIf(Or(#Type#==3,#Type#==4)){\n                                            ForList(buf_units){\n                                                ForList(src_roles){\n                                                    If(#id#==#value#){\n                                                        Span(#role_name#, mr)\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        Div(text-center){\n                                            Button(Body: #button_title#, Page: @1ms_select_units, Class: btn btn-default, PageParams: \"Type=#Type#\").Popup(50, $@1edit_group$)\n                                        }\n                                    }.Else{\n                                        Div(text-center text-muted){\n                                            $not_assigned$\n                                        }\n                                        Div(text-center){\n                                            Button(Body: #button_title#, Page: @1ms_select_units, Class: btn btn-default, PageParams: \"Type=#Type#\").Popup(50, $@1assign_group$)\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        Div(panel-footer text-left){\n                            Button(Body: $@1back$, Class: btn btn-default, Page: #this_page#).Popup(50, $@1multi_types$)\n                            Button(Body: $@1convert$, Class: btn btn-primary pull-right, Page: #back_page#, Contract: MSCreate, Params: \"BufferId=#buf_id#\").Alert(Text: $@1want_profile_convert$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)\n                        }\n                    }\n                }\n            }\n        }.Else{\n            Form(){\n                Div(form-group){\n                    Label($@1ms_select_type$)\n                }\n                Div(form-group){\n                    Select(Name: Type, Source: types, NameColumn: name, ValueColumn: id)\n                }\n                Div(){\n                    Button(Body: $@1back$, Class: btn btn-default, Page: #back_page#)\n                    Button(Body: $@1next$, Class: btn btn-primary pull-right, Page: #this_page#, PageParams: \"Type=Val(Type)\")\n                }\n            }\n        }\n    }.Else{\n        Div(mt-lg alert alert-warning text-center){\n            $@1attention_already_multi$\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ms_select_template",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "DBFind(@1applications).Columns(\"id\").Where({name:\"Multisigned\", ecosystem:1}).Vars(application)\n\nSetVar(this_page,@1ms_select_template).(back_page,@1ms_multisigned).(this_table, @1voting_templates).(current_header, $@1ms_select_template$).(pager_limit, 10)\nInclude(@1pager_header)\n\nIf(GetVar(Id)==\"\"){\n    SetVar(Id,)\n}\n\nIf(GetVar(search)!=\"\"){\n    SetVar(where, {ecosystem: #ecosystem_id#, $or:[{title:{$like:#search#}}, {subject:{$like:#search#}}]})\n}.Else{\n    SetVar(where, {ecosystem: #ecosystem_id#}).(search,)\n}\n\nDiv(){\n    Form(input-group){\n        Div(input-group-addon){\n            LangRes(@1template)\n        }\n        Input(Name: search, Value: #search#, Placeholder: $@1text_to_search$)\n        Div(input-group-btn){\n            If(GetVar(search)!=\"\"){\n                Button(Class: btn bg-gray-lighter fa fa-close mtl buttons, Page: #this_page#, PageParams: \"back_page=#back_page#,back_header=#back_header#,Id=#Id#,Type=#Type#\").Popup(Header: #current_header#, Width: \"50\")\n            }\n            Button(Class: btn bg-gray-lighter mtl buttons, Page: #this_page#, PageParams: \"back_page=#back_page#,back_header=#back_header#,Type=#Type#,search=Val(search),Id=#Id#\", Body: Em(Class: fa fa-search) $@1search$).Popup(Header: #current_header#, Width: \"50\")\n        }\n    }\n}.Style(\n    .buttons {\n        border: 1px solid #dde6e9;\n    }\n)\n\nDBFind(#this_table#, src).Where(#where#).Order({\"id\": 1}).Limit(#pager_limit#).Offset(#pager_offset#).Count(count).Custom(_actions){\n    Button(Class: btn btn-default fa fa-check, Page: #back_page#, PageParams: \"Type=#Type#,Id=#Id#,TemplateId=#id#\")\n}\n\nDiv(fullscreen){\n    Div(table-responsive){\n        Div(){\n            If(#count# > 0){\n                Table(src, \"id=id,subject=subject,title=title,=_actions\")\n            }.Else{\n                Div(Class: text-center h4 text-muted, Body: \"$@1templates$ $@1not_founded$\")\n            }\n        }.Style(\n            tbody > tr:nth-of-type(odd) {\n                background-color: #f8f9fc;\n            }\n        )\n    }\n}\nDiv(){\n    Include(@1pager_for_popup)\n    Button(Body: LangRes(@1back), Class: btn btn-default pull-right, Page: #back_page#, PageParams: \"Type=#Type#,Id=#Id#\")\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "ms_select_units",
            "Conditions": "ContractConditions(\"MainCondition\")",
            "Value": "DBFind(@1applications).Columns(\"id\").Where({name:\"Multisigned\", ecosystem:1}).Vars(application)\nAppParam(App: #application_id#, Name:ms_types, Source:types)\nDBFind(@1keys).WhereId(#key_id#).Columns(\"multi\").Vars(k)\n\nSetVar(this_page,@1ms_select_units).(back_page,@1ms_multisigned)\nDBFind(@1buffer_data).Where({member_id:#key_id#, key:multisigned_units, ecosystem:#ecosystem_id#}).Columns(\"id,value->type,value->units\").Vars(buf)\n\nIf(GetVar(TemplateId)==\"\"){\n    SetVar(TemplateId,0)\n}\nDiv(content-wrapper){\n    Form(){\n        ArrayToSource(buf_units, [])\n        If(#buf_value_type#==#Type#){\n            ArrayToSource(buf_units, #buf_value_units#)\n        }\n        If(Or(#Type#==1,#Type#==2)){\n            DBFind(@1keys,units).Where({ecosystem:#ecosystem_id#, id:{$neq:#guest_key#}}).Columns(\"id\")\n        }.ElseIf(Or(#Type#==3,#Type#==4)){\n            DBFind(@1roles,units).Where({ecosystem:#ecosystem_id#}).Columns(\"id,role_name\")\n        }\n        Div(row){\n            ForList(units){\n                SetVar(checked,false)\n                ForList(buf_units){\n                    If(#id#==#value#){\n                        SetVar(checked,true)\n                    }\n                }\n                Div(col-sm-6 text-nowrap){\n                    Label(Class: form-inline){\n                        Input(Name: Vals, Type: checkbox, Value: #checked#)\n                        Input(Name: Units, Type: hidden, Value: #id#)\n                        If(GetVar(role_name)){\n                            #role_name#\n                        }.Else{\n                            Address(#id#)\n                        }\n                    }\n                }\n            }\n        }\n        Div(text-left){\n            Button(Body: $@1back$, Class: btn btn-default, Page: #back_page#, PageParams: \"Type=#Type#\")\n            Button(Body: $@1confirm$, Class: btn btn-primary pull-right, Page: #back_page#, Contract: MSUnits, PageParams: \"Type=#Type#\", Params:\"Action=set,Type=#Type#,Vals=Val(Vals),Units=Val(Units)\")\n        }\n    }\n}",
            "Menu": "default_menu",
            "Type": "pages"
        },
        {
            "Name": "MSCreate",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MSCreate {\n    data {\n        BufferId int\n    }\n    conditions {\n        var buf map\n        buf[\"key\"] = \"multisigned_units\"\n        buf[\"member_id\"] = $key_id\n        $buf = DBFind(\"@1buffer_data\").WhereId($BufferId).Row()\n        if !$buf {\n            warning \"not assigned group\"\n        }\n        $GROUP_SINGLE = 1\n        $GROUP_VOTING = 2\n        $ROLE_SINGLE = 3\n        $ROLE_VOTING = 4\n    }\n\n    action {\n        // При клике на кнопке Create\n        // в таблице 1_keys в колонку multi записывается\n        // id шаблона голосования\n        // -1, если выбрано \"перевод одной подписью\"\n        // пользователи и роли КМП заносятся в таблицу доверенностей с указанными лимитами\n        var table string\n        table = Sprintf(\"@%vkeys\", $ecosystem_id)\n        // DBUpdate(table, $key_id, multi\n    }\n}\n",
            "Type": "contracts"
        },
        {
            "Name": "MSUnits",
            "Conditions": "ContractConditions(\"@1DeveloperCondition\")",
            "Value": "contract MSUnits {\n    data {\n        Action string\n        Units array\n        Vals array\n        Type int\n    }\n    conditions {\n        var units array i lenVals int\n        lenVals = Len($Vals)\n        while i < lenVals{\n            if $Vals[i] == \"true\"{\n                units = Append(units, $Units[i])\n            }\n            i = i + 1\n        }\n        $units = units\n    }\n\n    action {\n        var id int m buf exsistsBuf map\n        buf[\"key\"] = \"multisigned_units\"\n        buf[\"member_id\"] = $key_id\n        buf[\"ecosystem\"] = $ecosystem_id\n        exsistsBuf = DBFind(\"@1buffer_data\").Where(buf).Row()\n        buf[\"value\"] = `{}`\n        if !exsistsBuf {\n            buf[\"id\"] = DBInsert(\"@1buffer_data\", buf)\n        }else{\n            DBUpdate(\"@1buffer_data\", Int(exsistsBuf[\"id\"]), buf)\n            buf[\"id\"] = exsistsBuf[\"id\"]\n        }\n        if $Action == \"set\" {\n            Println(\"if $Action ==set\")\n            m[\"value->type\"] = $Type\n            m[\"value->units\"] = JSONEncode($units)\n            DBUpdate(\"@1buffer_data\", Int(buf[\"id\"]), m)\n        }\n    }\n}\n",
            "Type": "contracts"
        }
    ]
}