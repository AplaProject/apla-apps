contract ExMatching {
    data {
        id int
        flag string
        symbol string
        client int
        quantity int
    }
    conditions {
        //check exchange adress
        var tradestatus int
        tradestatus = Int(DBFind("@1symbol").Where({"name":$symbol}).Columns("tradeable").One("tradeable"))
        if (tradestatus != 1) {
           warning LangRes("@1ex_error_tradestatus", "en")
        }
        var check_eco_id ecosystem_hub int
        ecosystem_hub = Int(DBFind("@1symbol").Where({"name":$symbol}).Columns("ecosystem_hub").One("ecosystem_hub"))
        check_eco_id = Int(DBFind("@1keys").Where({"id":$client, "ecosystem":ecosystem_hub}).One("id"))
        if check_eco_id != $client {
            warning LangRes("@1ex_error_account", "en")
        }
        var balance value money
        balance = Money(DBFind("@1keys").Where({"id":$client, "ecosystem":$ecosystem_id}).Columns("amount").One("amount"))
        if $flag == "S" {
            var face_value money
            face_value = Money(DBFind("@1order_log").Where({"id":$id}).Columns("counterparty_value").One("counterparty_value"))
            if (face_value > balance) { 
                warning LangRes("@1ex_error_balance_check", "en")
            }
        }
        if $flag == "B" {
            var apla_value money
            apla_value = Money(DBFind("@1order_log").Where({"id":$id}).Columns("client_value").One("client_value"))
            if (apla_value > balance) {  
                warning LangRes("@1ex_error_balance_check", "en")
            }        
        }
        var counterparty check_cross int
        counterparty = Int(DBFind("@1order_log").Where({"id":$id}).Columns("client").One("client"))
        check_cross = Int(DBFind("@1symbol").Where({"name":$symbol}).One("cross"))
        if check_cross = 0 && $client == counterparty {
            warning LangRes("@1ex_error_cross_trades", "en")
        }
    }
    action {
        DBUpdate("@1order_log", $id, {status:"F", counterparty: $client})
        var ecosystem_hub counterparty int
        ecosystem_hub = Int(DBFind("@1symbol").Where({"name":$symbol}).Columns("ecosystem_hub").One("ecosystem_hub"))
        counterparty = Int(DBFind("@1order_log").Where({"id":$id}).Columns("client").One("client"))
        var apla_value face_value price money
        price = Money(DBFind("@1order_log").Where({"id":$id}).Columns("price").One("price"))
        apla_value = Money(DBFind("@1order_log").Where({"id":$id}).Columns("client_value").One("client_value"))
        face_value = Money(DBFind("@1order_log").Where({"id":$id}).Columns("counterparty_value").One("counterparty_value"))
        DBInsert("@1order_log", {flag: $flag, client: $client, counterparty: counterparty, venue: "EX", symbol: $symbol, quantity: $quantity, price: price,client_value: apla_value, counterparty_value: face_value, status: "F"})
        if $flag == "S" {
            @1TokensTransfer("Amount,SenderId,RecipientId,Comment,Ecosystem", face_value, $client, counterparty, "EXMatching", ecosystem_hub)
            @1TokensTransfer("Amount,SenderId,RecipientId,Comment,Ecosystem", apla_value, 1, $client, "EXMatching", 1)
        }
        if $flag == "B" {
            @1TokensTransfer("Amount,SenderId,RecipientId,Comment,Ecosystem", apla_value, $client, counterparty, "EXMatching", 1)
            @1TokensTransfer("Amount,SenderId,RecipientId,Comment,Ecosystem", face_value, 2, $client, "EXMatching", ecosystem_hub)          
        }
    }
}