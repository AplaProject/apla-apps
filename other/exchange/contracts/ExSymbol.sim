contract ExSymbol {
    data {
        id int "optional"
        status string "optional"
        operation string
        name string
        pricetick money
        range money
        lotsize money
        ecosystem int
        isTradeable int "optional"
        isCross int "optional"
        isOTC int "optional"
    }
    conditions {
        if $operation == "C" {
            var check_symbol string
            check_symbol = DBFind("@1symbol").Where({"name":$name}).Columns("name").One("name")
            if (check_symbol == $name) {
                warning LangRes("@1ex_error_symbol_name", "en")
            }
        }
        if ($ecosystem == 1) {
            warning LangRes("@1ex_error_mirror_trading", "en")
        }
        //only founder
    }
    action {
        if $operation == "C" {
            var m map
            m["name"] = $name
            m["pricetick"] = $pricetick
            m["range"] = $range
            m["lotsize"] = $lotsize
            m["ecosystem_hub"] = $ecosystem
            m["tradeable"] = $isTradeable
            m["cross"] = $isCross
            m["otc"] = $isOTC
            DBInsert("@1symbol", m)
        }
        if $operation == "E" {
            @1ExCancel("symbol", $name)
            var m map
            m["pricetick"] = $pricetick
            m["range"] = $range
            m["lotsize"] = $lotsize
            m["ecosystem_hub"] = $ecosystem
            DBUpdate("@1symbol", $id, m)
        }
        if $operation == "U" {
            var m map
            if $status == "TR" {
                @1ExCancel("symbol", $name)
                m["tradeable"] = $isTradeable
            } 
            if $status == "CR" {
                m["cross"] = $isCross
            }
            if $status == "OTC" {
                m["otc"] = $isOTC
            }
            DBUpdate("@1symbol", $id, m)
        }
    }
}