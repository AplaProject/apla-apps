contract ExSymbol {
    data {
        id int "optional"
        status string "optional"
        operation string
        name string
        pricetick money
        range money
        lotsize money
        ecosystem int
        isTradeable int "optional"
        isCross int "optional"
        isOTC int "optional"
    }
    func exWallet (ecosystem int) int {
        var check_ex_wallet is_ex_wallet new_ex_wallet int
        check_ex_wallet = Int(DBFind("@1keys").Where({"id":$ecosystem}).Columns("id").One("id"))
        if check_ex_wallet == $ecosystem {
            is_ex_wallet = Int(DBFind("@1symbol").Where({"wallet_hub":check_ex_wallet}).Columns("wallet_hub").One("wallet_hub"))
            if check_ex_wallet == is_ex_wallet {
                return is_ex_wallet
            } else {
                new_ex_wallet = Int($ecosystem - ($ecosystem * 2))
                DBInsert("@1keys", {"id":new_ex_wallet, "ecosystem":$ecosystem})
                return new_ex_wallet
            }
        }
        if check_ex_wallet == 0 {
            DBInsert("@1keys", {"id":$ecosystem, "ecosystem":$ecosystem})
            return $ecosystem
        }
    }
    conditions {
        if $operation == "N" {
            if DBFind("@1keys").Where({"id":1, "ecosystem": 1}).Columns("id").One("id") {
                warning LangRes("@1ex_error_apla_wallet", "en")
            }
        }
        if $operation == "C" {
            var check_symbol string
            check_symbol = DBFind("@1symbol").Where({"name":$name}).Columns("name").One("name")
            if (check_symbol == $name) {
                warning LangRes("@1ex_error_symbol_name", "en")
            }
        }
        if ($ecosystem == 1) {
            warning LangRes("@1ex_error_mirror_trading", "en")
        }
        ContractConditions("@1AdminCondition") 
    }
    action {
        if $operation == "N" {
            DBInsert("@1keys", {"id":1, "ecosystem":1})
        }
        if $operation == "C" {
            var m map
            m["name"] = $name
            m["pricetick"] = $pricetick
            m["range"] = $range
            m["lotsize"] = $lotsize
            m["ecosystem_hub"] = $ecosystem
            m["tradeable"] = $isTradeable
            m["cross"] = $isCross
            m["otc"] = $isOTC
            m["wallet_hub"] = exWallet($ecosystem)
            m["wallet_apla"] = 1
            DBInsert("@1symbol", m)
        }
        if $operation == "E" {
            @1ExCancel("symbol", $name)
            var m map
            m["pricetick"] = $pricetick
            m["range"] = $range
            m["lotsize"] = $lotsize
            m["ecosystem_hub"] = $ecosystem
            DBUpdate("@1symbol", $id, m)
        }
        if $operation == "U" {
            var m map
            if $status == "TR" {
                //@1ExCancel("symbol", $name)
                m["tradeable"] = $isTradeable
            } 
            if $status == "CR" {
                m["cross"] = $isCross
            }
            if $status == "OTC" {
                m["otc"] = $isOTC
            }
            DBUpdate("@1symbol", $id, m)
        }
    }
}