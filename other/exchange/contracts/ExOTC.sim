contract ExOTC {
    data {
        ticker_id int
        flag string
        price money
        quantity int
        client int
        cp string "optional"
        counterparty int "optional"
        ecosystem int
    }
    func calcFaceValue (quantity int) money {
        var lot_size face_value money
        lot_size = Money(DBFind("@1symbol").Where({"id":$ticker_id}).Columns("lotsize").One("lotsize"))
        var i int
        i = 1
        face_value = Money(0)
        while i < $quantity+1 {
            face_value = face_value + lot_size
            if i == $quantity {
                return face_value
            }
            i = i + 1
        }  
    }
    func calcAplaValue (price money, quantity int) money {
        var apla_value money
        var j int
        j = 1
        apla_value = Money(0)
        while j < $quantity+1 {
            apla_value = apla_value + price
            if j == $quantity {
                return apla_value
            }
            j = j + 1
        }  
    }
    func checkBalance (client int, ecosystem int, value money) {
        var balance money
        balance = Money(DBFind("@1keys").Where({"id":client, "ecosystem":ecosystem}).Columns("amount").One("amount"))
        if value > balance {
            warning LangRes("@1ex_error_balance_check", "en")
        }
    }
    conditions {
        if $flag == "S" {
            var ecosystem_hub int
            ecosystem_hub = Int(DBFind("@1symbol").Where({"id":$ticker_id}).Columns("ecosystem_hub").One("ecosystem_hub"))
            var face_value money
            face_value = calcFaceValue($quantity)
            checkBalance($client, ecosystem_hub, face_value)
        }
        if $flag == "B" {
            var apla_value money
            apla_value = calcAplaValue($price, $quantity)
            checkBalance($client, 1, apla_value)
        }
        if $cp != "" {
            $recipient_id = AddressToId($cp)
            if $recipient_id == 0 {
                error Sprintf(LangRes("@1recipient_x_invalid", "en"), $cp)
            }
        }
    }
    action {
        if $cp == "" {
            $recipient_id = $counterparty
        }
        var face_value apla_value money
        face_value = calcFaceValue($quantity)
        apla_value = calcAplaValue($price, $quantity)
        var symbol string
        symbol = DBFind("@1symbol").Where({"id":$ticker_id}).Columns("name").One("name")
        var lotsize money
        lotsize = Money(DBFind("@1symbol").Where({"id":$ticker_id}).Columns("lotsize").One("lotsize"))
        var ecosystem_hub int
        ecosystem_hub = Int(DBFind("@1symbol").Where({"id":$ticker_id}).Columns("ecosystem_hub").One("ecosystem_hub"))
        var m map
        m["flag"] = $flag
        m["client"] = $client
        m["counterparty"] = $recipient_id
        m["venue"] = "EXOTC"
        m["symbol"] = symbol
        m["quantity"] = $quantity
        m["price"] = $price
        m["client_value"] = apla_value
        m["counterparty_value"] = face_value
        m["status"] = "A"
        m["lotsize"] = lotsize
        m["ecosystem_hub"] = ecosystem_hub
        //TODO body and header
        @1NotificationsSend("member_id,sender,icon_name,text_header,text_body,page_name,params_map,eco_id", $recipient_id, 1, "fa fa-exchange", "test_header", "test_body", "@1ex_otc_new", m, $ecosystem)
    }
}