Form(){
    DBFind(@1ecosystems,src_eco).Where({"id":{"$gt":1}}).Columns("id,name").Order(id)
    Data(bool,"value,name"){
        0,$@1ex_avaliable
        1,$@1ex_unavaliable
    }
    Div(row form-group){
        Div(col-sm-3 mt-sm text-right){
            Label(For: Name){
                Span(Body: LangRes(@1ex_symbol)
            }
            Span(Class: text-danger, Body:*)
        }
        Div(col-sm-9){
            Input(Name: name, Type: text)
        }
    }
    Div(row form-group){
        Div(col-sm-3 mt-sm text-right){
            Label(For: Pricetick){
                Span(Body: LangRes(@1ex_pricetick)
            }
            Span(Class: text-danger, Body:*)
        }
        Div(col-sm-9){
            Input(Name: pricetick, Type: number)
        }
    }
    Div(row form-group){
        Div(col-sm-3 mt-sm text-right){
            Label(For: Range){
                Span(Body: LangRes(@1ex_range)
            }
            Span(Class: text-danger, Body:*)
        }
        Div(col-sm-9){
            Input(Name: range, Type: number)
        }
    }
    Div(row form-group){
        Div(col-sm-3 mt-sm text-right){
            Label(For: LotSize){
                Span(Body: LangRes($@1ex_lotsize$)
            }
            Span(Class: text-danger, Body:*)
        }
        Div(col-sm-9){
            Input(Name: lotsize, Type: number)
        }
    }
    Div(row form-group){
        Div(col-sm-3 mt-sm text-right){
            Label(For: isTradeable){
                Span(Body: LangRes(@1ex_trade_status)
            }
            Span(Class: text-danger, Body:*)
        }
        Div(col-sm-9){
            RadioGroup(Name: isTradeable, Value: 1, Source: bool, ValueColumn: value, NameColumn: name)
        }
    }
    Div(row form-group){
        Div(col-sm-3 mt-sm text-right){
            Label(For: isCross){
                Span(Body: LangRes(@1ex_cross_trades)
            }
            Span(Class: text-danger, Body:*)
        }
        Div(col-sm-9){
            RadioGroup(Name: isCross, Value: 1, Source: bool, ValueColumn: value, NameColumn: name)
        }
    }
    Div(row form-group){
        Div(col-sm-3 mt-sm text-right){
            Label(For: isOTC){
                Span(Body: LangRes(@1ex_otc)
            }
            Span(Class: text-danger, Body:*)
        }
        Div(col-sm-9){
            RadioGroup(Name: isOTC, Value: 1, Source: bool, ValueColumn: value, NameColumn: name)
        }
    }
    Div(row form-group){
        Div(col-sm-3 mt-sm text-right){
            Label(For: ecosystem_hub){
                Span(Body: LangRes(@1ex_ecosystem_hub)
            }
            Span(Class: text-danger, Body:*)
        }
        Div(col-sm-9){
            Select(Name: ecosystem, Source: src_eco, NameColumn: name, ValueColumn: id)
        }
    }
    Div(row mt){
        Div(col-md-12){
            Button(Body: LangRes(@1back), Class: btn btn-default, Page: @1ex_listing)
            Button(Body: LangRes(@1create), Page: @1ex_listing, Class: btn pull-right btn-primary, Contract: @1ExSymbol, Params: "operation=C")
        }
    }
}