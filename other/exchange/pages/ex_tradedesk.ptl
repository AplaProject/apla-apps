DBFind(@1symbol).Where({id:#ticker_id#}).Vars(ticker)
DBFind(@1order_log).Where({"symbol":#ticker_name#,"status":"A","venue":"EX"}).Order({"price":"-1"}).Count(orders)
DBFind(@1keys).Where({"id":#key_id#, "ecosystem":1}).Custom(amount_money){
    SetVar(balance_primary,Money(#amount#))
}
DBFind(@1keys).Where({"id":#key_id#, "ecosystem":#ticker_ecosystem_hub#}).Custom(hub_money){
    SetVar(balance_hub,Money(#amount#))
}

Div(content-wrapper){
     Div(col-lg-12){
        Div(panel-body){
            Div(row){
                Span(Class: h3 text-primary, Body: #ticker_name#)
                Div(col-md-12){
                    DBFind(@1order_log,src_L1).Where({"status":"F","symbol":"#ticker_name#","venue":"EX"}).Order({"id":"1"}).Limit(1)
                    Table(Source: src_L1, Columns: "Flag=flag,Price=price,Quantity=quantity")
                }
            }
        }
    }
    Div(col-lg-6){
        Div(panel panel-primary){
            Div(panel-body){
                Div(row){
                    Div(col-md-10){
                        DBFind(@1order_log,src_L2).Where({"status":"F","symbol":"#ticker_name#","venue":"EX"}).Columns("id,price")
                        Chart(Type: "line", Source: src_L2, FieldLabel: "id", FieldValue: "price", Colors: "#e74c3c, #2ecc71, #8e44ad, #34495e, #ecf0f1, #F79F1F, #1B1464, #6F1E51") 
                    }
                }
            }
        }
        Div(panel panel-primary){
            Div(panel-body){
                Div(row){
                    Div(col-md-10){
                        DBFind(@1order_log,filled).Where({"symbol":"#ticker_name#","status":"F","venue":"EX", $or:[{"client": #key_id#},{"counterparty": #key_id#}]).Limit(5).Custom(price_money){
                            Money(#price#)
                        }.Count(tns)
                        Table(Source: filled, Columns: "Flag=flag,Price=price,Quantity=quantity") 
                    }
                }
            }
        }
    }
}
Div(col-lg-6){
    Form(panel panel-primary){
        Div(panel-body){
            Div(row){
                Div(col-md-12 text-left){
                    If(#orders# > 0){
                        DBFind(@1order_log,src_S).Where({"flag":"S","symbol":"#ticker_name#","status":"A","venue":"EX"}).Order({"price":"-1"}).Limit(20).Custom(price_money){
                                Money(#price#)
                        }.Custom(value_money){
                                Money(#client_value#) for Money(#counterparty_value#)
                        }.Custom(_button){
                            If(And(#ticker_cross#==1,#client#==#key_id#)){
                                Button(Body: LangRes(@1ex_buy), Class: btn btn-success, Page: @1ex_tradedesk, Contract: @1ExMatching, Params: "flag=B,venue=EX,client=#key_id#,id=#id#,quantity=#quantity#,price=#price#,symbol=#symbol#,status=F", PageParams: "ticker_id=#ticker_id#")
                            }
                            If(#client#!=#key_id#){
                                Button(Body: LangRes(@1ex_buy), Class: btn btn-success, Page: @1ex_tradedesk, Contract: @1ExMatching, Params: "flag=B,venue=EX,client=#key_id#,id=#id#,quantity=#quantity#,price=#price#,symbol=#symbol#,status=F", PageParams: "ticker_id=#ticker_id#")
                            }
                        }.Custom(_cancel){
                            If(#client#==#key_id#){
                                Button(Body: LangRes(@1ex_cancel), Class: btn btn-warning, Page: @1ex_tradedesk, Contract: @1ExCancelOrder, Params: "id=#id#,flag=#flag#,symbol=#symbol#", PageParams: "ticker_id=#ticker_id#")
                            }
                        }.Count(sell_orders)
                        If(#sell_orders# > 0){
                            Table(Source: src_S, Columns: "=_cancel,Flag=flag,Symbol=symbol,Quantity=quantity,Price=price_money,Value=value_money,=_button").Style(
                                tbody > tr > td {
                                    width: 10%;
                                    word-break: break-all;
                                    font-weight: 400;
                                    font-size: 13px;
                                    color: #666;
                                    border-top: 1px solid #eee;
                                    vertical-align: middle;
                                }
                            )
                        }
                        DBFind(@1order_log,src_B).Where({"flag":"B","symbol":"#ticker_name#","status":"A","venue":"EX"}).Order({"price":"-1"}).Limit(20).Custom(price_money){
                                Money(#price#)
                        }.Custom(value_money){
                                Money(#client_value#) for Money(#counterparty_value#)
                        }.Custom(_button){
                            If(And(#ticker_cross#==1,#client#==#key_id#)){
                                Button(Body: LangRes(@1ex_sell), Class: btn btn-danger, Page: @1ex_tradedesk, Contract: @1ExMatching, Params: "flag=S,venue=EX,client=#key_id#,id=#id#,quantity=#quantity#,price=#price#,symbol=#symbol#,status=F", PageParams: "ticker_id=#ticker_id#")
                            }
                            If(#client#!=#key_id#){
                                Button(Body: LangRes(@1ex_sell), Class: btn btn-danger, Page: @1ex_tradedesk, Contract: @1ExMatching, Params: "flag=S,venue=EX,client=#key_id#,id=#id#,quantity=#quantity#,price=#price#,symbol=#symbol#,status=F", PageParams: "ticker_id=#ticker_id#")
                            }
                        }.Custom(_cancel){
                            If(#client#==#key_id#){
                                Button(Body: LangRes(@1ex_cancel), Class: btn btn-warning, Page: @1ex_tradedesk, Contract: @1ExCancelOrder, Params: "id=#id#,flag=#flag#,symbol=#symbol#", PageParams: "ticker_id=#ticker_id#")
                            }
                        }.Count(buy_orders)
                        If(#buy_orders# > 0){
                            Table(Source: src_B, Columns: "=_cancel,Flag=flag,Symbol=symbol,Quantity=quantity,Price=price_money,Value=value_money,=_button").Style(
                                tbody > tr > td {
                                    width: 10%;
                                    word-break: break-all;
                                    font-weight: 400;
                                    font-size: 13px;
                                    color: #666;
                                    border-top: 1px solid #eee;
                                    vertical-align: middle;
                                }
                            )
                        }
                    }.Else{
                        Div(Class: h4 text-bold m0 text-center, Body: $@1ex_hint_no_orders$ #ticker_name#)
                    }
                }
            }
        }
    }
    Form(panel panel-primary){
        Div(panel-body){
            Div(row){
                Div(col-md-10){
                    Form(){
                        Div(row form-group){
                            Div(col-sm-3 mt-sm text-right){
                                Label(For: Balance){
                                    Span(Body: "Balance")
                                }
                            }
                            Div(col-sm-9){
                                Input(Name: name, Value: #balance_primary#, Disabled: true)
                            }
                        }
                        Div(row form-group){
                            Div(col-sm-3 mt-sm text-right){
                                Label(For: Ecosystem Hub Balance){
                                    Span(Body: "Ecosystem Hub Balance")
                                }
                            }
                            Div(col-sm-9){
                                Input(Name: name, Value: #balance_hub#, Disabled: true)
                            }
                        }
                        Div(row form-group){
                            Div(col-sm-3 mt-sm text-right){
                                Label(For: Quantity){
                                    Span(Body: LangRes(@1ex_quantity)
                                }
                            }
                            Div(col-sm-9){
                                Input(Name: quantity, Type: number)
                            }
                        }
                        Div(row form-group){
                            Div(col-sm-3 mt-sm text-right){
                                Label(For: Price){
                                    Span(Body: LangRes(@1ex_price)
                                }
                            }
                            Div(col-sm-9){
                                Input(Name: price, Type: number)
                            }
                        }
                        Div(row mt){
                            Div(col-md-12){
                                Div(){
                                    Button(Body: LangRes(@1ex_sell), Page: @1ex_tradedesk, Class: btn pull-left btn-danger, Contract: @1ExOrder, Params: "flag=S, symbol=#ticker_name#, client=#key_id#", PageParams: "ticker_id=#ticker_id#")
                                }
                                Div(){
                                    Button(Body: LangRes(@1ex_sell_otc), Page: @1ex_otc, Class: btn pull-left btn-danger, PageParams: "ticker_id=#ticker_id#, flag=S").Popup(Header: $@1ex_otc$, Width: "45")
                                }.Style(Button {margin-left:25px;})
                                Div(){
                                    Button(Body: LangRes(@1ex_buy), Page: @1ex_tradedesk, Class: btn pull-right btn-success, Contract: @1ExOrder, Params: "flag=B, symbol=#ticker_name#, client=#key_id#", PageParams: "ticker_id=#ticker_id#")
                                }.Style(Button {margin-left:25px;})
                                Div(){
                                    Button(Body: LangRes(@1ex_buy_otc), Page: @1ex_otc, Class: btn pull-right btn-success, PageParams: "ticker_id=#ticker_id#, flag=B").Popup(Header: $@1ex_otc$, Width: "45")
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}



